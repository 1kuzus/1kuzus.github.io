2:I[4365,["2202","static/chunks/2202-efd885462b29519a.js","244","static/chunks/244-0004e52d21d5023f.js","5726","static/chunks/app/(blogs)/23d/hust-cas-login/page-a61678ca6770ce01.js"],""]
3:I[4500,["2202","static/chunks/2202-efd885462b29519a.js","244","static/chunks/244-0004e52d21d5023f.js","5726","static/chunks/app/(blogs)/23d/hust-cas-login/page-a61678ca6770ce01.js"],""]
a:I[5613,[],""]
b:I[1778,[],""]
c:I[9806,["8792","static/chunks/8792-72030bcaaad25c8d.js","9135","static/chunks/app/(blogs)/layout-ec645125998de5a4.js"],""]
d:I[3393,["8792","static/chunks/8792-72030bcaaad25c8d.js","9135","static/chunks/app/(blogs)/layout-ec645125998de5a4.js"],""]
e:I[5694,["8792","static/chunks/8792-72030bcaaad25c8d.js","3185","static/chunks/app/layout-3908cdc9d8a494ca.js"],"GlobalProvider"]
f:I[397,["8792","static/chunks/8792-72030bcaaad25c8d.js","3185","static/chunks/app/layout-3908cdc9d8a494ca.js"],""]
4:T1431,navigator <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">appName</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
window <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">crypto</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">/*
* var encrypt = new JSEncrypt();
encrypt.setPublicKey(key);
var en = encrypt.encrypt('test');
* */</span>
<span class="token operator">!</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token string">"object"</span> <span class="token operator">==</span> <span class="token keyword">typeof</span> exports <span class="token operator">&amp;&amp;</span> <span class="token string">"undefined"</span> <span class="token operator">!=</span> <span class="token keyword">typeof</span> module <span class="token operator">?</span> <span class="token function">e</span><span class="token punctuation">(</span>exports<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">"function"</span> <span class="token operator">==</span> <span class="token keyword">typeof</span> define <span class="token operator">&amp;&amp;</span> define<span class="token punctuation">.</span>amd <span class="token operator">?</span> <span class="token function">define</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"exports"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>JSEncrypt <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token string">"use strict"</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token string">"0123456789abcdefghijklmnopqrstuvwxyz"</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> e<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">i</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> t <span class="token operator">&amp;</span> e
    <span class="token punctuation">}</span>

    <span class="token operator">...</span>

    window<span class="token punctuation">.</span>JSEncrypt <span class="token operator">=</span> rt<span class="token punctuation">,</span>
    t<span class="token punctuation">.</span>JSEncrypt <span class="token operator">=</span> rt<span class="token punctuation">,</span>
    t<span class="token punctuation">.</span>default <span class="token operator">=</span> rt<span class="token punctuation">,</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">"__esModule"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
5:T6b1,<span class="token keyword">var</span> encrypt<span class="token punctuation">;</span>
<span class="token operator">!</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//"object" == typeof exports &amp;&amp; "undefined" != typeof module ? e(exports) : "function" == typeof define &amp;&amp; define.amd ? define(["exports"], e) : e(t.JSEncrypt = {})</span>
    x<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token function">e</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    encrypt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">x<span class="token punctuation">.</span>JSEncrypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token string">"use strict"</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
6:T544,encrypt<span class="token punctuation">.</span><span class="token function">setPublicKey</span><span class="token punctuation">(</span><span class="token string">'MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJ7aKWURpJx4m8i4pB9P2pzNriT3UyhK6H20meKv8gFJmERA482JSi/DvZ4SkxP9INL5h8lGGvu5W3eTrpJaN3MCAwEAAQ=='</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">strEnc</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> encrypt<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">strEnc</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//I2ieJi6q7pnlVGytaeHMGr6ejhfyBSi7bjEYDSdf4OkgweOkO6cwNdsQawPdun3AQCYApG5XhT8+/KRq1GS30w==</span>
7:Tb91,<span class="token comment"># encrypt.py</span>
<span class="token keyword">import</span> execjs
<span class="token keyword">import</span> re
<span class="token keyword">import</span> os

<span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> public_key<span class="token punctuation">)</span><span class="token punctuation">:</span>
    root_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">"encrypt.js"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> js_file<span class="token punctuation">:</span>
        jscode <span class="token operator">=</span> js_file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    jscode <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r"setPublicKey\('(.*?)'\)"</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f"setPublicKey('</span><span class="token interpolation"><span class="token punctuation">{</span>public_key<span class="token punctuation">}</span></span><span class="token string">')"</span></span><span class="token punctuation">,</span> jscode<span class="token punctuation">)</span>
    encrypt_js <span class="token operator">=</span> execjs<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>jscode<span class="token punctuation">)</span>
    ul <span class="token operator">=</span> encrypt_js<span class="token punctuation">.</span>call<span class="token punctuation">(</span><span class="token string">"strEnc"</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span>
    pl <span class="token operator">=</span> encrypt_js<span class="token punctuation">.</span>call<span class="token punctuation">(</span><span class="token string">"strEnc"</span><span class="token punctuation">,</span> password<span class="token punctuation">)</span>
    <span class="token keyword">return</span> ul<span class="token punctuation">,</span> pl
8:T2ae8,<span class="token comment"># ocr.py</span>
<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image
<span class="token keyword">import</span> ddddocr
<span class="token keyword">import</span> numpy
<span class="token keyword">import</span> cv2
<span class="token keyword">import</span> io

<span class="token keyword">def</span> <span class="token function">ocr</span><span class="token punctuation">(</span>code_gif_bin<span class="token punctuation">)</span><span class="token punctuation">:</span>
    gif <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span>code_gif_bin<span class="token punctuation">)</span><span class="token punctuation">)</span>
    frames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        gif<span class="token punctuation">.</span>seek<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
        frames<span class="token punctuation">.</span>append<span class="token punctuation">(</span>numpy<span class="token punctuation">.</span>asarray<span class="token punctuation">(</span>gif<span class="token punctuation">)</span><span class="token punctuation">)</span>

    frames <span class="token operator">=</span> <span class="token punctuation">[</span>frame <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span>shape<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span> <span class="token keyword">else</span> frame<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> frame <span class="token keyword">in</span> frames<span class="token punctuation">]</span>  <span class="token comment"># 只用灰度图(RGB帧只拿一个通道)</span>
    frames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">255.0</span> <span class="token operator">-</span> frame <span class="token keyword">for</span> frame <span class="token keyword">in</span> frames<span class="token punctuation">]</span>  <span class="token comment"># 转换黑白(有字的地方将变成大值)</span>
    add <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span> <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>frames<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 将所有帧叠加，并再次转换黑白</span>
    add <span class="token operator">=</span> numpy<span class="token punctuation">.</span>where<span class="token punctuation">(</span>add <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> add<span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">"uint8"</span><span class="token punctuation">)</span>  <span class="token comment"># 叠加部分可能超过255，因此负值置零</span>
    add <span class="token operator">=</span> numpy<span class="token punctuation">.</span>where<span class="token punctuation">(</span>add <span class="token operator">&lt;</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>  <span class="token comment"># 二值化</span>

    <span class="token comment"># 过滤图像中的细边</span>
    flt <span class="token operator">=</span> numpy<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> h <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> add<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> w <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> add<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> add<span class="token punctuation">[</span>h<span class="token punctuation">]</span><span class="token punctuation">[</span>w<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">255</span><span class="token punctuation">:</span>
                <span class="token keyword">continue</span>
            x <span class="token operator">=</span> add<span class="token punctuation">[</span>h <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>h <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> w <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>w <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> flt
            <span class="token keyword">if</span> x<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">:</span>
                add<span class="token punctuation">[</span>h<span class="token punctuation">]</span><span class="token punctuation">[</span>w<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">255</span>

    <span class="token comment"># 预测</span>
    success<span class="token punctuation">,</span> img_byte <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imencode<span class="token punctuation">(</span><span class="token string">".png"</span><span class="token punctuation">,</span> add<span class="token punctuation">)</span>
    dddd <span class="token operator">=</span> ddddocr<span class="token punctuation">.</span>DdddOcr<span class="token punctuation">(</span>show_ad<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    res <span class="token operator">=</span> dddd<span class="token punctuation">.</span>classification<span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span>img_byte<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment"># 增强</span>
    res <span class="token operator">=</span> res<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"o"</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>
    res <span class="token operator">=</span> res<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"O"</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>
    res <span class="token operator">=</span> res<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"i"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span>
    res <span class="token operator">=</span> res<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"l"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span>
    res <span class="token operator">=</span> res<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"g"</span><span class="token punctuation">,</span> <span class="token string">"9"</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
9:T1bb2,<span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree
<span class="token keyword">from</span> <span class="token punctuation">.</span>ocr <span class="token keyword">import</span> ocr
<span class="token keyword">from</span> <span class="token punctuation">.</span>encrypt <span class="token keyword">import</span> encrypt
<span class="token keyword">import</span> requests

<span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span>url_cas<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> headers<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> proxies<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    url_captcha <span class="token operator">=</span> <span class="token string">"https://pass.hust.edu.cn/cas/code"</span>
    url_public_key <span class="token operator">=</span> <span class="token string">"https://pass.hust.edu.cn/cas/rsa"</span>
    <span class="token keyword">with</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> session<span class="token punctuation">:</span>
        <span class="token keyword">if</span> proxies <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            session<span class="token punctuation">.</span>proxies<span class="token punctuation">.</span>update<span class="token punctuation">(</span>proxies<span class="token punctuation">)</span>

        <span class="token comment"># get请求统一身份认证页，获取表单隐藏域的值</span>
        resp_get_url_cas <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url_cas<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
        tree <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>resp_get_url_cas<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
        lt <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"//input[@name='lt']/@value"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        execution <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"//input[@name='execution']/@value"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        eventId <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"//input[@name='_eventId']/@value"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

        <span class="token comment"># 请求验证码</span>
        code_gif_bin <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url_captcha<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>content
        code <span class="token operator">=</span> ocr<span class="token punctuation">(</span>code_gif_bin<span class="token operator">=</span>code_gif_bin<span class="token punctuation">)</span>

        public_key <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url_public_key<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'publicKey'</span><span class="token punctuation">]</span>
        ul<span class="token punctuation">,</span> pl <span class="token operator">=</span> encrypt<span class="token punctuation">(</span>username<span class="token operator">=</span>username<span class="token punctuation">,</span> password<span class="token operator">=</span>password<span class="token punctuation">,</span> public_key<span class="token operator">=</span>public_key<span class="token punctuation">)</span>
        data <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">"rsa"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
            <span class="token string">"ul"</span><span class="token punctuation">:</span> ul<span class="token punctuation">,</span>
            <span class="token string">"pl"</span><span class="token punctuation">:</span> pl<span class="token punctuation">,</span>
            <span class="token string">"code"</span><span class="token punctuation">:</span> code<span class="token punctuation">,</span>
            <span class="token string">"phoneCode"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
            <span class="token string">"lt"</span><span class="token punctuation">:</span> lt<span class="token punctuation">,</span>
            <span class="token string">"execution"</span><span class="token punctuation">:</span> execution<span class="token punctuation">,</span>
            <span class="token string">"_eventId"</span><span class="token punctuation">:</span> eventId<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url_cas<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> session
0:["emTW2YM-IRNVxjb1T-S5Y",[[["",{"children":["(blogs)",{"children":["23d",{"children":["hust-cas-login",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["(blogs)",{"children":["23d",{"children":["hust-cas-login",{"children":["__PAGE__",{},["$L1",[["$","h1",null,{"className":"x-title","children":"Python登录华科统一身份认证接口"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"登录地址是<a href=\"https://pass.hust.edu.cn/cas/login\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://pass.hust.edu.cn/cas/login</a>。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"程序的Github在<a href=\"https://github.com/1kuzus/HustCASLogin\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/1kuzus/HustCASLogin</a>。"}}],["$","$L2",null,{"src":"fig1.jpg","width":"100%"}],["$","h2",null,{"className":"x-h1","children":["$","$L3",null,{"excludeFromContents":"$undefined","children":"分析"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"我们大概知道登录接口一定是带了参数的<code class=\"x-inline-highlight\">POST</code>请求，核心是要构造出请求的参数。首先随便输入账号和密码，<code class=\"x-inline-highlight\">F12</code>打开调试窗口网络面板，查看请求："}}],["$","$L2",null,{"src":"fig2.jpg","width":"100%"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"显然我们要找的是<code class=\"x-inline-highlight\">login</code>，点开详情："}}],["$","$L2",null,{"src":"fig3.jpg","width":"100%"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"下面是参数的含义，如果你不想看详细的分析过程，可以阅读后直接跳到下一节："}}],["$","div",null,{"className":"x-table-wrapper","children":["$","table",null,{"className":"x-table","children":["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">rsa</code>"}}]}],["$","td",null,{"children":"弃置"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">ul</code>"}}]}],["$","td",null,{"children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"根据<code class=\"x-inline-highlight\">username</code>前端加密"}}]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">pl</code>"}}]}],["$","td",null,{"children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"根据<code class=\"x-inline-highlight\">password</code>前端加密"}}]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">code</code>"}}]}],["$","td",null,{"children":"验证码"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">phoneCode</code>"}}]}],["$","td",null,{"children":"留空即可"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">lt</code>"}}]}],["$","td",null,{"children":"固定参数"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">execution</code>"}}]}],["$","td",null,{"children":"固定参数"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">_eventId</code>"}}]}],["$","td",null,{"children":"固定参数"}]]}]]}]}]}],["$","div",null,{"className":"x-highlightblock highlight-background-golden","children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"此处有一个历史缘故。在2023年1月的时候，<code class=\"x-inline-highlight\">ul</code>和<code class=\"x-inline-highlight\">pl</code>是明文的用户名和密码的字符串长度，这也符合参数名<code class=\"x-inline-highlight\">username length(ul)</code>，<code class=\"x-inline-highlight\">rsa</code>是前端加密参数。后来华科登录接口似乎经历了一次改版，弃置了<code class=\"x-inline-highlight\">rsa</code>参数，<code class=\"x-inline-highlight\">ul</code>和<code class=\"x-inline-highlight\">pl</code>变成了现在的意义。"}}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"言归正传，在没有预先知道参数含义的情况下，先从看起来是明文形式的后两个参数入手，直接搜索<code class=\"x-inline-highlight\">_eventId</code>，找到了<code class=\"x-inline-highlight\">html</code>中写表单的隐藏域（也就是<code class=\"x-inline-highlight\">input type=\"hidden\"</code>）的位置："}}],["$","$L2",null,{"src":"fig4.jpg","width":"100%"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"我们发现最后三个参数<code class=\"x-inline-highlight\">value</code>值非空，是可以直接从<code class=\"x-inline-highlight\">html</code>文档中读取的固定参数，尽管每次请求时他们可能不同。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"到这里，我们只剩<code class=\"x-inline-highlight\">ul</code>，<code class=\"x-inline-highlight\">pl</code>，<code class=\"x-inline-highlight\">code</code>参数需要构造，分别需要进行逆向和OCR。"}}],["$","h2",null,{"className":"x-h1","children":["$","$L3",null,{"excludeFromContents":"$undefined","children":"逆向"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"切换到源代码面板，新建一个<code class=\"x-inline-highlight\">XHR/提取断点</code>，在“网址包含”填入主机<code class=\"x-inline-highlight\">pass.hust.edu.cn</code>，这样在<code class=\"x-inline-highlight\">POST</code>登录接口时一定会暂停："}}],["$","$L2",null,{"src":"fig5.jpg","width":"100%"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这样做的目的是找到登录请求的调用链："}}],["$","$L2",null,{"src":"fig6.jpg","width":"100%"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这样一步一步向下找，在<code class=\"x-inline-highlight\">login</code>中看到了前端加密对应的代码："}}],["$","$L2",null,{"src":"fig7.jpg","width":"100%"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"我们把原来的断点取消，在<code class=\"x-inline-highlight\">setPublicKey</code>和对<code class=\"x-inline-highlight\">ul</code>加密的地方加入新的断点。"}}],["$","$L2",null,{"src":"fig8.jpg","width":"100%"}],["$","$L2",null,{"src":"fig9.jpg","width":"100%"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"找到加密函数的位置了，我们跳转到<code class=\"x-inline-highlight\">jsencrypt.min.js</code>（注释里给出了正常用法）："}}],["$","$L2",null,{"src":"fig10.jpg","width":"100%"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"现在把整个代码复制到本地进行修改。在本地初次运行，首先是会因为本地是<code class=\"x-inline-highlight\">node</code>环境遇到下面的报错："}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"\"Microsoft Internet Explorer\" == navigator.appName ? (O.prototype.am = function (t, e, i, r, n, s) {\n                                 ^\n\nReferenceError: navigator is not defined\n"}}]}]}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"if (window.crypto &amp;&amp; window.crypto.getRandomValues) {\n    ^\n\nReferenceError: window is not defined\n"}}]}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"所以根据源代码内容，在文件最前面写这两行，只需要消掉报错即可："}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"navigator <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">appName</span><span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nwindow <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">crypto</span><span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n"}}]}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"接下来分析代码结构，因为源代码很长，所以中间的功能函数省略了："}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 504px, var(--bg-transparent-golden) 504px 552px, transparent 552px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$4"}}]}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"最外层是一个立即执行函数，参数列表<code class=\"x-inline-highlight\">this</code>传给了<code class=\"x-inline-highlight\">t</code>，后面一整个<code class=\"x-inline-highlight\">function(t)</code>传给了<code class=\"x-inline-highlight\">e</code>。分析一下第二个参数也就是函数<code class=\"x-inline-highlight\">function(t)</code>的功能，在最后看到了<code class=\"x-inline-highlight\">window.JSEncrypt=rt</code>和<code class=\"x-inline-highlight\">t.JSEncrypt=rt</code>，再看注释中提示的用法:"}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">var</span> encrypt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JSEncrypt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"}}]}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"不难看出在浏览器环境中<code class=\"x-inline-highlight\">rt</code>直接赋值给了<code class=\"x-inline-highlight\">window.JSEncrypt</code>，同时我们的<code class=\"x-inline-highlight\">node</code>环境如果想利用<code class=\"x-inline-highlight\">rt</code>，就要从<code class=\"x-inline-highlight\">t</code>中取出。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"回到代码最前面，立即执行函数体可以删掉，改成如下内容："}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 0px, var(--bg-transparent-golden) 0px 24px, transparent 24px, transparent 72px, var(--bg-transparent-golden) 72px 144px, transparent 144px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$5"}}]}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"然后我们在代码最后定义一个加密函数："}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$6"}}]}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"可以得到加密的字符串。这里的<code class=\"x-inline-highlight\">publicKey</code>是调试时复制来的值。我们不清楚这是不是一个固定的参数，因此同样分析一下这个参数的来源："}}],["$","$L2",null,{"src":"fig11.jpg","width":"100%"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"前面抓包时注意到有一个<code class=\"x-inline-highlight\">XHR</code>请求，实际上这就是<code class=\"x-inline-highlight\">publicKey</code>。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"至此我们已经可以在本地<code class=\"x-inline-highlight\">node</code>环境跑通加密<code class=\"x-inline-highlight\">js</code>，我们把它命名为<code class=\"x-inline-highlight\">encrypt.js</code>并创建一个稍后服务于爬虫程序的模块<code class=\"x-inline-highlight\">encrypt.py</code>："}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$7"}}]}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这个模块根据传入的<code class=\"x-inline-highlight\">public_key</code>替换<code class=\"x-inline-highlight\">js</code>源代码中的部分，再编译，最后在<code class=\"x-inline-highlight\">Python</code>环境中调用<code class=\"x-inline-highlight\">js</code>代码得到加密结果。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-golden","children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"到目前位置，<code class=\"x-inline-highlight\">public_key</code>参数一直都是同一个值（<code class=\"x-inline-highlight\">MFwwDQYJKo...</code>）。"}}]}],["$","h2",null,{"className":"x-h1","children":["$","$L3",null,{"excludeFromContents":"$undefined","children":"OCR"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"华科的验证码是一个四位数字，干扰比较小，属于非常简单的验证码。验证码请求的地址是<a href=\"https://pass.hust.edu.cn/cas/code\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://pass.hust.edu.cn/cas/code</a>。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"核心的识别逻辑使用<code class=\"x-inline-highlight\">ddddocr</code>库就可以了，不需要借助付费的打码平台。"}}],["$","p",null,{"className":"x-p no-margin-bottom","dangerouslySetInnerHTML":{"__html":"验证码是<code class=\"x-inline-highlight\">gif</code>格式，考虑将所有帧叠加，再做二值化："}}],["$","$L2",null,{"src":"fig12.jpg","width":"160px"}],["$","p",null,{"className":"x-p no-margin-bottom","dangerouslySetInnerHTML":{"__html":"发现图像中会有干扰的细边，再做一次中值滤波："}}],["$","$L2",null,{"src":"fig13.jpg","width":"160px"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"处理过后的图像调库检测即可，OCR的源代码如下："}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$8"}}]}]}],["$","h2",null,{"className":"x-h1","children":["$","$L3",null,{"excludeFromContents":"$undefined","children":"登录"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"最后就是登录部分，源代码如下："}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}]}]],null]]},["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","(blogs)","children","23d","children","hust-cas-login","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/6784fb652cb985a8.css","precedence":"next","crossOrigin":""}]]}]]},["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","(blogs)","children","23d","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","div",null,{"id":"blog-layout","children":[["$","div",null,{"id":"main","children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","(blogs)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]}],["$","$Lc",null,{}],["$","$Ld",null,{}]]}],null]]},[null,["$","html",null,{"lang":"zh-CN","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-45BYSZ6WPY"}],["$","script",null,{"async":true,"src":"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag() {\n    dataLayer.push(arguments);\n}\ngtag('js', new Date());\ngtag('config', 'G-45BYSZ6WPY');\n"}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"const a=z=>h.getItem(z),b=(y,z)=>h.setItem(y,z),c=(y,z)=>document.documentElement.setAttribute(y,z),d='theme',e='dark',f='light',g='class',h=localStorage;a(d)!==e&&a(d)!==f&&b(d,f);a(d)===e?c(g,e):c(g,f);"}}]]}],["$","body",null,{"children":["$","$Le",null,{"children":[["$","$Lf",null,{}],["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"id":"notfound","children":[["$","img",null,{"alt":"img","src":"/images/cry.gif"}],["$","div",null,{"id":"notfound-404","children":"404"}],["$","div",null,{"id":"notfound-text","children":"Page Not Found"}]]}],"notFoundStyles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/eccd2e7a1149e571.css","precedence":"next","crossOrigin":""}]],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/391c9d793ecdcfc9.css","precedence":"next","crossOrigin":""}]]}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/8db7bbe3a5da787b.css","precedence":"next","crossOrigin":""}]],"$L10"]]]]
10:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Python登录华科统一身份认证接口 - 铃木的网络日记"}],["$","link","3",{"rel":"canonical","href":"https://1kuzus.github.io/23d/hust-cas-login/"}]]
1:null
