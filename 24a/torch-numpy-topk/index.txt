2:I[55329,["481","static/chunks/457b8330-69f8bab043e7caf2.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","250","static/chunks/250-0ef8476c0fa8ee24.js","612","static/chunks/612-c60a65f28e774a61.js","548","static/chunks/548-617600d488b129da.js","877","static/chunks/app/%5B...slug%5D/page-f6d87b9e38490711.js"],""]
3:I[93334,["481","static/chunks/457b8330-69f8bab043e7caf2.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","250","static/chunks/250-0ef8476c0fa8ee24.js","612","static/chunks/612-c60a65f28e774a61.js","548","static/chunks/548-617600d488b129da.js","877","static/chunks/app/%5B...slug%5D/page-f6d87b9e38490711.js"],""]
4:"$Sreact.suspense"
6:I[30389,["481","static/chunks/457b8330-69f8bab043e7caf2.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","250","static/chunks/250-0ef8476c0fa8ee24.js","612","static/chunks/612-c60a65f28e774a61.js","548","static/chunks/548-617600d488b129da.js","877","static/chunks/app/%5B...slug%5D/page-f6d87b9e38490711.js"],""]
7:I[5613,[],""]
9:I[31778,[],""]
a:I[25694,["250","static/chunks/250-0ef8476c0fa8ee24.js","185","static/chunks/app/layout-1d2bc4fd3a10012b.js"],"GlobalProvider"]
b:I[30397,["250","static/chunks/250-0ef8476c0fa8ee24.js","185","static/chunks/app/layout-1d2bc4fd3a10012b.js"],""]
8:["slug","24a/torch-numpy-topk","c"]
0:["IdvkmivV1yMyuGW7YkNlO",[[["",{"children":[["slug","24a/torch-numpy-topk","c"],{"children":["__PAGE__?{\"slug\":[\"24a\",\"torch-numpy-topk\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","24a/torch-numpy-topk","c"],{"children":["__PAGE__",{},["$L1",[["$","$L2",null,{}],["$","div",null,{"id":"post-layout","children":[false,["$","div",null,{"id":"main","className":"center-wrapper","children":[["$","h1",null,{"className":"x-title","children":"在pytorch和numpy中取top-k值和索引"}],["$","$L3",null,{"path":"/24a/torch-numpy-topk/"}],["$","$4",null,{"fallback":["$","p",null,{"children":"Loading..."}],"children":["$","$4",null,{"fallback":["$","p",null,{"children":"Loading component..."}],"children":"$L5"}]}]]}],["$","$L6",null,{}]]}]],null]]},["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","$8","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/bbed0a6749b7e17d.css","precedence":"next","crossOrigin":""}]]}]]},[null,["$","html",null,{"lang":"zh-CN","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon"}],["$","script",null,{"async":true,"src":"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-45BYSZ6WPY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag() {\n    dataLayer.push(arguments);\n}\ngtag('js', new Date());\ngtag('config', 'G-45BYSZ6WPY');\n"}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"const a=z=>h.getItem(z),b=(y,z)=>h.setItem(y,z),c=(y,z)=>document.documentElement.setAttribute(y,z),d='theme',e='dark',f='light',g='class',h=localStorage;a(d)!==e&&a(d)!==f&&b(d,f);a(d)===e?c(g,e):c(g,f);"}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\nif (!Array.prototype.findLast) {\n    Array.prototype.findLast = function (callback) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (callback(this[i])) return this[i];\n        }\n        return undefined;\n    };\n}\nif (!Array.prototype.findLastIndex) {\n    Array.prototype.findLastIndex = function (callback) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (callback(this[i])) return i;\n        }\n        return -1;\n    };\n}\n"}}]]}],["$","body",null,{"children":["$","$La",null,{"children":[["$","$Lb",null,{}],["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"id":"notfound","children":[["$","img",null,{"alt":"img","src":"/images/cry.gif"}],["$","code",null,{"id":"notfound-404","children":"404"}],["$","code",null,{"id":"notfound-text","children":"Page Not Found"}]]}],"notFoundStyles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e601cf5ba3633d.css","precedence":"next","crossOrigin":""}]],"styles":null}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/3a4cd9abec87d3dc.css","precedence":"next","crossOrigin":""}]],"$Lc"]]]]
d:I[62029,["481","static/chunks/457b8330-69f8bab043e7caf2.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","250","static/chunks/250-0ef8476c0fa8ee24.js","612","static/chunks/612-c60a65f28e774a61.js","548","static/chunks/548-617600d488b129da.js","877","static/chunks/app/%5B...slug%5D/page-f6d87b9e38490711.js"],""]
e:T991,<span class="token keyword">import</span> numpy
<span class="token keyword">import</span> torch

<span class="token comment">#numpy</span>
arr<span class="token operator">=</span>numpy<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">#torch</span>
tsr<span class="token operator">=</span>torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
f:T478,val<span class="token punctuation">,</span>idx<span class="token operator">=</span>torch<span class="token punctuation">.</span>topk<span class="token punctuation">(</span>tsr<span class="token punctuation">,</span>k<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token comment"># tensor([[8, 7, 5],</span>
<span class="token comment">#         [9, 8, 4],</span>
<span class="token comment">#         [8, 6, 5],</span>
<span class="token comment">#         [6, 5, 4]])</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span>
<span class="token comment"># tensor([[4, 3, 2],</span>
<span class="token comment">#         [0, 3, 4],</span>
<span class="token comment">#         [0, 4, 1],</span>
<span class="token comment">#         [3, 4, 2]])</span>
10:T6d0,sorted_idx<span class="token operator">=</span>numpy<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token operator">-</span>val<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
idx<span class="token operator">=</span>numpy<span class="token punctuation">.</span>take_along_axis<span class="token punctuation">(</span>idx<span class="token punctuation">,</span>indices<span class="token operator">=</span>sorted_idx<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
val<span class="token operator">=</span>numpy<span class="token punctuation">.</span>take_along_axis<span class="token punctuation">(</span>val<span class="token punctuation">,</span>indices<span class="token operator">=</span>sorted_idx<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token comment"># [[8 7 5]</span>
<span class="token comment">#  [9 8 4]</span>
<span class="token comment">#  [8 6 5]</span>
<span class="token comment">#  [6 5 4]]</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span>
<span class="token comment"># [[4 3 2]</span>
<span class="token comment">#  [0 3 4]</span>
<span class="token comment">#  [0 4 1]</span>
<span class="token comment">#  [3 4 2]]</span>
11:Ta21,<span class="token keyword">def</span> <span class="token function">topk_numpy</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>k<span class="token punctuation">,</span>dim<span class="token punctuation">)</span><span class="token punctuation">:</span>
    idx<span class="token operator">=</span>numpy<span class="token punctuation">.</span>argpartition<span class="token punctuation">(</span><span class="token operator">-</span>arr<span class="token punctuation">,</span>kth<span class="token operator">=</span>k<span class="token punctuation">,</span>axis<span class="token operator">=</span>dim<span class="token punctuation">)</span>
    idx<span class="token operator">=</span>idx<span class="token punctuation">.</span>take<span class="token punctuation">(</span>indices<span class="token operator">=</span><span class="token builtin">range</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">,</span>axis<span class="token operator">=</span>dim<span class="token punctuation">)</span>
    val<span class="token operator">=</span>numpy<span class="token punctuation">.</span>take_along_axis<span class="token punctuation">(</span>arr<span class="token punctuation">,</span>indices<span class="token operator">=</span>idx<span class="token punctuation">,</span>axis<span class="token operator">=</span>dim<span class="token punctuation">)</span>
    sorted_idx<span class="token operator">=</span>numpy<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token operator">-</span>val<span class="token punctuation">,</span>axis<span class="token operator">=</span>dim<span class="token punctuation">)</span>
    idx<span class="token operator">=</span>numpy<span class="token punctuation">.</span>take_along_axis<span class="token punctuation">(</span>idx<span class="token punctuation">,</span>indices<span class="token operator">=</span>sorted_idx<span class="token punctuation">,</span>axis<span class="token operator">=</span>dim<span class="token punctuation">)</span>
    val<span class="token operator">=</span>numpy<span class="token punctuation">.</span>take_along_axis<span class="token punctuation">(</span>val<span class="token punctuation">,</span>indices<span class="token operator">=</span>sorted_idx<span class="token punctuation">,</span>axis<span class="token operator">=</span>dim<span class="token punctuation">)</span>
    <span class="token keyword">return</span> val<span class="token punctuation">,</span>idx
12:Tabc,bigarr<span class="token operator">=</span>numpy<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">)</span>
bigtsr<span class="token operator">=</span>torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span>bigarr<span class="token punctuation">)</span>

val_t<span class="token punctuation">,</span>idx_t<span class="token operator">=</span>torch<span class="token punctuation">.</span>topk<span class="token punctuation">(</span>bigtsr<span class="token punctuation">,</span>k<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span>dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
val_n<span class="token punctuation">,</span>idx_n<span class="token operator">=</span>topk_numpy<span class="token punctuation">(</span>bigarr<span class="token punctuation">,</span>k<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span>dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>val_n<span class="token punctuation">.</span>shape<span class="token punctuation">)</span> <span class="token comment">#(64, 7, 24, 24)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numpy<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span>val_t<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>val_n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numpy<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span>idx_t<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>idx_n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#True</span>
5:[["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"我们定义这样一个数组："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Ld",null,{"className":"x-codeblock-header-copy","text":"import numpy\nimport torch\n\n#numpy\narr=numpy.array([\n    [1,4,5,7,8],\n    [9,1,2,8,4],\n    [8,5,1,3,6],\n    [3,2,4,6,5],\n])\n\n#torch\ntsr=torch.tensor(arr)\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$e"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"我们希望沿第<code class=\"x-inline-highlight\">1</code>维度也就是列维度取前<code class=\"x-inline-highlight\">3</code>大的数值，也就是其他维度保持不变，将列维度变为<code class=\"x-inline-highlight\">3</code>，并且保留的是前三大的元素。"}}],["$","h2",null,{"className":"x-h1","children":"pytorch"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"在pytorch中已经内置了<code class=\"x-inline-highlight\">topk</code>函数："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Ld",null,{"className":"x-codeblock-header-copy","text":"val,idx=torch.topk(tsr,k=3,dim=1)\n\nprint(val)\n# tensor([[8, 7, 5],\n#         [9, 8, 4],\n#         [8, 6, 5],\n#         [6, 5, 4]])\n\nprint(idx)\n# tensor([[4, 3, 2],\n#         [0, 3, 4],\n#         [0, 4, 1],\n#         [3, 4, 2]])\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$f"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">val</code>输出了前三大元素的值，<code class=\"x-inline-highlight\">idx</code>是索引，这已经是想要的结果了。"}}],["$","h2",null,{"className":"x-h1","children":"numpy"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"numpy中没有直接实现<code class=\"x-inline-highlight\">topk</code>功能的函数，需要多一些步骤："}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"首先使用<code class=\"x-inline-highlight\">numpy.argpartition</code>函数，这个函数会将下标为<code class=\"x-inline-highlight\">kth</code>的元素排列到其正确位置并返回索引，保证其左边的元素都比它小，右边的元素都比它大，但左右两侧的序列并不一定是有序的。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"由于<code class=\"x-inline-highlight\">numpy.argpartition</code>的排列顺序是从小到大，为了得到从大到小的索引，对输入<code class=\"x-inline-highlight\">arr</code>取了负值。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Ld",null,{"className":"x-codeblock-header-copy","text":"idx=numpy.argpartition(-arr,kth=3,axis=1)\nprint(idx)\n# [[3 4 2 1 0]\n#  [3 0 4 2 1]\n#  [0 4 1 3 2]\n#  [3 4 2 0 1]]\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"idx<span class=\"token operator\">=</span>numpy<span class=\"token punctuation\">.</span>argpartition<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>arr<span class=\"token punctuation\">,</span>kth<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [[3 4 2 1 0]</span>\n<span class=\"token comment\">#  [3 0 4 2 1]</span>\n<span class=\"token comment\">#  [0 4 1 3 2]</span>\n<span class=\"token comment\">#  [3 4 2 0 1]]</span>\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"第二步，我们只留下前<code class=\"x-inline-highlight\">k</code>大的元素的索引："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Ld",null,{"className":"x-codeblock-header-copy","text":"idx=idx.take(indices=range(3),axis=1)\nprint(idx)\n# [[3 4 2]\n#  [3 0 4]\n#  [0 4 1]\n#  [3 4 2]]\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"idx<span class=\"token operator\">=</span>idx<span class=\"token punctuation\">.</span>take<span class=\"token punctuation\">(</span>indices<span class=\"token operator\">=</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [[3 4 2]</span>\n<span class=\"token comment\">#  [3 0 4]</span>\n<span class=\"token comment\">#  [0 4 1]</span>\n<span class=\"token comment\">#  [3 4 2]]</span>\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"第三步，需要通过<code class=\"x-inline-highlight\">numpy.take_along_axis</code>函数得到按<code class=\"x-inline-highlight\">idx</code>排列的数组。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Ld",null,{"className":"x-codeblock-header-copy","text":"val=numpy.take_along_axis(arr,indices=idx,axis=1)\nprint(val)\n# [[7 8 5]\n#  [8 9 4]\n#  [8 6 5]\n#  [6 5 4]]\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"val<span class=\"token operator\">=</span>numpy<span class=\"token punctuation\">.</span>take_along_axis<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span>indices<span class=\"token operator\">=</span>idx<span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [[7 8 5]</span>\n<span class=\"token comment\">#  [8 9 4]</span>\n<span class=\"token comment\">#  [8 6 5]</span>\n<span class=\"token comment\">#  [6 5 4]]</span>\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"到现在为止，我们已经得到了<span class=\"x-inline-strong\">乱序</span>的数组值和索引值，因此最后一步是使用<code class=\"x-inline-highlight\">numpy.argsort</code>进行排序。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Ld",null,{"className":"x-codeblock-header-copy","text":"sorted_idx=numpy.argsort(-val,axis=1)\nidx=numpy.take_along_axis(idx,indices=sorted_idx,axis=1)\nval=numpy.take_along_axis(val,indices=sorted_idx,axis=1)\n\nprint(val)\n# [[8 7 5]\n#  [9 8 4]\n#  [8 6 5]\n#  [6 5 4]]\n\nprint(idx)\n# [[4 3 2]\n#  [0 3 4]\n#  [0 4 1]\n#  [3 4 2]]\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$10"}}]}]]}],["$","h2",null,{"className":"x-h1","children":"封装"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"我们可以在numpy中封装一个和torch的<code class=\"x-inline-highlight\">topk</code>类似的函数："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Ld",null,{"className":"x-codeblock-header-copy","text":"def topk_numpy(arr,k,dim):\n    idx=numpy.argpartition(-arr,kth=k,axis=dim)\n    idx=idx.take(indices=range(k),axis=dim)\n    val=numpy.take_along_axis(arr,indices=idx,axis=dim)\n    sorted_idx=numpy.argsort(-val,axis=dim)\n    idx=numpy.take_along_axis(idx,indices=sorted_idx,axis=dim)\n    val=numpy.take_along_axis(val,indices=sorted_idx,axis=dim)\n    return val,idx\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$11"}}]}]]}],["$","div",null,{"className":"x-highlightblock highlight-background-golden","children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这个函数只实现了torch库中<code class=\"x-inline-highlight\">topk</code>函数最基本的功能，并不全面~"}}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"检验一下是否正确："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Ld",null,{"className":"x-codeblock-header-copy","text":"bigarr=numpy.random.rand(64,16,24,24)\nbigtsr=torch.tensor(bigarr)\n\nval_t,idx_t=torch.topk(bigtsr,k=7,dim=1)\nval_n,idx_n=topk_numpy(bigarr,k=7,dim=1)\n\nprint(val_n.shape) #(64, 7, 24, 24)\nprint(numpy.all(val_t.numpy()==val_n)) #True\nprint(numpy.all(idx_t.numpy()==idx_n)) #True\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$12"}}]}]]}],["$","h2",null,{"className":"x-h1","children":"讨论"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"上述方法核心是<span class=\"x-inline-strong\">先切片、再排序</span>。这是由于<code class=\"x-inline-highlight\">argpartition</code>和<code class=\"x-inline-highlight\">argsort</code>的性能差异："}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">argsort</code>对全部数组进行排序，而<code class=\"x-inline-highlight\">argpartition</code>只进行一次类似快速排序算法中的划分操作，因此<code class=\"x-inline-highlight\">argpartition</code>效率更高。对于<code class=\"x-inline-highlight\">topk</code>函数想要实现的功能，尽管先全排序、再切片从代码上更好编写，但当<code class=\"x-inline-highlight\">k</code>远小于<code class=\"x-inline-highlight\">dim</code>维度大小时，是较为低效的做法。"}}]]
c:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"在pytorch和numpy中取top-k值和索引 - 铃木的网络日记"}],["$","link","3",{"rel":"canonical","href":"https://1kuzus.github.io/24a/torch-numpy-topk/"}]]
1:null
