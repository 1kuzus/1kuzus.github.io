3:I[4500,["202","static/chunks/202-fbcb7cc54bf4f9f2.js","452","static/chunks/452-25327cca6690da96.js","857","static/chunks/app/(blogs)/24a/torch-numpy-topk/page-fab8271582147c4b.js"],""]
8:I[5613,[],""]
9:I[1778,[],""]
a:I[9806,["792","static/chunks/792-a494ddef3d40c017.js","135","static/chunks/app/(blogs)/layout-565e6400d12a9f60.js"],""]
b:I[3393,["792","static/chunks/792-a494ddef3d40c017.js","135","static/chunks/app/(blogs)/layout-565e6400d12a9f60.js"],""]
c:I[5694,["792","static/chunks/792-a494ddef3d40c017.js","185","static/chunks/app/layout-fee515b4ccc2d098.js"],"GlobalProvider"]
d:I[397,["792","static/chunks/792-a494ddef3d40c017.js","185","static/chunks/app/layout-fee515b4ccc2d098.js"],""]
2:T991,<span class="token keyword">import</span> numpy
<span class="token keyword">import</span> torch

<span class="token comment">#numpy</span>
arr<span class="token operator">=</span>numpy<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">#torch</span>
tsr<span class="token operator">=</span>torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
4:T478,val<span class="token punctuation">,</span>idx<span class="token operator">=</span>torch<span class="token punctuation">.</span>topk<span class="token punctuation">(</span>tsr<span class="token punctuation">,</span>k<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token comment"># tensor([[8, 7, 5],</span>
<span class="token comment">#         [9, 8, 4],</span>
<span class="token comment">#         [8, 6, 5],</span>
<span class="token comment">#         [6, 5, 4]])</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span>
<span class="token comment"># tensor([[4, 3, 2],</span>
<span class="token comment">#         [0, 3, 4],</span>
<span class="token comment">#         [0, 4, 1],</span>
<span class="token comment">#         [3, 4, 2]])</span>
5:T6d0,sorted_idx<span class="token operator">=</span>numpy<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token operator">-</span>val<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
idx<span class="token operator">=</span>numpy<span class="token punctuation">.</span>take_along_axis<span class="token punctuation">(</span>idx<span class="token punctuation">,</span>indices<span class="token operator">=</span>sorted_idx<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
val<span class="token operator">=</span>numpy<span class="token punctuation">.</span>take_along_axis<span class="token punctuation">(</span>val<span class="token punctuation">,</span>indices<span class="token operator">=</span>sorted_idx<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token comment"># [[8 7 5]</span>
<span class="token comment">#  [9 8 4]</span>
<span class="token comment">#  [8 6 5]</span>
<span class="token comment">#  [6 5 4]]</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span>
<span class="token comment"># [[4 3 2]</span>
<span class="token comment">#  [0 3 4]</span>
<span class="token comment">#  [0 4 1]</span>
<span class="token comment">#  [3 4 2]]</span>
6:Ta21,<span class="token keyword">def</span> <span class="token function">topk_numpy</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>k<span class="token punctuation">,</span>dim<span class="token punctuation">)</span><span class="token punctuation">:</span>
    idx<span class="token operator">=</span>numpy<span class="token punctuation">.</span>argpartition<span class="token punctuation">(</span><span class="token operator">-</span>arr<span class="token punctuation">,</span>kth<span class="token operator">=</span>k<span class="token punctuation">,</span>axis<span class="token operator">=</span>dim<span class="token punctuation">)</span>
    idx<span class="token operator">=</span>idx<span class="token punctuation">.</span>take<span class="token punctuation">(</span>indices<span class="token operator">=</span><span class="token builtin">range</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">,</span>axis<span class="token operator">=</span>dim<span class="token punctuation">)</span>
    val<span class="token operator">=</span>numpy<span class="token punctuation">.</span>take_along_axis<span class="token punctuation">(</span>arr<span class="token punctuation">,</span>indices<span class="token operator">=</span>idx<span class="token punctuation">,</span>axis<span class="token operator">=</span>dim<span class="token punctuation">)</span>
    sorted_idx<span class="token operator">=</span>numpy<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token operator">-</span>val<span class="token punctuation">,</span>axis<span class="token operator">=</span>dim<span class="token punctuation">)</span>
    idx<span class="token operator">=</span>numpy<span class="token punctuation">.</span>take_along_axis<span class="token punctuation">(</span>idx<span class="token punctuation">,</span>indices<span class="token operator">=</span>sorted_idx<span class="token punctuation">,</span>axis<span class="token operator">=</span>dim<span class="token punctuation">)</span>
    val<span class="token operator">=</span>numpy<span class="token punctuation">.</span>take_along_axis<span class="token punctuation">(</span>val<span class="token punctuation">,</span>indices<span class="token operator">=</span>sorted_idx<span class="token punctuation">,</span>axis<span class="token operator">=</span>dim<span class="token punctuation">)</span>
    <span class="token keyword">return</span> val<span class="token punctuation">,</span>idx
7:Tabc,bigarr<span class="token operator">=</span>numpy<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">)</span>
bigtsr<span class="token operator">=</span>torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span>bigarr<span class="token punctuation">)</span>

val_t<span class="token punctuation">,</span>idx_t<span class="token operator">=</span>torch<span class="token punctuation">.</span>topk<span class="token punctuation">(</span>bigtsr<span class="token punctuation">,</span>k<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span>dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
val_n<span class="token punctuation">,</span>idx_n<span class="token operator">=</span>topk_numpy<span class="token punctuation">(</span>bigarr<span class="token punctuation">,</span>k<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span>dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>val_n<span class="token punctuation">.</span>shape<span class="token punctuation">)</span> <span class="token comment">#(64, 7, 24, 24)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numpy<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span>val_t<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>val_n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>numpy<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span>idx_t<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>idx_n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#True</span>
0:["HIlA3j4Igwf_YBWZLyozd",[[["",{"children":["(blogs)",{"children":["24a",{"children":["torch-numpy-topk",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["(blogs)",{"children":["24a",{"children":["torch-numpy-topk",{"children":["__PAGE__",{},["$L1",[["$","h1",null,{"className":"x-title","children":"在pytorch和numpy中取top-k值和索引"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"我们定义这样一个数组："}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$2"}}]}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"我们希望沿第<code class=\"x-inline-highlight\">1</code>维度也就是列维度取前<code class=\"x-inline-highlight\">3</code>大的数值，也就是其他维度保持不变，将列维度变为<code class=\"x-inline-highlight\">3</code>，并且保留的是前三大的元素。"}}],["$","h2",null,{"className":"x-h1","children":["$","$L3",null,{"excludeFromContents":"$undefined","children":"pytorch"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"在pytorch中已经内置了<code class=\"x-inline-highlight\">topk</code>函数："}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$4"}}]}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">val</code>输出了前三大元素的值，<code class=\"x-inline-highlight\">idx</code>是索引，这已经是想要的结果了。"}}],["$","h2",null,{"className":"x-h1","children":["$","$L3",null,{"excludeFromContents":"$undefined","children":"numpy"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"numpy中没有直接实现<code class=\"x-inline-highlight\">topk</code>功能的函数，需要多一些步骤："}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"首先使用<code class=\"x-inline-highlight\">numpy.argpartition</code>函数，这个函数会将下标为<code class=\"x-inline-highlight\">kth</code>的元素排列到其正确位置并返回索引，保证其左边的元素都比它小，右边的元素都比它大，但左右两侧的序列并不一定是有序的。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"由于<code class=\"x-inline-highlight\">numpy.argpartition</code>的排列顺序是从小到大，为了得到从大到小的索引，对输入<code class=\"x-inline-highlight\">arr</code>取了负值。"}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"idx<span class=\"token operator\">=</span>numpy<span class=\"token punctuation\">.</span>argpartition<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>arr<span class=\"token punctuation\">,</span>kth<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [[3 4 2 1 0]</span>\n<span class=\"token comment\">#  [3 0 4 2 1]</span>\n<span class=\"token comment\">#  [0 4 1 3 2]</span>\n<span class=\"token comment\">#  [3 4 2 0 1]]</span>\n"}}]}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"第二步，我们只留下前<code class=\"x-inline-highlight\">k</code>大的元素的索引："}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"idx<span class=\"token operator\">=</span>idx<span class=\"token punctuation\">.</span>take<span class=\"token punctuation\">(</span>indices<span class=\"token operator\">=</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [[3 4 2]</span>\n<span class=\"token comment\">#  [3 0 4]</span>\n<span class=\"token comment\">#  [0 4 1]</span>\n<span class=\"token comment\">#  [3 4 2]]</span>\n"}}]}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"第三步，需要通过<code class=\"x-inline-highlight\">numpy.take_along_axis</code>函数得到按<code class=\"x-inline-highlight\">idx</code>排列的数组。"}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"val<span class=\"token operator\">=</span>numpy<span class=\"token punctuation\">.</span>take_along_axis<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span>indices<span class=\"token operator\">=</span>idx<span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [[7 8 5]</span>\n<span class=\"token comment\">#  [8 9 4]</span>\n<span class=\"token comment\">#  [8 6 5]</span>\n<span class=\"token comment\">#  [6 5 4]]</span>\n"}}]}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"到现在为止，我们已经得到了<span class=\"x-inline-strong\">乱序</span>的数组值和索引值，因此最后一步是使用<code class=\"x-inline-highlight\">numpy.argsort</code>进行排序。"}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$5"}}]}]}],["$","h2",null,{"className":"x-h1","children":["$","$L3",null,{"excludeFromContents":"$undefined","children":"封装"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"我们可以在numpy中封装一个和torch的<code class=\"x-inline-highlight\">topk</code>类似的函数："}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$6"}}]}]}],["$","div",null,{"className":"x-highlightblock highlight-background-golden","children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这个函数只实现了torch库中<code class=\"x-inline-highlight\">topk</code>函数最基本的功能，并不全面~"}}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"检验一下是否正确："}}],["$","div",null,{"className":"x-codeblock","children":["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$7"}}]}]}],["$","h2",null,{"className":"x-h1","children":["$","$L3",null,{"excludeFromContents":"$undefined","children":"讨论"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"上述方法核心是<span class=\"x-inline-strong\">先切片、再排序</span>。这是由于<code class=\"x-inline-highlight\">argpartition</code>和<code class=\"x-inline-highlight\">argsort</code>的性能差异："}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">argsort</code>对全部数组进行排序，而<code class=\"x-inline-highlight\">argpartition</code>只进行一次类似快速排序算法中的划分操作，因此<code class=\"x-inline-highlight\">argpartition</code>效率更高。对于<code class=\"x-inline-highlight\">topk</code>函数想要实现的功能，尽管先全排序、再切片从代码上更好编写，但当<code class=\"x-inline-highlight\">k</code>远小于<code class=\"x-inline-highlight\">dim</code>维度大小时，是较为低效的做法。"}}]],null]]},["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","(blogs)","children","24a","children","torch-numpy-topk","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/70373e6f6e0beca4.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","(blogs)","children","24a","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","div",null,{"id":"blog-layout","children":[["$","div",null,{"id":"main","children":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","(blogs)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]}],["$","$La",null,{}],["$","$Lb",null,{}]]}],null]]},[null,["$","html",null,{"lang":"zh-CN","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-45BYSZ6WPY"}],["$","script",null,{"async":true,"src":"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag() {\n    dataLayer.push(arguments);\n}\ngtag('js', new Date());\ngtag('config', 'G-45BYSZ6WPY');\nif (!localStorage.getItem('theme')) localStorage.setItem('theme', 'light');\ndocument.documentElement.setAttribute('class', localStorage.getItem('theme'));\n"}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"const a=z=>h.getItem(z),b=(y,z)=>h.setItem(y,z),c=(y,z)=>document.documentElement.setAttribute(y,z),d='theme',e='dark',f='light',g='class',h=localStorage;a(d)!==e&&a(d)!==f&&b(d,f);a(d)===e?c(g,e):c(g,f);"}}]]}],["$","body",null,{"children":["$","$Lc",null,{"children":[["$","$Ld",null,{}],["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"id":"notfound","children":[["$","img",null,{"alt":"img","src":"/images/cry.gif"}],["$","div",null,{"id":"notfound-404","children":"404"}],["$","div",null,{"id":"notfound-text","children":"Page Not Found"}]]}],"notFoundStyles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/eccd2e7a1149e571.css","precedence":"next","crossOrigin":""}]],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/803fe687e7e31b6c.css","precedence":"next","crossOrigin":""}]]}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e43a733539111c31.css","precedence":"next","crossOrigin":""}]],"$Le"]]]]
e:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"在pytorch和numpy中取top-k值和索引 - 铃木的网络日记"}],["$","meta","3",{"name":"description","content":"..."}],["$","link","4",{"rel":"canonical","href":"https://1kuzus.github.io/24a/torch-numpy-topk/"}]]
1:null
